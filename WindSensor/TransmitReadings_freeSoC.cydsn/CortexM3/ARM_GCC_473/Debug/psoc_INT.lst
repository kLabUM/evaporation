ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc9J4kDS.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"psoc_INT.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.psoc_ISR,"ax",%progbits
  19              		.align	2
  20              		.global	psoc_ISR
  21              		.thumb
  22              		.thumb_func
  23              		.type	psoc_ISR, %function
  24              	psoc_ISR:
  25              	.LFB0:
  26              		.file 1 ".\\Generated_Source\\PSoC5\\psoc_INT.c"
   1:.\Generated_Source\PSoC5/psoc_INT.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC5/psoc_INT.c **** * File Name: psoc_INT.c
   3:.\Generated_Source\PSoC5/psoc_INT.c **** * Version 3.30
   4:.\Generated_Source\PSoC5/psoc_INT.c **** *
   5:.\Generated_Source\PSoC5/psoc_INT.c **** * Description:
   6:.\Generated_Source\PSoC5/psoc_INT.c **** *  This file provides the source code of Interrupt Service Routine (ISR)
   7:.\Generated_Source\PSoC5/psoc_INT.c **** *  for I2C component.
   8:.\Generated_Source\PSoC5/psoc_INT.c **** *
   9:.\Generated_Source\PSoC5/psoc_INT.c **** *  Note:
  10:.\Generated_Source\PSoC5/psoc_INT.c **** *
  11:.\Generated_Source\PSoC5/psoc_INT.c **** ********************************************************************************
  12:.\Generated_Source\PSoC5/psoc_INT.c **** * Copyright 2008-2012, Cypress Semiconductor Corporation.  All rights reserved.
  13:.\Generated_Source\PSoC5/psoc_INT.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:.\Generated_Source\PSoC5/psoc_INT.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:.\Generated_Source\PSoC5/psoc_INT.c **** * the software package with which this file was provided.
  16:.\Generated_Source\PSoC5/psoc_INT.c **** *******************************************************************************/
  17:.\Generated_Source\PSoC5/psoc_INT.c **** 
  18:.\Generated_Source\PSoC5/psoc_INT.c **** #include "psoc_PVT.h"
  19:.\Generated_Source\PSoC5/psoc_INT.c **** 
  20:.\Generated_Source\PSoC5/psoc_INT.c **** 
  21:.\Generated_Source\PSoC5/psoc_INT.c **** /*******************************************************************************
  22:.\Generated_Source\PSoC5/psoc_INT.c **** *  Place your includes, defines and code here
  23:.\Generated_Source\PSoC5/psoc_INT.c **** ********************************************************************************/
  24:.\Generated_Source\PSoC5/psoc_INT.c **** /* `#START psoc_ISR_intc` */
  25:.\Generated_Source\PSoC5/psoc_INT.c **** 
  26:.\Generated_Source\PSoC5/psoc_INT.c **** /* `#END` */
  27:.\Generated_Source\PSoC5/psoc_INT.c **** 
  28:.\Generated_Source\PSoC5/psoc_INT.c **** 
  29:.\Generated_Source\PSoC5/psoc_INT.c **** /*******************************************************************************
  30:.\Generated_Source\PSoC5/psoc_INT.c **** * Function Name: psoc_ISR
  31:.\Generated_Source\PSoC5/psoc_INT.c **** ********************************************************************************
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc9J4kDS.s 			page 2


  32:.\Generated_Source\PSoC5/psoc_INT.c **** *
  33:.\Generated_Source\PSoC5/psoc_INT.c **** * Summary:
  34:.\Generated_Source\PSoC5/psoc_INT.c **** *  Handler for I2C interrupt. The Slave and Master operations are handled here.
  35:.\Generated_Source\PSoC5/psoc_INT.c **** *
  36:.\Generated_Source\PSoC5/psoc_INT.c **** * Parameters:
  37:.\Generated_Source\PSoC5/psoc_INT.c **** *  void
  38:.\Generated_Source\PSoC5/psoc_INT.c **** *
  39:.\Generated_Source\PSoC5/psoc_INT.c **** * Return:
  40:.\Generated_Source\PSoC5/psoc_INT.c **** *  void
  41:.\Generated_Source\PSoC5/psoc_INT.c **** *
  42:.\Generated_Source\PSoC5/psoc_INT.c **** * Reentrant:
  43:.\Generated_Source\PSoC5/psoc_INT.c **** *  No
  44:.\Generated_Source\PSoC5/psoc_INT.c **** *
  45:.\Generated_Source\PSoC5/psoc_INT.c **** *******************************************************************************/
  46:.\Generated_Source\PSoC5/psoc_INT.c **** CY_ISR(psoc_ISR)
  47:.\Generated_Source\PSoC5/psoc_INT.c **** {
  27              		.loc 1 47 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 8
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31 0000 80B5     		push	{r7, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 7, -8
  35              		.cfi_offset 14, -4
  36 0002 82B0     		sub	sp, sp, #8
  37              	.LCFI1:
  38              		.cfi_def_cfa_offset 16
  39 0004 00AF     		add	r7, sp, #0
  40              	.LCFI2:
  41              		.cfi_def_cfa_register 7
  48:.\Generated_Source\PSoC5/psoc_INT.c ****     #if(psoc_MODE_SLAVE_ENABLED)
  49:.\Generated_Source\PSoC5/psoc_INT.c ****        uint8  tmp8;
  50:.\Generated_Source\PSoC5/psoc_INT.c ****     #endif  /* (psoc_MODE_SLAVE_ENABLED) */
  51:.\Generated_Source\PSoC5/psoc_INT.c **** 
  52:.\Generated_Source\PSoC5/psoc_INT.c ****     uint8  tmpCsr;
  53:.\Generated_Source\PSoC5/psoc_INT.c **** 
  54:.\Generated_Source\PSoC5/psoc_INT.c ****     #if(psoc_TIMEOUT_FF_ENABLED)
  55:.\Generated_Source\PSoC5/psoc_INT.c ****         if(0u != psoc_TimeoutGetStatus())
  56:.\Generated_Source\PSoC5/psoc_INT.c ****         {
  57:.\Generated_Source\PSoC5/psoc_INT.c ****             psoc_TimeoutReset();
  58:.\Generated_Source\PSoC5/psoc_INT.c ****             psoc_state = psoc_SM_EXIT_IDLE;
  59:.\Generated_Source\PSoC5/psoc_INT.c ****             /* psoc_CSR_REG should be cleared after reset */
  60:.\Generated_Source\PSoC5/psoc_INT.c ****         }
  61:.\Generated_Source\PSoC5/psoc_INT.c ****     #endif /* (psoc_TIMEOUT_FF_ENABLED) */
  62:.\Generated_Source\PSoC5/psoc_INT.c **** 
  63:.\Generated_Source\PSoC5/psoc_INT.c **** 
  64:.\Generated_Source\PSoC5/psoc_INT.c ****     tmpCsr = psoc_CSR_REG;      /* Make copy as interrupts clear */
  42              		.loc 1 64 0
  43 0006 46F26853 		movw	r3, #25960
  44 000a C4F20003 		movt	r3, 16384
  45 000e 1B78     		ldrb	r3, [r3, #0]
  46 0010 FB71     		strb	r3, [r7, #7]
  65:.\Generated_Source\PSoC5/psoc_INT.c **** 
  66:.\Generated_Source\PSoC5/psoc_INT.c ****     #if(psoc_MODE_MULTI_MASTER_SLAVE_ENABLED)
  67:.\Generated_Source\PSoC5/psoc_INT.c ****         if(psoc_CHECK_START_GEN(psoc_MCSR_REG))
  68:.\Generated_Source\PSoC5/psoc_INT.c ****         {
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc9J4kDS.s 			page 3


  69:.\Generated_Source\PSoC5/psoc_INT.c ****             psoc_CLEAR_START_GEN;
  70:.\Generated_Source\PSoC5/psoc_INT.c **** 
  71:.\Generated_Source\PSoC5/psoc_INT.c ****             /* Set READ complete, but was aborted */
  72:.\Generated_Source\PSoC5/psoc_INT.c ****             psoc_mstrStatus |= (psoc_MSTAT_ERR_XFER |
  73:.\Generated_Source\PSoC5/psoc_INT.c ****                                             psoc_GET_MSTAT_CMPLT);
  74:.\Generated_Source\PSoC5/psoc_INT.c **** 
  75:.\Generated_Source\PSoC5/psoc_INT.c ****             /* The slave was addressed */
  76:.\Generated_Source\PSoC5/psoc_INT.c ****             psoc_state = psoc_SM_SLAVE;
  77:.\Generated_Source\PSoC5/psoc_INT.c ****         }
  78:.\Generated_Source\PSoC5/psoc_INT.c ****     #endif /* (psoc_MODE_MULTI_MASTER_SLAVE_ENABLED) */
  79:.\Generated_Source\PSoC5/psoc_INT.c **** 
  80:.\Generated_Source\PSoC5/psoc_INT.c **** 
  81:.\Generated_Source\PSoC5/psoc_INT.c ****     #if(psoc_MODE_MULTI_MASTER_ENABLED)
  82:.\Generated_Source\PSoC5/psoc_INT.c ****         if(psoc_CHECK_LOST_ARB(tmpCsr))
  83:.\Generated_Source\PSoC5/psoc_INT.c ****         {
  84:.\Generated_Source\PSoC5/psoc_INT.c ****             /* Set errors */
  85:.\Generated_Source\PSoC5/psoc_INT.c ****             psoc_mstrStatus |= (psoc_MSTAT_ERR_XFER     |
  86:.\Generated_Source\PSoC5/psoc_INT.c ****                                             psoc_MSTAT_ERR_ARB_LOST |
  87:.\Generated_Source\PSoC5/psoc_INT.c ****                                             psoc_GET_MSTAT_CMPLT);
  88:.\Generated_Source\PSoC5/psoc_INT.c **** 
  89:.\Generated_Source\PSoC5/psoc_INT.c ****             psoc_DISABLE_INT_ON_STOP; /* Interrupt on Stop is enabled by write */
  90:.\Generated_Source\PSoC5/psoc_INT.c **** 
  91:.\Generated_Source\PSoC5/psoc_INT.c ****             #if(psoc_MODE_MULTI_MASTER_SLAVE_ENABLED)
  92:.\Generated_Source\PSoC5/psoc_INT.c ****                 if(psoc_CHECK_ADDRESS_STS(tmpCsr))
  93:.\Generated_Source\PSoC5/psoc_INT.c ****                 {
  94:.\Generated_Source\PSoC5/psoc_INT.c ****                     /* The slave was addressed */
  95:.\Generated_Source\PSoC5/psoc_INT.c ****                     psoc_state = psoc_SM_SLAVE;
  96:.\Generated_Source\PSoC5/psoc_INT.c ****                 }
  97:.\Generated_Source\PSoC5/psoc_INT.c ****                 else
  98:.\Generated_Source\PSoC5/psoc_INT.c ****                 {
  99:.\Generated_Source\PSoC5/psoc_INT.c ****                     psoc_BUS_RELEASE;
 100:.\Generated_Source\PSoC5/psoc_INT.c **** 
 101:.\Generated_Source\PSoC5/psoc_INT.c ****                     psoc_state = psoc_SM_EXIT_IDLE;
 102:.\Generated_Source\PSoC5/psoc_INT.c ****                 }
 103:.\Generated_Source\PSoC5/psoc_INT.c ****             #else
 104:.\Generated_Source\PSoC5/psoc_INT.c ****                 psoc_BUS_RELEASE;
 105:.\Generated_Source\PSoC5/psoc_INT.c **** 
 106:.\Generated_Source\PSoC5/psoc_INT.c ****                 psoc_state = psoc_SM_EXIT_IDLE;
 107:.\Generated_Source\PSoC5/psoc_INT.c **** 
 108:.\Generated_Source\PSoC5/psoc_INT.c ****             #endif /* (psoc_MODE_MULTI_MASTER_SLAVE_ENABLED) */
 109:.\Generated_Source\PSoC5/psoc_INT.c ****         }
 110:.\Generated_Source\PSoC5/psoc_INT.c ****     #endif /* (psoc_MODE_MULTI_MASTER_ENABLED) */
 111:.\Generated_Source\PSoC5/psoc_INT.c **** 
 112:.\Generated_Source\PSoC5/psoc_INT.c ****     /* Check for Master operation mode */
 113:.\Generated_Source\PSoC5/psoc_INT.c ****     if(psoc_CHECK_SM_MASTER)
  47              		.loc 1 113 0
  48 0012 40F20003 		movw	r3, #:lower16:psoc_state
  49 0016 C0F20003 		movt	r3, #:upper16:psoc_state
  50 001a 1B78     		ldrb	r3, [r3, #0]
  51 001c DBB2     		uxtb	r3, r3
  52 001e 03F04003 		and	r3, r3, #64
  53 0022 DBB2     		uxtb	r3, r3
  54 0024 002B     		cmp	r3, #0
  55 0026 00F0C482 		beq	.L2
 114:.\Generated_Source\PSoC5/psoc_INT.c ****     {
 115:.\Generated_Source\PSoC5/psoc_INT.c ****         #if(psoc_MODE_MASTER_ENABLED)
 116:.\Generated_Source\PSoC5/psoc_INT.c ****             if(psoc_CHECK_BYTE_COMPLETE(tmpCsr))
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc9J4kDS.s 			page 4


  56              		.loc 1 116 0
  57 002a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
  58 002c 03F00103 		and	r3, r3, #1
  59 0030 002B     		cmp	r3, #0
  60 0032 00F08782 		beq	.L3
 117:.\Generated_Source\PSoC5/psoc_INT.c ****             {
 118:.\Generated_Source\PSoC5/psoc_INT.c ****                 switch (psoc_state)
  61              		.loc 1 118 0
  62 0036 40F20003 		movw	r3, #:lower16:psoc_state
  63 003a C0F20003 		movt	r3, #:upper16:psoc_state
  64 003e 1B78     		ldrb	r3, [r3, #0]
  65 0040 DBB2     		uxtb	r3, r3
  66 0042 A3F14503 		sub	r3, r3, #69
  67 0046 052B     		cmp	r3, #5
  68 0048 00F27782 		bhi	.L4
  69 004c 01A2     		adr	r2, .L8
  70 004e 52F823F0 		ldr	pc, [r2, r3, lsl #2]
  71 0052 00BF     		.align	2
  72              	.L8:
  73 0054 6D000000 		.word	.L5+1
  74 0058 7F020000 		.word	.L6+1
  75 005c 3B050000 		.word	.L4+1
  76 0060 3B050000 		.word	.L4+1
  77 0064 6D000000 		.word	.L5+1
  78 0068 37040000 		.word	.L7+1
  79              	.L5:
 119:.\Generated_Source\PSoC5/psoc_INT.c ****                 {
 120:.\Generated_Source\PSoC5/psoc_INT.c ****                 case psoc_SM_MSTR_WR_ADDR:  /* After address is sent, WRITE data */
 121:.\Generated_Source\PSoC5/psoc_INT.c ****                 case psoc_SM_MSTR_RD_ADDR:  /* After address is sent, READ  data */
 122:.\Generated_Source\PSoC5/psoc_INT.c **** 
 123:.\Generated_Source\PSoC5/psoc_INT.c ****                     tmpCsr &= ((uint8) ~psoc_CSR_STOP_STATUS); /* Clear STOP bit history on address
  80              		.loc 1 123 0
  81 006c FB79     		ldrb	r3, [r7, #7]
  82 006e 23F02003 		bic	r3, r3, #32
  83 0072 FB71     		strb	r3, [r7, #7]
 124:.\Generated_Source\PSoC5/psoc_INT.c ****                     
 125:.\Generated_Source\PSoC5/psoc_INT.c ****                     if(psoc_CHECK_ADDR_ACK(tmpCsr))
  84              		.loc 1 125 0
  85 0074 FB79     		ldrb	r3, [r7, #7]
  86 0076 03F00A03 		and	r3, r3, #10
  87 007a DBB2     		uxtb	r3, r3
  88 007c 082B     		cmp	r3, #8
  89 007e 40F09380 		bne	.L9
 126:.\Generated_Source\PSoC5/psoc_INT.c ****                     {
 127:.\Generated_Source\PSoC5/psoc_INT.c ****                         /* Setup for transmit or receive of data */
 128:.\Generated_Source\PSoC5/psoc_INT.c ****                         if(psoc_state == psoc_SM_MSTR_WR_ADDR)   /* TRANSMIT data */
  90              		.loc 1 128 0
  91 0082 40F20003 		movw	r3, #:lower16:psoc_state
  92 0086 C0F20003 		movt	r3, #:upper16:psoc_state
  93 008a 1B78     		ldrb	r3, [r3, #0]
  94 008c DBB2     		uxtb	r3, r3
  95 008e 452B     		cmp	r3, #69
  96 0090 74D1     		bne	.L10
 129:.\Generated_Source\PSoC5/psoc_INT.c ****                         {
 130:.\Generated_Source\PSoC5/psoc_INT.c ****                             /* Check if at least one byte to transfer */
 131:.\Generated_Source\PSoC5/psoc_INT.c ****                             if(psoc_mstrWrBufSize > 0u)
  97              		.loc 1 131 0
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc9J4kDS.s 			page 5


  98 0092 40F20003 		movw	r3, #:lower16:psoc_mstrWrBufSize
  99 0096 C0F20003 		movt	r3, #:upper16:psoc_mstrWrBufSize
 100 009a 1B78     		ldrb	r3, [r3, #0]
 101 009c DBB2     		uxtb	r3, r3
 102 009e 002B     		cmp	r3, #0
 103 00a0 28D0     		beq	.L11
 132:.\Generated_Source\PSoC5/psoc_INT.c ****                             {
 133:.\Generated_Source\PSoC5/psoc_INT.c ****                                 /* Load the 1st data byte */
 134:.\Generated_Source\PSoC5/psoc_INT.c ****                                 psoc_DATA_REG = psoc_mstrWrBufPtr[0u];
 104              		.loc 1 134 0
 105 00a2 46F20443 		movw	r3, #25604
 106 00a6 C4F20003 		movt	r3, 16384
 107 00aa 40F20002 		movw	r2, #:lower16:psoc_mstrWrBufPtr
 108 00ae C0F20002 		movt	r2, #:upper16:psoc_mstrWrBufPtr
 109 00b2 1268     		ldr	r2, [r2, #0]
 110 00b4 1278     		ldrb	r2, [r2, #0]
 111 00b6 D2B2     		uxtb	r2, r2
 112 00b8 1A70     		strb	r2, [r3, #0]
 135:.\Generated_Source\PSoC5/psoc_INT.c ****                                 psoc_TRANSMIT_DATA;
 113              		.loc 1 135 0
 114 00ba 46F27B53 		movw	r3, #25979
 115 00be C4F20003 		movt	r3, 16384
 116 00c2 4FF00602 		mov	r2, #6
 117 00c6 1A70     		strb	r2, [r3, #0]
 118 00c8 46F25443 		movw	r3, #25684
 119 00cc C4F20003 		movt	r3, 16384
 120 00d0 4FF00002 		mov	r2, #0
 121 00d4 1A70     		strb	r2, [r3, #0]
 136:.\Generated_Source\PSoC5/psoc_INT.c ****                                 psoc_mstrWrBufIndex = 1u;   /* Set index to 2nd element */
 122              		.loc 1 136 0
 123 00d6 40F20003 		movw	r3, #:lower16:psoc_mstrWrBufIndex
 124 00da C0F20003 		movt	r3, #:upper16:psoc_mstrWrBufIndex
 125 00de 4FF00102 		mov	r2, #1
 126 00e2 1A70     		strb	r2, [r3, #0]
 137:.\Generated_Source\PSoC5/psoc_INT.c **** 
 138:.\Generated_Source\PSoC5/psoc_INT.c ****                                 /* Set transmit state until done */
 139:.\Generated_Source\PSoC5/psoc_INT.c ****                                 psoc_state = psoc_SM_MSTR_WR_DATA;
 127              		.loc 1 139 0
 128 00e4 40F20003 		movw	r3, #:lower16:psoc_state
 129 00e8 C0F20003 		movt	r3, #:upper16:psoc_state
 130 00ec 4FF04602 		mov	r2, #70
 131 00f0 1A70     		strb	r2, [r3, #0]
 140:.\Generated_Source\PSoC5/psoc_INT.c ****                             }
 141:.\Generated_Source\PSoC5/psoc_INT.c ****                             /* End of buffer: complete writing */
 142:.\Generated_Source\PSoC5/psoc_INT.c ****                             else if(psoc_CHECK_NO_STOP(psoc_mstrControl))
 143:.\Generated_Source\PSoC5/psoc_INT.c ****                             {
 144:.\Generated_Source\PSoC5/psoc_INT.c ****                                 #if(CY_PSOC5A)
 145:.\Generated_Source\PSoC5/psoc_INT.c ****                                     /* Do not handles 0 bytes transfer - HALT is NOT allowed */
 146:.\Generated_Source\PSoC5/psoc_INT.c ****                                     psoc_ENABLE_INT_ON_STOP;
 147:.\Generated_Source\PSoC5/psoc_INT.c ****                                     psoc_GENERATE_STOP;
 148:.\Generated_Source\PSoC5/psoc_INT.c ****                                 
 149:.\Generated_Source\PSoC5/psoc_INT.c ****                                 #else
 150:.\Generated_Source\PSoC5/psoc_INT.c ****                                     /* Set WRITE complete and Master HALTED */
 151:.\Generated_Source\PSoC5/psoc_INT.c ****                                     psoc_mstrStatus |= (psoc_MSTAT_XFER_HALT |
 152:.\Generated_Source\PSoC5/psoc_INT.c ****                                                                     psoc_MSTAT_WR_CMPLT);
 153:.\Generated_Source\PSoC5/psoc_INT.c **** 
 154:.\Generated_Source\PSoC5/psoc_INT.c ****                                     psoc_state = psoc_SM_MSTR_HALT; /* Expect RESTART */
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc9J4kDS.s 			page 6


 155:.\Generated_Source\PSoC5/psoc_INT.c ****                                     psoc_DisableInt();
 156:.\Generated_Source\PSoC5/psoc_INT.c ****                                 
 157:.\Generated_Source\PSoC5/psoc_INT.c ****                                 #endif /* (CY_PSOC5A) */
 158:.\Generated_Source\PSoC5/psoc_INT.c ****                             }
 159:.\Generated_Source\PSoC5/psoc_INT.c ****                             else
 160:.\Generated_Source\PSoC5/psoc_INT.c ****                             {
 161:.\Generated_Source\PSoC5/psoc_INT.c ****                                 psoc_ENABLE_INT_ON_STOP; /* Enable interrupt on STOP, to catch it *
 162:.\Generated_Source\PSoC5/psoc_INT.c ****                                 psoc_GENERATE_STOP;
 163:.\Generated_Source\PSoC5/psoc_INT.c ****                             }
 164:.\Generated_Source\PSoC5/psoc_INT.c ****                         }
 165:.\Generated_Source\PSoC5/psoc_INT.c ****                         else  /* Master Receive data */
 166:.\Generated_Source\PSoC5/psoc_INT.c ****                         {
 167:.\Generated_Source\PSoC5/psoc_INT.c ****                             psoc_READY_TO_READ; /* Release bus to read data */
 168:.\Generated_Source\PSoC5/psoc_INT.c **** 
 169:.\Generated_Source\PSoC5/psoc_INT.c ****                             psoc_state  = psoc_SM_MSTR_RD_DATA;
 170:.\Generated_Source\PSoC5/psoc_INT.c ****                         }
 171:.\Generated_Source\PSoC5/psoc_INT.c ****                     }
 172:.\Generated_Source\PSoC5/psoc_INT.c ****                     /* Address is NACKed */
 173:.\Generated_Source\PSoC5/psoc_INT.c ****                     else if(psoc_CHECK_ADDR_NAK(tmpCsr))
 174:.\Generated_Source\PSoC5/psoc_INT.c ****                     {
 175:.\Generated_Source\PSoC5/psoc_INT.c ****                         /* Set Address NAK error */
 176:.\Generated_Source\PSoC5/psoc_INT.c ****                         psoc_mstrStatus |= (psoc_MSTAT_ERR_XFER |
 177:.\Generated_Source\PSoC5/psoc_INT.c ****                                                         psoc_MSTAT_ERR_ADDR_NAK);
 178:.\Generated_Source\PSoC5/psoc_INT.c ****                                                         
 179:.\Generated_Source\PSoC5/psoc_INT.c ****                         if(psoc_CHECK_NO_STOP(psoc_mstrControl))
 180:.\Generated_Source\PSoC5/psoc_INT.c ****                         {
 181:.\Generated_Source\PSoC5/psoc_INT.c ****                             psoc_mstrStatus |= (psoc_MSTAT_XFER_HALT | 
 182:.\Generated_Source\PSoC5/psoc_INT.c ****                                                             psoc_GET_MSTAT_CMPLT);
 183:.\Generated_Source\PSoC5/psoc_INT.c **** 
 184:.\Generated_Source\PSoC5/psoc_INT.c ****                             psoc_state = psoc_SM_MSTR_HALT; /* Expect RESTART */
 185:.\Generated_Source\PSoC5/psoc_INT.c ****                             psoc_DisableInt();
 186:.\Generated_Source\PSoC5/psoc_INT.c ****                         }
 187:.\Generated_Source\PSoC5/psoc_INT.c ****                         else  /* Do normal Stop */
 188:.\Generated_Source\PSoC5/psoc_INT.c ****                         {
 189:.\Generated_Source\PSoC5/psoc_INT.c ****                             psoc_ENABLE_INT_ON_STOP; /* Enable interrupt on STOP, to catch it */
 190:.\Generated_Source\PSoC5/psoc_INT.c ****                             psoc_GENERATE_STOP;
 191:.\Generated_Source\PSoC5/psoc_INT.c ****                         }
 192:.\Generated_Source\PSoC5/psoc_INT.c ****                     }
 193:.\Generated_Source\PSoC5/psoc_INT.c ****                     else
 194:.\Generated_Source\PSoC5/psoc_INT.c ****                     {
 195:.\Generated_Source\PSoC5/psoc_INT.c ****                         /* Address phase is not set for some reason: error */
 196:.\Generated_Source\PSoC5/psoc_INT.c ****                         #if(psoc_TIMEOUT_ENABLED)
 197:.\Generated_Source\PSoC5/psoc_INT.c ****                             /* Exit from interrupt to take a chance for timeout timer handle this c
 198:.\Generated_Source\PSoC5/psoc_INT.c ****                             psoc_DisableInt();
 199:.\Generated_Source\PSoC5/psoc_INT.c ****                             psoc_ClearPendingInt();
 200:.\Generated_Source\PSoC5/psoc_INT.c ****                         #else
 201:.\Generated_Source\PSoC5/psoc_INT.c ****                             /* Block execution flow: unexpected condition */
 202:.\Generated_Source\PSoC5/psoc_INT.c ****                             CYASSERT(0u != 0u);
 203:.\Generated_Source\PSoC5/psoc_INT.c ****                         #endif /* (psoc_TIMEOUT_ENABLED) */
 204:.\Generated_Source\PSoC5/psoc_INT.c ****                     }
 205:.\Generated_Source\PSoC5/psoc_INT.c ****                     break;
 132              		.loc 1 205 0
 133 00f2 27E2     		b	.L3
 134              	.L11:
 142:.\Generated_Source\PSoC5/psoc_INT.c ****                             else if(psoc_CHECK_NO_STOP(psoc_mstrControl))
 135              		.loc 1 142 0
 136 00f4 40F20003 		movw	r3, #:lower16:psoc_mstrControl
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc9J4kDS.s 			page 7


 137 00f8 C0F20003 		movt	r3, #:upper16:psoc_mstrControl
 138 00fc 1B78     		ldrb	r3, [r3, #0]
 139 00fe DBB2     		uxtb	r3, r3
 140 0100 03F00203 		and	r3, r3, #2
 141 0104 002B     		cmp	r3, #0
 142 0106 1CD0     		beq	.L13
 151:.\Generated_Source\PSoC5/psoc_INT.c ****                                     psoc_mstrStatus |= (psoc_MSTAT_XFER_HALT |
 143              		.loc 1 151 0
 144 0108 40F20003 		movw	r3, #:lower16:psoc_mstrStatus
 145 010c C0F20003 		movt	r3, #:upper16:psoc_mstrStatus
 146 0110 1B78     		ldrb	r3, [r3, #0]
 147 0112 DBB2     		uxtb	r3, r3
 148 0114 43F00A03 		orr	r3, r3, #10
 149 0118 DAB2     		uxtb	r2, r3
 150 011a 40F20003 		movw	r3, #:lower16:psoc_mstrStatus
 151 011e C0F20003 		movt	r3, #:upper16:psoc_mstrStatus
 152 0122 1A70     		strb	r2, [r3, #0]
 154:.\Generated_Source\PSoC5/psoc_INT.c ****                                     psoc_state = psoc_SM_MSTR_HALT; /* Expect RESTART */
 153              		.loc 1 154 0
 154 0124 40F20003 		movw	r3, #:lower16:psoc_state
 155 0128 C0F20003 		movt	r3, #:upper16:psoc_state
 156 012c 4FF06002 		mov	r2, #96
 157 0130 1A70     		strb	r2, [r3, #0]
 155:.\Generated_Source\PSoC5/psoc_INT.c ****                                     psoc_DisableInt();
 158              		.loc 1 155 0
 159 0132 4EF28013 		movw	r3, #57728
 160 0136 CEF20003 		movt	r3, 57344
 161 013a 4FF00402 		mov	r2, #4
 162 013e 1A60     		str	r2, [r3, #0]
 163              		.loc 1 205 0
 164 0140 00E2     		b	.L3
 165              	.L13:
 161:.\Generated_Source\PSoC5/psoc_INT.c ****                                 psoc_ENABLE_INT_ON_STOP; /* Enable interrupt on STOP, to catch it *
 166              		.loc 1 161 0
 167 0142 46F28853 		movw	r3, #25992
 168 0146 C4F20003 		movt	r3, 16384
 169 014a 46F28852 		movw	r2, #25992
 170 014e C4F20002 		movt	r2, 16384
 171 0152 1278     		ldrb	r2, [r2, #0]
 172 0154 D2B2     		uxtb	r2, r2
 173 0156 42F02002 		orr	r2, r2, #32
 174 015a D2B2     		uxtb	r2, r2
 175 015c 1A70     		strb	r2, [r3, #0]
 162:.\Generated_Source\PSoC5/psoc_INT.c ****                                 psoc_GENERATE_STOP;
 176              		.loc 1 162 0
 177 015e 46F27B53 		movw	r3, #25979
 178 0162 C4F20003 		movt	r3, 16384
 179 0166 4FF05202 		mov	r2, #82
 180 016a 1A70     		strb	r2, [r3, #0]
 181 016c 46F25443 		movw	r3, #25684
 182 0170 C4F20003 		movt	r3, 16384
 183 0174 4FF00002 		mov	r2, #0
 184 0178 1A70     		strb	r2, [r3, #0]
 185              		.loc 1 205 0
 186 017a E3E1     		b	.L3
 187              	.L10:
 167:.\Generated_Source\PSoC5/psoc_INT.c ****                             psoc_READY_TO_READ; /* Release bus to read data */
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc9J4kDS.s 			page 8


 188              		.loc 1 167 0
 189 017c 46F27B53 		movw	r3, #25979
 190 0180 C4F20003 		movt	r3, 16384
 191 0184 4FF00202 		mov	r2, #2
 192 0188 1A70     		strb	r2, [r3, #0]
 193 018a 46F25443 		movw	r3, #25684
 194 018e C4F20003 		movt	r3, 16384
 195 0192 4FF00002 		mov	r2, #0
 196 0196 1A70     		strb	r2, [r3, #0]
 169:.\Generated_Source\PSoC5/psoc_INT.c ****                             psoc_state  = psoc_SM_MSTR_RD_DATA;
 197              		.loc 1 169 0
 198 0198 40F20003 		movw	r3, #:lower16:psoc_state
 199 019c C0F20003 		movt	r3, #:upper16:psoc_state
 200 01a0 4FF04A02 		mov	r2, #74
 201 01a4 1A70     		strb	r2, [r3, #0]
 202              		.loc 1 205 0
 203 01a6 CDE1     		b	.L3
 204              	.L9:
 173:.\Generated_Source\PSoC5/psoc_INT.c ****                     else if(psoc_CHECK_ADDR_NAK(tmpCsr))
 205              		.loc 1 173 0
 206 01a8 FB79     		ldrb	r3, [r7, #7]
 207 01aa 03F00A03 		and	r3, r3, #10
 208 01ae DBB2     		uxtb	r3, r3
 209 01b0 0A2B     		cmp	r3, #10
 210 01b2 5FD1     		bne	.L14
 176:.\Generated_Source\PSoC5/psoc_INT.c ****                         psoc_mstrStatus |= (psoc_MSTAT_ERR_XFER |
 211              		.loc 1 176 0
 212 01b4 40F20003 		movw	r3, #:lower16:psoc_mstrStatus
 213 01b8 C0F20003 		movt	r3, #:upper16:psoc_mstrStatus
 214 01bc 1B78     		ldrb	r3, [r3, #0]
 215 01be DBB2     		uxtb	r3, r3
 216 01c0 63F05F03 		orn	r3, r3, #95
 217 01c4 DAB2     		uxtb	r2, r3
 218 01c6 40F20003 		movw	r3, #:lower16:psoc_mstrStatus
 219 01ca C0F20003 		movt	r3, #:upper16:psoc_mstrStatus
 220 01ce 1A70     		strb	r2, [r3, #0]
 179:.\Generated_Source\PSoC5/psoc_INT.c ****                         if(psoc_CHECK_NO_STOP(psoc_mstrControl))
 221              		.loc 1 179 0
 222 01d0 40F20003 		movw	r3, #:lower16:psoc_mstrControl
 223 01d4 C0F20003 		movt	r3, #:upper16:psoc_mstrControl
 224 01d8 1B78     		ldrb	r3, [r3, #0]
 225 01da DBB2     		uxtb	r3, r3
 226 01dc 03F00203 		and	r3, r3, #2
 227 01e0 002B     		cmp	r3, #0
 228 01e2 2AD0     		beq	.L15
 182:.\Generated_Source\PSoC5/psoc_INT.c ****                                                             psoc_GET_MSTAT_CMPLT);
 229              		.loc 1 182 0
 230 01e4 40F20003 		movw	r3, #:lower16:psoc_state
 231 01e8 C0F20003 		movt	r3, #:upper16:psoc_state
 232 01ec 1B78     		ldrb	r3, [r3, #0]
 233 01ee DBB2     		uxtb	r3, r3
 234 01f0 03F00803 		and	r3, r3, #8
 181:.\Generated_Source\PSoC5/psoc_INT.c ****                             psoc_mstrStatus |= (psoc_MSTAT_XFER_HALT | 
 235              		.loc 1 181 0
 236 01f4 002B     		cmp	r3, #0
 237 01f6 02D0     		beq	.L16
 181:.\Generated_Source\PSoC5/psoc_INT.c ****                             psoc_mstrStatus |= (psoc_MSTAT_XFER_HALT | 
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc9J4kDS.s 			page 9


 238              		.loc 1 181 0 is_stmt 0 discriminator 1
 239 01f8 4FF00902 		mov	r2, #9
 240 01fc 01E0     		b	.L17
 241              	.L16:
 181:.\Generated_Source\PSoC5/psoc_INT.c ****                             psoc_mstrStatus |= (psoc_MSTAT_XFER_HALT | 
 242              		.loc 1 181 0 discriminator 2
 243 01fe 4FF00A02 		mov	r2, #10
 244              	.L17:
 181:.\Generated_Source\PSoC5/psoc_INT.c ****                             psoc_mstrStatus |= (psoc_MSTAT_XFER_HALT | 
 245              		.loc 1 181 0 discriminator 3
 246 0202 40F20003 		movw	r3, #:lower16:psoc_mstrStatus
 247 0206 C0F20003 		movt	r3, #:upper16:psoc_mstrStatus
 248 020a 1B78     		ldrb	r3, [r3, #0]
 249 020c DBB2     		uxtb	r3, r3
 250 020e 1343     		orrs	r3, r3, r2
 251 0210 DAB2     		uxtb	r2, r3
 252 0212 40F20003 		movw	r3, #:lower16:psoc_mstrStatus
 253 0216 C0F20003 		movt	r3, #:upper16:psoc_mstrStatus
 254 021a 1A70     		strb	r2, [r3, #0]
 184:.\Generated_Source\PSoC5/psoc_INT.c ****                             psoc_state = psoc_SM_MSTR_HALT; /* Expect RESTART */
 255              		.loc 1 184 0 is_stmt 1 discriminator 3
 256 021c 40F20003 		movw	r3, #:lower16:psoc_state
 257 0220 C0F20003 		movt	r3, #:upper16:psoc_state
 258 0224 4FF06002 		mov	r2, #96
 259 0228 1A70     		strb	r2, [r3, #0]
 185:.\Generated_Source\PSoC5/psoc_INT.c ****                             psoc_DisableInt();
 260              		.loc 1 185 0 discriminator 3
 261 022a 4EF28013 		movw	r3, #57728
 262 022e CEF20003 		movt	r3, 57344
 263 0232 4FF00402 		mov	r2, #4
 264 0236 1A60     		str	r2, [r3, #0]
 265              		.loc 1 205 0 discriminator 3
 266 0238 84E1     		b	.L3
 267              	.L15:
 189:.\Generated_Source\PSoC5/psoc_INT.c ****                             psoc_ENABLE_INT_ON_STOP; /* Enable interrupt on STOP, to catch it */
 268              		.loc 1 189 0
 269 023a 46F28853 		movw	r3, #25992
 270 023e C4F20003 		movt	r3, 16384
 271 0242 46F28852 		movw	r2, #25992
 272 0246 C4F20002 		movt	r2, 16384
 273 024a 1278     		ldrb	r2, [r2, #0]
 274 024c D2B2     		uxtb	r2, r2
 275 024e 42F02002 		orr	r2, r2, #32
 276 0252 D2B2     		uxtb	r2, r2
 277 0254 1A70     		strb	r2, [r3, #0]
 190:.\Generated_Source\PSoC5/psoc_INT.c ****                             psoc_GENERATE_STOP;
 278              		.loc 1 190 0
 279 0256 46F27B53 		movw	r3, #25979
 280 025a C4F20003 		movt	r3, 16384
 281 025e 4FF05202 		mov	r2, #82
 282 0262 1A70     		strb	r2, [r3, #0]
 283 0264 46F25443 		movw	r3, #25684
 284 0268 C4F20003 		movt	r3, 16384
 285 026c 4FF00002 		mov	r2, #0
 286 0270 1A70     		strb	r2, [r3, #0]
 287              		.loc 1 205 0
 288 0272 67E1     		b	.L3
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc9J4kDS.s 			page 10


 289              	.L14:
 202:.\Generated_Source\PSoC5/psoc_INT.c ****                             CYASSERT(0u != 0u);
 290              		.loc 1 202 0 discriminator 1
 291 0274 4FF00000 		mov	r0, #0
 292 0278 FFF7FEFF 		bl	CyHalt
 293              		.loc 1 205 0 discriminator 1
 294 027c 62E1     		b	.L3
 295              	.L6:
 206:.\Generated_Source\PSoC5/psoc_INT.c **** 
 207:.\Generated_Source\PSoC5/psoc_INT.c ****                 case psoc_SM_MSTR_WR_DATA:
 208:.\Generated_Source\PSoC5/psoc_INT.c **** 
 209:.\Generated_Source\PSoC5/psoc_INT.c ****                     if(psoc_CHECK_DATA_ACK(tmpCsr))
 296              		.loc 1 209 0
 297 027e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 298 0280 03F00203 		and	r3, r3, #2
 299 0284 002B     		cmp	r3, #0
 300 0286 40F08480 		bne	.L18
 210:.\Generated_Source\PSoC5/psoc_INT.c ****                     {
 211:.\Generated_Source\PSoC5/psoc_INT.c ****                         /* Check if end of buffer */
 212:.\Generated_Source\PSoC5/psoc_INT.c ****                         if(psoc_mstrWrBufIndex  < psoc_mstrWrBufSize)
 301              		.loc 1 212 0
 302 028a 40F20003 		movw	r3, #:lower16:psoc_mstrWrBufIndex
 303 028e C0F20003 		movt	r3, #:upper16:psoc_mstrWrBufIndex
 304 0292 1B78     		ldrb	r3, [r3, #0]
 305 0294 DAB2     		uxtb	r2, r3
 306 0296 40F20003 		movw	r3, #:lower16:psoc_mstrWrBufSize
 307 029a C0F20003 		movt	r3, #:upper16:psoc_mstrWrBufSize
 308 029e 1B78     		ldrb	r3, [r3, #0]
 309 02a0 DBB2     		uxtb	r3, r3
 310 02a2 9A42     		cmp	r2, r3
 311 02a4 2FD2     		bcs	.L19
 213:.\Generated_Source\PSoC5/psoc_INT.c ****                         {
 214:.\Generated_Source\PSoC5/psoc_INT.c ****                             psoc_DATA_REG =
 312              		.loc 1 214 0
 313 02a6 46F20443 		movw	r3, #25604
 314 02aa C4F20003 		movt	r3, 16384
 215:.\Generated_Source\PSoC5/psoc_INT.c ****                                                      psoc_mstrWrBufPtr[psoc_mstrWrBufIndex];
 315              		.loc 1 215 0
 316 02ae 40F20002 		movw	r2, #:lower16:psoc_mstrWrBufPtr
 317 02b2 C0F20002 		movt	r2, #:upper16:psoc_mstrWrBufPtr
 318 02b6 1168     		ldr	r1, [r2, #0]
 319 02b8 40F20002 		movw	r2, #:lower16:psoc_mstrWrBufIndex
 320 02bc C0F20002 		movt	r2, #:upper16:psoc_mstrWrBufIndex
 321 02c0 1278     		ldrb	r2, [r2, #0]
 322 02c2 D2B2     		uxtb	r2, r2
 323 02c4 8A18     		adds	r2, r1, r2
 324 02c6 1278     		ldrb	r2, [r2, #0]
 325 02c8 D2B2     		uxtb	r2, r2
 214:.\Generated_Source\PSoC5/psoc_INT.c ****                             psoc_DATA_REG =
 326              		.loc 1 214 0
 327 02ca 1A70     		strb	r2, [r3, #0]
 216:.\Generated_Source\PSoC5/psoc_INT.c ****                             psoc_TRANSMIT_DATA;
 328              		.loc 1 216 0
 329 02cc 46F27B53 		movw	r3, #25979
 330 02d0 C4F20003 		movt	r3, 16384
 331 02d4 4FF00602 		mov	r2, #6
 332 02d8 1A70     		strb	r2, [r3, #0]
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc9J4kDS.s 			page 11


 333 02da 46F25443 		movw	r3, #25684
 334 02de C4F20003 		movt	r3, 16384
 335 02e2 4FF00002 		mov	r2, #0
 336 02e6 1A70     		strb	r2, [r3, #0]
 217:.\Generated_Source\PSoC5/psoc_INT.c ****                             psoc_mstrWrBufIndex++;
 337              		.loc 1 217 0
 338 02e8 40F20003 		movw	r3, #:lower16:psoc_mstrWrBufIndex
 339 02ec C0F20003 		movt	r3, #:upper16:psoc_mstrWrBufIndex
 340 02f0 1B78     		ldrb	r3, [r3, #0]
 341 02f2 DBB2     		uxtb	r3, r3
 342 02f4 03F10103 		add	r3, r3, #1
 343 02f8 DAB2     		uxtb	r2, r3
 344 02fa 40F20003 		movw	r3, #:lower16:psoc_mstrWrBufIndex
 345 02fe C0F20003 		movt	r3, #:upper16:psoc_mstrWrBufIndex
 346 0302 1A70     		strb	r2, [r3, #0]
 218:.\Generated_Source\PSoC5/psoc_INT.c ****                         }
 219:.\Generated_Source\PSoC5/psoc_INT.c ****                         /* End of buffer: complete writing */
 220:.\Generated_Source\PSoC5/psoc_INT.c ****                         else if(psoc_CHECK_NO_STOP(psoc_mstrControl))
 221:.\Generated_Source\PSoC5/psoc_INT.c ****                         {
 222:.\Generated_Source\PSoC5/psoc_INT.c ****                             /* Set WRITE complete and Master HALTED */
 223:.\Generated_Source\PSoC5/psoc_INT.c ****                             psoc_mstrStatus |= (psoc_MSTAT_XFER_HALT |
 224:.\Generated_Source\PSoC5/psoc_INT.c ****                                                             psoc_MSTAT_WR_CMPLT);
 225:.\Generated_Source\PSoC5/psoc_INT.c **** 
 226:.\Generated_Source\PSoC5/psoc_INT.c ****                             psoc_state = psoc_SM_MSTR_HALT;    /* Expect RESTART */
 227:.\Generated_Source\PSoC5/psoc_INT.c ****                             psoc_DisableInt();
 228:.\Generated_Source\PSoC5/psoc_INT.c ****                         }
 229:.\Generated_Source\PSoC5/psoc_INT.c ****                         else  /* Do normal STOP */
 230:.\Generated_Source\PSoC5/psoc_INT.c ****                         {
 231:.\Generated_Source\PSoC5/psoc_INT.c ****                             psoc_Workaround();          /* Workaround: empty function */
 232:.\Generated_Source\PSoC5/psoc_INT.c ****                             psoc_ENABLE_INT_ON_STOP;    /* Enable interrupt on STOP, to catch it */
 233:.\Generated_Source\PSoC5/psoc_INT.c ****                             psoc_GENERATE_STOP;
 234:.\Generated_Source\PSoC5/psoc_INT.c ****                         }
 235:.\Generated_Source\PSoC5/psoc_INT.c ****                     }
 236:.\Generated_Source\PSoC5/psoc_INT.c ****                     /* Last byte NAKed: end writing */
 237:.\Generated_Source\PSoC5/psoc_INT.c ****                     else if(psoc_CHECK_NO_STOP(psoc_mstrControl))
 238:.\Generated_Source\PSoC5/psoc_INT.c ****                     {
 239:.\Generated_Source\PSoC5/psoc_INT.c ****                         /* Set WRITE complete, SHORT transfer and Master HALTED */
 240:.\Generated_Source\PSoC5/psoc_INT.c ****                         psoc_mstrStatus |= (psoc_MSTAT_ERR_XFER       |
 241:.\Generated_Source\PSoC5/psoc_INT.c ****                                                         psoc_MSTAT_ERR_SHORT_XFER |
 242:.\Generated_Source\PSoC5/psoc_INT.c ****                                                         psoc_MSTAT_XFER_HALT      |
 243:.\Generated_Source\PSoC5/psoc_INT.c ****                                                         psoc_MSTAT_WR_CMPLT);
 244:.\Generated_Source\PSoC5/psoc_INT.c **** 
 245:.\Generated_Source\PSoC5/psoc_INT.c ****                         psoc_state = psoc_SM_MSTR_HALT;    /* Expect RESTART */
 246:.\Generated_Source\PSoC5/psoc_INT.c ****                         psoc_DisableInt();
 247:.\Generated_Source\PSoC5/psoc_INT.c ****                     }
 248:.\Generated_Source\PSoC5/psoc_INT.c ****                     else  /* Do normal STOP */
 249:.\Generated_Source\PSoC5/psoc_INT.c ****                     {
 250:.\Generated_Source\PSoC5/psoc_INT.c ****                         psoc_ENABLE_INT_ON_STOP;    /* Enable interrupt on STOP, to catch it */
 251:.\Generated_Source\PSoC5/psoc_INT.c ****                         psoc_GENERATE_STOP;
 252:.\Generated_Source\PSoC5/psoc_INT.c **** 
 253:.\Generated_Source\PSoC5/psoc_INT.c ****                         /* Set SHORT and ERR transfer */
 254:.\Generated_Source\PSoC5/psoc_INT.c ****                         psoc_mstrStatus |= (psoc_MSTAT_ERR_SHORT_XFER |
 255:.\Generated_Source\PSoC5/psoc_INT.c ****                                                         psoc_MSTAT_ERR_XFER);
 256:.\Generated_Source\PSoC5/psoc_INT.c ****                     }
 257:.\Generated_Source\PSoC5/psoc_INT.c ****                     
 258:.\Generated_Source\PSoC5/psoc_INT.c ****                     break;
 347              		.loc 1 258 0
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc9J4kDS.s 			page 12


 348 0304 1EE1     		b	.L3
 349              	.L19:
 220:.\Generated_Source\PSoC5/psoc_INT.c ****                         else if(psoc_CHECK_NO_STOP(psoc_mstrControl))
 350              		.loc 1 220 0
 351 0306 40F20003 		movw	r3, #:lower16:psoc_mstrControl
 352 030a C0F20003 		movt	r3, #:upper16:psoc_mstrControl
 353 030e 1B78     		ldrb	r3, [r3, #0]
 354 0310 DBB2     		uxtb	r3, r3
 355 0312 03F00203 		and	r3, r3, #2
 356 0316 002B     		cmp	r3, #0
 357 0318 1CD0     		beq	.L21
 223:.\Generated_Source\PSoC5/psoc_INT.c ****                             psoc_mstrStatus |= (psoc_MSTAT_XFER_HALT |
 358              		.loc 1 223 0
 359 031a 40F20003 		movw	r3, #:lower16:psoc_mstrStatus
 360 031e C0F20003 		movt	r3, #:upper16:psoc_mstrStatus
 361 0322 1B78     		ldrb	r3, [r3, #0]
 362 0324 DBB2     		uxtb	r3, r3
 363 0326 43F00A03 		orr	r3, r3, #10
 364 032a DAB2     		uxtb	r2, r3
 365 032c 40F20003 		movw	r3, #:lower16:psoc_mstrStatus
 366 0330 C0F20003 		movt	r3, #:upper16:psoc_mstrStatus
 367 0334 1A70     		strb	r2, [r3, #0]
 226:.\Generated_Source\PSoC5/psoc_INT.c ****                             psoc_state = psoc_SM_MSTR_HALT;    /* Expect RESTART */
 368              		.loc 1 226 0
 369 0336 40F20003 		movw	r3, #:lower16:psoc_state
 370 033a C0F20003 		movt	r3, #:upper16:psoc_state
 371 033e 4FF06002 		mov	r2, #96
 372 0342 1A70     		strb	r2, [r3, #0]
 227:.\Generated_Source\PSoC5/psoc_INT.c ****                             psoc_DisableInt();
 373              		.loc 1 227 0
 374 0344 4EF28013 		movw	r3, #57728
 375 0348 CEF20003 		movt	r3, 57344
 376 034c 4FF00402 		mov	r2, #4
 377 0350 1A60     		str	r2, [r3, #0]
 378              		.loc 1 258 0
 379 0352 F7E0     		b	.L3
 380              	.L21:
 231:.\Generated_Source\PSoC5/psoc_INT.c ****                             psoc_Workaround();          /* Workaround: empty function */
 381              		.loc 1 231 0
 382 0354 FFF7FEFF 		bl	psoc_Workaround
 232:.\Generated_Source\PSoC5/psoc_INT.c ****                             psoc_ENABLE_INT_ON_STOP;    /* Enable interrupt on STOP, to catch it */
 383              		.loc 1 232 0
 384 0358 46F28853 		movw	r3, #25992
 385 035c C4F20003 		movt	r3, 16384
 386 0360 46F28852 		movw	r2, #25992
 387 0364 C4F20002 		movt	r2, 16384
 388 0368 1278     		ldrb	r2, [r2, #0]
 389 036a D2B2     		uxtb	r2, r2
 390 036c 42F02002 		orr	r2, r2, #32
 391 0370 D2B2     		uxtb	r2, r2
 392 0372 1A70     		strb	r2, [r3, #0]
 233:.\Generated_Source\PSoC5/psoc_INT.c ****                             psoc_GENERATE_STOP;
 393              		.loc 1 233 0
 394 0374 46F27B53 		movw	r3, #25979
 395 0378 C4F20003 		movt	r3, 16384
 396 037c 4FF05202 		mov	r2, #82
 397 0380 1A70     		strb	r2, [r3, #0]
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc9J4kDS.s 			page 13


 398 0382 46F25443 		movw	r3, #25684
 399 0386 C4F20003 		movt	r3, 16384
 400 038a 4FF00002 		mov	r2, #0
 401 038e 1A70     		strb	r2, [r3, #0]
 402              		.loc 1 258 0
 403 0390 D8E0     		b	.L3
 404              	.L18:
 237:.\Generated_Source\PSoC5/psoc_INT.c ****                     else if(psoc_CHECK_NO_STOP(psoc_mstrControl))
 405              		.loc 1 237 0
 406 0392 40F20003 		movw	r3, #:lower16:psoc_mstrControl
 407 0396 C0F20003 		movt	r3, #:upper16:psoc_mstrControl
 408 039a 1B78     		ldrb	r3, [r3, #0]
 409 039c DBB2     		uxtb	r3, r3
 410 039e 03F00203 		and	r3, r3, #2
 411 03a2 002B     		cmp	r3, #0
 412 03a4 1CD0     		beq	.L22
 240:.\Generated_Source\PSoC5/psoc_INT.c ****                         psoc_mstrStatus |= (psoc_MSTAT_ERR_XFER       |
 413              		.loc 1 240 0
 414 03a6 40F20003 		movw	r3, #:lower16:psoc_mstrStatus
 415 03aa C0F20003 		movt	r3, #:upper16:psoc_mstrStatus
 416 03ae 1B78     		ldrb	r3, [r3, #0]
 417 03b0 DBB2     		uxtb	r3, r3
 418 03b2 63F06503 		orn	r3, r3, #101
 419 03b6 DAB2     		uxtb	r2, r3
 420 03b8 40F20003 		movw	r3, #:lower16:psoc_mstrStatus
 421 03bc C0F20003 		movt	r3, #:upper16:psoc_mstrStatus
 422 03c0 1A70     		strb	r2, [r3, #0]
 245:.\Generated_Source\PSoC5/psoc_INT.c ****                         psoc_state = psoc_SM_MSTR_HALT;    /* Expect RESTART */
 423              		.loc 1 245 0
 424 03c2 40F20003 		movw	r3, #:lower16:psoc_state
 425 03c6 C0F20003 		movt	r3, #:upper16:psoc_state
 426 03ca 4FF06002 		mov	r2, #96
 427 03ce 1A70     		strb	r2, [r3, #0]
 246:.\Generated_Source\PSoC5/psoc_INT.c ****                         psoc_DisableInt();
 428              		.loc 1 246 0
 429 03d0 4EF28013 		movw	r3, #57728
 430 03d4 CEF20003 		movt	r3, 57344
 431 03d8 4FF00402 		mov	r2, #4
 432 03dc 1A60     		str	r2, [r3, #0]
 433              		.loc 1 258 0
 434 03de B1E0     		b	.L3
 435              	.L22:
 250:.\Generated_Source\PSoC5/psoc_INT.c ****                         psoc_ENABLE_INT_ON_STOP;    /* Enable interrupt on STOP, to catch it */
 436              		.loc 1 250 0
 437 03e0 46F28853 		movw	r3, #25992
 438 03e4 C4F20003 		movt	r3, 16384
 439 03e8 46F28852 		movw	r2, #25992
 440 03ec C4F20002 		movt	r2, 16384
 441 03f0 1278     		ldrb	r2, [r2, #0]
 442 03f2 D2B2     		uxtb	r2, r2
 443 03f4 42F02002 		orr	r2, r2, #32
 444 03f8 D2B2     		uxtb	r2, r2
 445 03fa 1A70     		strb	r2, [r3, #0]
 251:.\Generated_Source\PSoC5/psoc_INT.c ****                         psoc_GENERATE_STOP;
 446              		.loc 1 251 0
 447 03fc 46F27B53 		movw	r3, #25979
 448 0400 C4F20003 		movt	r3, 16384
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc9J4kDS.s 			page 14


 449 0404 4FF05202 		mov	r2, #82
 450 0408 1A70     		strb	r2, [r3, #0]
 451 040a 46F25443 		movw	r3, #25684
 452 040e C4F20003 		movt	r3, 16384
 453 0412 4FF00002 		mov	r2, #0
 454 0416 1A70     		strb	r2, [r3, #0]
 254:.\Generated_Source\PSoC5/psoc_INT.c ****                         psoc_mstrStatus |= (psoc_MSTAT_ERR_SHORT_XFER |
 455              		.loc 1 254 0
 456 0418 40F20003 		movw	r3, #:lower16:psoc_mstrStatus
 457 041c C0F20003 		movt	r3, #:upper16:psoc_mstrStatus
 458 0420 1B78     		ldrb	r3, [r3, #0]
 459 0422 DBB2     		uxtb	r3, r3
 460 0424 63F06F03 		orn	r3, r3, #111
 461 0428 DAB2     		uxtb	r2, r3
 462 042a 40F20003 		movw	r3, #:lower16:psoc_mstrStatus
 463 042e C0F20003 		movt	r3, #:upper16:psoc_mstrStatus
 464 0432 1A70     		strb	r2, [r3, #0]
 465              		.loc 1 258 0
 466 0434 86E0     		b	.L3
 467              	.L7:
 259:.\Generated_Source\PSoC5/psoc_INT.c **** 
 260:.\Generated_Source\PSoC5/psoc_INT.c ****                 case psoc_SM_MSTR_RD_DATA:
 261:.\Generated_Source\PSoC5/psoc_INT.c **** 
 262:.\Generated_Source\PSoC5/psoc_INT.c ****                     psoc_mstrRdBufPtr[psoc_mstrRdBufIndex] = psoc_DATA_REG;
 468              		.loc 1 262 0
 469 0436 40F20003 		movw	r3, #:lower16:psoc_mstrRdBufPtr
 470 043a C0F20003 		movt	r3, #:upper16:psoc_mstrRdBufPtr
 471 043e 1A68     		ldr	r2, [r3, #0]
 472 0440 40F20003 		movw	r3, #:lower16:psoc_mstrRdBufIndex
 473 0444 C0F20003 		movt	r3, #:upper16:psoc_mstrRdBufIndex
 474 0448 1B78     		ldrb	r3, [r3, #0]
 475 044a DBB2     		uxtb	r3, r3
 476 044c D218     		adds	r2, r2, r3
 477 044e 46F20443 		movw	r3, #25604
 478 0452 C4F20003 		movt	r3, 16384
 479 0456 1B78     		ldrb	r3, [r3, #0]
 480 0458 DBB2     		uxtb	r3, r3
 481 045a 1370     		strb	r3, [r2, #0]
 263:.\Generated_Source\PSoC5/psoc_INT.c ****                     psoc_mstrRdBufIndex++;
 482              		.loc 1 263 0
 483 045c 40F20003 		movw	r3, #:lower16:psoc_mstrRdBufIndex
 484 0460 C0F20003 		movt	r3, #:upper16:psoc_mstrRdBufIndex
 485 0464 1B78     		ldrb	r3, [r3, #0]
 486 0466 DBB2     		uxtb	r3, r3
 487 0468 03F10103 		add	r3, r3, #1
 488 046c DAB2     		uxtb	r2, r3
 489 046e 40F20003 		movw	r3, #:lower16:psoc_mstrRdBufIndex
 490 0472 C0F20003 		movt	r3, #:upper16:psoc_mstrRdBufIndex
 491 0476 1A70     		strb	r2, [r3, #0]
 264:.\Generated_Source\PSoC5/psoc_INT.c **** 
 265:.\Generated_Source\PSoC5/psoc_INT.c ****                     /* Check if end of buffer */
 266:.\Generated_Source\PSoC5/psoc_INT.c ****                     if(psoc_mstrRdBufIndex < psoc_mstrRdBufSize)
 492              		.loc 1 266 0
 493 0478 40F20003 		movw	r3, #:lower16:psoc_mstrRdBufIndex
 494 047c C0F20003 		movt	r3, #:upper16:psoc_mstrRdBufIndex
 495 0480 1B78     		ldrb	r3, [r3, #0]
 496 0482 DAB2     		uxtb	r2, r3
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc9J4kDS.s 			page 15


 497 0484 40F20003 		movw	r3, #:lower16:psoc_mstrRdBufSize
 498 0488 C0F20003 		movt	r3, #:upper16:psoc_mstrRdBufSize
 499 048c 1B78     		ldrb	r3, [r3, #0]
 500 048e DBB2     		uxtb	r3, r3
 501 0490 9A42     		cmp	r2, r3
 502 0492 0ED2     		bcs	.L23
 267:.\Generated_Source\PSoC5/psoc_INT.c ****                     {
 268:.\Generated_Source\PSoC5/psoc_INT.c ****                         psoc_ACK_AND_RECEIVE;       /* ACK and receive byte */
 503              		.loc 1 268 0
 504 0494 46F27B53 		movw	r3, #25979
 505 0498 C4F20003 		movt	r3, 16384
 506 049c 4FF00202 		mov	r2, #2
 507 04a0 1A70     		strb	r2, [r3, #0]
 508 04a2 46F25443 		movw	r3, #25684
 509 04a6 C4F20003 		movt	r3, 16384
 510 04aa 4FF00002 		mov	r2, #0
 511 04ae 1A70     		strb	r2, [r3, #0]
 269:.\Generated_Source\PSoC5/psoc_INT.c ****                     }
 270:.\Generated_Source\PSoC5/psoc_INT.c ****                     /* End of buffer: complete reading */
 271:.\Generated_Source\PSoC5/psoc_INT.c ****                     else if(psoc_CHECK_NO_STOP(psoc_mstrControl))
 272:.\Generated_Source\PSoC5/psoc_INT.c ****                     {                        
 273:.\Generated_Source\PSoC5/psoc_INT.c ****                         /* Set READ complete and Master HALTED */
 274:.\Generated_Source\PSoC5/psoc_INT.c ****                         psoc_mstrStatus |= (psoc_MSTAT_XFER_HALT |
 275:.\Generated_Source\PSoC5/psoc_INT.c ****                                                         psoc_MSTAT_RD_CMPLT);
 276:.\Generated_Source\PSoC5/psoc_INT.c ****                         
 277:.\Generated_Source\PSoC5/psoc_INT.c ****                         psoc_state = psoc_SM_MSTR_HALT;    /* Expect RESTART */
 278:.\Generated_Source\PSoC5/psoc_INT.c ****                         psoc_DisableInt();
 279:.\Generated_Source\PSoC5/psoc_INT.c ****                     }
 280:.\Generated_Source\PSoC5/psoc_INT.c ****                     else
 281:.\Generated_Source\PSoC5/psoc_INT.c ****                     {
 282:.\Generated_Source\PSoC5/psoc_INT.c ****                         psoc_ENABLE_INT_ON_STOP;
 283:.\Generated_Source\PSoC5/psoc_INT.c ****                         psoc_NAK_AND_RECEIVE;       /* NACK and TRY to generate STOP */
 284:.\Generated_Source\PSoC5/psoc_INT.c ****                     }
 285:.\Generated_Source\PSoC5/psoc_INT.c ****                     break;
 512              		.loc 1 285 0
 513 04b0 48E0     		b	.L3
 514              	.L23:
 271:.\Generated_Source\PSoC5/psoc_INT.c ****                     else if(psoc_CHECK_NO_STOP(psoc_mstrControl))
 515              		.loc 1 271 0
 516 04b2 40F20003 		movw	r3, #:lower16:psoc_mstrControl
 517 04b6 C0F20003 		movt	r3, #:upper16:psoc_mstrControl
 518 04ba 1B78     		ldrb	r3, [r3, #0]
 519 04bc DBB2     		uxtb	r3, r3
 520 04be 03F00203 		and	r3, r3, #2
 521 04c2 002B     		cmp	r3, #0
 522 04c4 1CD0     		beq	.L25
 274:.\Generated_Source\PSoC5/psoc_INT.c ****                         psoc_mstrStatus |= (psoc_MSTAT_XFER_HALT |
 523              		.loc 1 274 0
 524 04c6 40F20003 		movw	r3, #:lower16:psoc_mstrStatus
 525 04ca C0F20003 		movt	r3, #:upper16:psoc_mstrStatus
 526 04ce 1B78     		ldrb	r3, [r3, #0]
 527 04d0 DBB2     		uxtb	r3, r3
 528 04d2 43F00903 		orr	r3, r3, #9
 529 04d6 DAB2     		uxtb	r2, r3
 530 04d8 40F20003 		movw	r3, #:lower16:psoc_mstrStatus
 531 04dc C0F20003 		movt	r3, #:upper16:psoc_mstrStatus
 532 04e0 1A70     		strb	r2, [r3, #0]
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc9J4kDS.s 			page 16


 277:.\Generated_Source\PSoC5/psoc_INT.c ****                         psoc_state = psoc_SM_MSTR_HALT;    /* Expect RESTART */
 533              		.loc 1 277 0
 534 04e2 40F20003 		movw	r3, #:lower16:psoc_state
 535 04e6 C0F20003 		movt	r3, #:upper16:psoc_state
 536 04ea 4FF06002 		mov	r2, #96
 537 04ee 1A70     		strb	r2, [r3, #0]
 278:.\Generated_Source\PSoC5/psoc_INT.c ****                         psoc_DisableInt();
 538              		.loc 1 278 0
 539 04f0 4EF28013 		movw	r3, #57728
 540 04f4 CEF20003 		movt	r3, 57344
 541 04f8 4FF00402 		mov	r2, #4
 542 04fc 1A60     		str	r2, [r3, #0]
 543              		.loc 1 285 0
 544 04fe 21E0     		b	.L3
 545              	.L25:
 282:.\Generated_Source\PSoC5/psoc_INT.c ****                         psoc_ENABLE_INT_ON_STOP;
 546              		.loc 1 282 0
 547 0500 46F28853 		movw	r3, #25992
 548 0504 C4F20003 		movt	r3, 16384
 549 0508 46F28852 		movw	r2, #25992
 550 050c C4F20002 		movt	r2, 16384
 551 0510 1278     		ldrb	r2, [r2, #0]
 552 0512 D2B2     		uxtb	r2, r2
 553 0514 42F02002 		orr	r2, r2, #32
 554 0518 D2B2     		uxtb	r2, r2
 555 051a 1A70     		strb	r2, [r3, #0]
 283:.\Generated_Source\PSoC5/psoc_INT.c ****                         psoc_NAK_AND_RECEIVE;       /* NACK and TRY to generate STOP */
 556              		.loc 1 283 0
 557 051c 46F27B53 		movw	r3, #25979
 558 0520 C4F20003 		movt	r3, 16384
 559 0524 4FF01202 		mov	r2, #18
 560 0528 1A70     		strb	r2, [r3, #0]
 561 052a 46F25443 		movw	r3, #25684
 562 052e C4F20003 		movt	r3, 16384
 563 0532 4FF00002 		mov	r2, #0
 564 0536 1A70     		strb	r2, [r3, #0]
 565              		.loc 1 285 0
 566 0538 04E0     		b	.L3
 567              	.L4:
 286:.\Generated_Source\PSoC5/psoc_INT.c **** 
 287:.\Generated_Source\PSoC5/psoc_INT.c ****                 default: /* This is an invalid state and should not occur */
 288:.\Generated_Source\PSoC5/psoc_INT.c **** 
 289:.\Generated_Source\PSoC5/psoc_INT.c ****                     #if(psoc_TIMEOUT_ENABLED)
 290:.\Generated_Source\PSoC5/psoc_INT.c ****                         /* Exit from interrupt to take a chance for timeout timer handle this case 
 291:.\Generated_Source\PSoC5/psoc_INT.c ****                         psoc_DisableInt();
 292:.\Generated_Source\PSoC5/psoc_INT.c ****                         psoc_ClearPendingInt();
 293:.\Generated_Source\PSoC5/psoc_INT.c ****                     #else
 294:.\Generated_Source\PSoC5/psoc_INT.c ****                         /* Block execution flow: unexpected condition */
 295:.\Generated_Source\PSoC5/psoc_INT.c ****                         CYASSERT(0u != 0u);
 568              		.loc 1 295 0 discriminator 1
 569 053a 4FF00000 		mov	r0, #0
 570 053e FFF7FEFF 		bl	CyHalt
 296:.\Generated_Source\PSoC5/psoc_INT.c ****                     #endif /* (psoc_TIMEOUT_ENABLED) */
 297:.\Generated_Source\PSoC5/psoc_INT.c **** 
 298:.\Generated_Source\PSoC5/psoc_INT.c ****                     break;
 571              		.loc 1 298 0
 572 0542 00BF     		nop
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc9J4kDS.s 			page 17


 573              	.L3:
 299:.\Generated_Source\PSoC5/psoc_INT.c ****                 }
 300:.\Generated_Source\PSoC5/psoc_INT.c ****             }
 301:.\Generated_Source\PSoC5/psoc_INT.c **** 
 302:.\Generated_Source\PSoC5/psoc_INT.c ****             /* Catches the Stop: end of transaction */
 303:.\Generated_Source\PSoC5/psoc_INT.c ****             if(psoc_CHECK_STOP_STS(tmpCsr))
 574              		.loc 1 303 0
 575 0544 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 576 0546 03F02003 		and	r3, r3, #32
 577 054a 002B     		cmp	r3, #0
 578 054c 43D0     		beq	.L1
 304:.\Generated_Source\PSoC5/psoc_INT.c ****             {
 305:.\Generated_Source\PSoC5/psoc_INT.c ****                 psoc_mstrStatus |= psoc_GET_MSTAT_CMPLT;
 579              		.loc 1 305 0
 580 054e 40F20003 		movw	r3, #:lower16:psoc_state
 581 0552 C0F20003 		movt	r3, #:upper16:psoc_state
 582 0556 1B78     		ldrb	r3, [r3, #0]
 583 0558 DBB2     		uxtb	r3, r3
 584 055a 03F00803 		and	r3, r3, #8
 585 055e 002B     		cmp	r3, #0
 586 0560 02D0     		beq	.L27
 587              		.loc 1 305 0 is_stmt 0 discriminator 1
 588 0562 4FF00102 		mov	r2, #1
 589 0566 01E0     		b	.L28
 590              	.L27:
 591              		.loc 1 305 0 discriminator 2
 592 0568 4FF00202 		mov	r2, #2
 593              	.L28:
 594              		.loc 1 305 0 discriminator 3
 595 056c 40F20003 		movw	r3, #:lower16:psoc_mstrStatus
 596 0570 C0F20003 		movt	r3, #:upper16:psoc_mstrStatus
 597 0574 1B78     		ldrb	r3, [r3, #0]
 598 0576 DBB2     		uxtb	r3, r3
 599 0578 1343     		orrs	r3, r3, r2
 600 057a DAB2     		uxtb	r2, r3
 601 057c 40F20003 		movw	r3, #:lower16:psoc_mstrStatus
 602 0580 C0F20003 		movt	r3, #:upper16:psoc_mstrStatus
 603 0584 1A70     		strb	r2, [r3, #0]
 306:.\Generated_Source\PSoC5/psoc_INT.c **** 
 307:.\Generated_Source\PSoC5/psoc_INT.c ****                 psoc_DISABLE_INT_ON_STOP;
 604              		.loc 1 307 0 is_stmt 1 discriminator 3
 605 0586 46F28853 		movw	r3, #25992
 606 058a C4F20003 		movt	r3, 16384
 607 058e 46F28852 		movw	r2, #25992
 608 0592 C4F20002 		movt	r2, 16384
 609 0596 1278     		ldrb	r2, [r2, #0]
 610 0598 D2B2     		uxtb	r2, r2
 611 059a 22F02002 		bic	r2, r2, #32
 612 059e D2B2     		uxtb	r2, r2
 613 05a0 1A70     		strb	r2, [r3, #0]
 308:.\Generated_Source\PSoC5/psoc_INT.c ****                 psoc_state = psoc_SM_IDLE;
 614              		.loc 1 308 0 discriminator 3
 615 05a2 40F20003 		movw	r3, #:lower16:psoc_state
 616 05a6 C0F20003 		movt	r3, #:upper16:psoc_state
 617 05aa 4FF01002 		mov	r2, #16
 618 05ae 1A70     		strb	r2, [r3, #0]
 619 05b0 11E0     		b	.L1
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc9J4kDS.s 			page 18


 620              	.L2:
 309:.\Generated_Source\PSoC5/psoc_INT.c ****             }
 310:.\Generated_Source\PSoC5/psoc_INT.c ****         #endif /* (psoc_MODE_MASTER_ENABLED) */
 311:.\Generated_Source\PSoC5/psoc_INT.c ****     }
 312:.\Generated_Source\PSoC5/psoc_INT.c ****     else if(psoc_CHECK_SM_SLAVE)
 621              		.loc 1 312 0
 622 05b2 40F20003 		movw	r3, #:lower16:psoc_state
 623 05b6 C0F20003 		movt	r3, #:upper16:psoc_state
 624 05ba 1B78     		ldrb	r3, [r3, #0]
 625 05bc DBB2     		uxtb	r3, r3
 626 05be 03F01003 		and	r3, r3, #16
 627 05c2 DBB2     		uxtb	r3, r3
 628 05c4 002B     		cmp	r3, #0
 629 05c6 06D1     		bne	.L1
 313:.\Generated_Source\PSoC5/psoc_INT.c ****     {
 314:.\Generated_Source\PSoC5/psoc_INT.c ****         #if(psoc_MODE_SLAVE_ENABLED)
 315:.\Generated_Source\PSoC5/psoc_INT.c ****             
 316:.\Generated_Source\PSoC5/psoc_INT.c ****             if((psoc_CHECK_STOP_STS(tmpCsr)) || /* Stop || Restart */
 317:.\Generated_Source\PSoC5/psoc_INT.c ****                (psoc_CHECK_BYTE_COMPLETE(tmpCsr) && psoc_CHECK_ADDRESS_STS(tmpCsr)))
 318:.\Generated_Source\PSoC5/psoc_INT.c ****             {
 319:.\Generated_Source\PSoC5/psoc_INT.c ****                 /* Catch end of master write transcation: use interrupt on Stop */
 320:.\Generated_Source\PSoC5/psoc_INT.c ****                 /* The STOP bit history on address phase does not have correct state */
 321:.\Generated_Source\PSoC5/psoc_INT.c ****                 if(psoc_SM_SL_WR_DATA == psoc_state)
 322:.\Generated_Source\PSoC5/psoc_INT.c ****                 {
 323:.\Generated_Source\PSoC5/psoc_INT.c ****                     psoc_DISABLE_INT_ON_STOP;
 324:.\Generated_Source\PSoC5/psoc_INT.c **** 
 325:.\Generated_Source\PSoC5/psoc_INT.c ****                     psoc_slStatus &= ((uint8) ~psoc_SSTAT_WR_BUSY);
 326:.\Generated_Source\PSoC5/psoc_INT.c ****                     psoc_slStatus |= ((uint8)  psoc_SSTAT_WR_CMPLT);
 327:.\Generated_Source\PSoC5/psoc_INT.c **** 
 328:.\Generated_Source\PSoC5/psoc_INT.c ****                     psoc_state = psoc_SM_IDLE;
 329:.\Generated_Source\PSoC5/psoc_INT.c ****                 }
 330:.\Generated_Source\PSoC5/psoc_INT.c ****             }
 331:.\Generated_Source\PSoC5/psoc_INT.c **** 
 332:.\Generated_Source\PSoC5/psoc_INT.c ****             if(psoc_CHECK_BYTE_COMPLETE(tmpCsr))
 333:.\Generated_Source\PSoC5/psoc_INT.c ****             {
 334:.\Generated_Source\PSoC5/psoc_INT.c ****                 /* The address only issued after Start or ReStart: so check address
 335:.\Generated_Source\PSoC5/psoc_INT.c ****                    to catch this events:
 336:.\Generated_Source\PSoC5/psoc_INT.c ****                     FF : sets Addr phase with byte_complete interrupt trigger.
 337:.\Generated_Source\PSoC5/psoc_INT.c ****                     UDB: sets Addr phase immediately after Start or ReStart. */
 338:.\Generated_Source\PSoC5/psoc_INT.c ****                 if(psoc_CHECK_ADDRESS_STS(tmpCsr))
 339:.\Generated_Source\PSoC5/psoc_INT.c ****                 {
 340:.\Generated_Source\PSoC5/psoc_INT.c ****                     /* Check for software address detection */
 341:.\Generated_Source\PSoC5/psoc_INT.c ****                     #if(psoc_SW_ADRR_DECODE)
 342:.\Generated_Source\PSoC5/psoc_INT.c ****                         tmp8 = psoc_GET_SLAVE_ADDR(psoc_DATA_REG);
 343:.\Generated_Source\PSoC5/psoc_INT.c **** 
 344:.\Generated_Source\PSoC5/psoc_INT.c ****                         if(tmp8 == psoc_slAddress)   /* Check for address match */
 345:.\Generated_Source\PSoC5/psoc_INT.c ****                         {
 346:.\Generated_Source\PSoC5/psoc_INT.c ****                             if(0u != (psoc_DATA_REG & psoc_READ_FLAG))
 347:.\Generated_Source\PSoC5/psoc_INT.c ****                             {
 348:.\Generated_Source\PSoC5/psoc_INT.c ****                                 /* Place code to prepare read buffer here                  */
 349:.\Generated_Source\PSoC5/psoc_INT.c ****                                 /* `#START psoc_SW_PREPARE_READ_BUF_interrupt` */
 350:.\Generated_Source\PSoC5/psoc_INT.c **** 
 351:.\Generated_Source\PSoC5/psoc_INT.c ****                                 /* `#END` */
 352:.\Generated_Source\PSoC5/psoc_INT.c **** 
 353:.\Generated_Source\PSoC5/psoc_INT.c ****                                 /* Prepare next opeation to read, get data and place in data regist
 354:.\Generated_Source\PSoC5/psoc_INT.c ****                                 if(psoc_slRdBufIndex < psoc_slRdBufSize)
 355:.\Generated_Source\PSoC5/psoc_INT.c ****                                 {
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc9J4kDS.s 			page 19


 356:.\Generated_Source\PSoC5/psoc_INT.c ****                                     /* Load first data byte from array */
 357:.\Generated_Source\PSoC5/psoc_INT.c ****                                     psoc_DATA_REG = psoc_slRdBufPtr[psoc_slRdBufIndex];
 358:.\Generated_Source\PSoC5/psoc_INT.c ****                                     psoc_ACK_AND_TRANSMIT;
 359:.\Generated_Source\PSoC5/psoc_INT.c ****                                     psoc_slRdBufIndex++;
 360:.\Generated_Source\PSoC5/psoc_INT.c **** 
 361:.\Generated_Source\PSoC5/psoc_INT.c ****                                     psoc_slStatus |= psoc_SSTAT_RD_BUSY;
 362:.\Generated_Source\PSoC5/psoc_INT.c ****                                 }
 363:.\Generated_Source\PSoC5/psoc_INT.c ****                                 else    /* Overflow: provide 0xFF on the bus */
 364:.\Generated_Source\PSoC5/psoc_INT.c ****                                 {
 365:.\Generated_Source\PSoC5/psoc_INT.c ****                                     psoc_DATA_REG = psoc_OVERFLOW_RETURN;
 366:.\Generated_Source\PSoC5/psoc_INT.c ****                                     psoc_ACK_AND_TRANSMIT;
 367:.\Generated_Source\PSoC5/psoc_INT.c **** 
 368:.\Generated_Source\PSoC5/psoc_INT.c ****                                     psoc_slStatus  |= (psoc_SSTAT_RD_BUSY |
 369:.\Generated_Source\PSoC5/psoc_INT.c ****                                                                    psoc_SSTAT_RD_ERR_OVFL);
 370:.\Generated_Source\PSoC5/psoc_INT.c ****                                 }
 371:.\Generated_Source\PSoC5/psoc_INT.c **** 
 372:.\Generated_Source\PSoC5/psoc_INT.c ****                                 psoc_state = psoc_SM_SL_RD_DATA;
 373:.\Generated_Source\PSoC5/psoc_INT.c ****                             }
 374:.\Generated_Source\PSoC5/psoc_INT.c ****                             else  /* Write transaction: receive 1st byte */
 375:.\Generated_Source\PSoC5/psoc_INT.c ****                             {
 376:.\Generated_Source\PSoC5/psoc_INT.c ****                                 psoc_ACK_AND_RECEIVE;
 377:.\Generated_Source\PSoC5/psoc_INT.c ****                                 psoc_state = psoc_SM_SL_WR_DATA;
 378:.\Generated_Source\PSoC5/psoc_INT.c **** 
 379:.\Generated_Source\PSoC5/psoc_INT.c ****                                 psoc_slStatus |= psoc_SSTAT_WR_BUSY;
 380:.\Generated_Source\PSoC5/psoc_INT.c ****                                 psoc_ENABLE_INT_ON_STOP;
 381:.\Generated_Source\PSoC5/psoc_INT.c ****                             }
 382:.\Generated_Source\PSoC5/psoc_INT.c ****                         }    
 383:.\Generated_Source\PSoC5/psoc_INT.c ****                         else
 384:.\Generated_Source\PSoC5/psoc_INT.c ****                         {
 385:.\Generated_Source\PSoC5/psoc_INT.c ****                             /*     Place code to compare for additional address here    */
 386:.\Generated_Source\PSoC5/psoc_INT.c ****                             /* `#START psoc_SW_ADDR_COMPARE_interruptStart` */
 387:.\Generated_Source\PSoC5/psoc_INT.c **** 
 388:.\Generated_Source\PSoC5/psoc_INT.c ****                             /* `#END` */
 389:.\Generated_Source\PSoC5/psoc_INT.c ****                             
 390:.\Generated_Source\PSoC5/psoc_INT.c ****                             psoc_NAK_AND_RECEIVE;   /* NACK address */
 391:.\Generated_Source\PSoC5/psoc_INT.c **** 
 392:.\Generated_Source\PSoC5/psoc_INT.c ****                             /* Place code to end of condition for NACK generation here */
 393:.\Generated_Source\PSoC5/psoc_INT.c ****                             /* `#START psoc_SW_ADDR_COMPARE_interruptEnd`  */
 394:.\Generated_Source\PSoC5/psoc_INT.c **** 
 395:.\Generated_Source\PSoC5/psoc_INT.c ****                             /* `#END` */
 396:.\Generated_Source\PSoC5/psoc_INT.c ****                         }
 397:.\Generated_Source\PSoC5/psoc_INT.c ****                         
 398:.\Generated_Source\PSoC5/psoc_INT.c ****                     #else /* (psoc_HW_ADRR_DECODE) */
 399:.\Generated_Source\PSoC5/psoc_INT.c ****                         
 400:.\Generated_Source\PSoC5/psoc_INT.c ****                         if(0u != (psoc_DATA_REG & psoc_READ_FLAG))
 401:.\Generated_Source\PSoC5/psoc_INT.c ****                         {
 402:.\Generated_Source\PSoC5/psoc_INT.c ****                             /* Place code to prepare read buffer here                  */
 403:.\Generated_Source\PSoC5/psoc_INT.c ****                             /* `#START psoc_HW_PREPARE_READ_BUF_interrupt` */
 404:.\Generated_Source\PSoC5/psoc_INT.c **** 
 405:.\Generated_Source\PSoC5/psoc_INT.c ****                             /* `#END` */
 406:.\Generated_Source\PSoC5/psoc_INT.c **** 
 407:.\Generated_Source\PSoC5/psoc_INT.c ****                             /* Prepare next opeation to read, get data and place in data register *
 408:.\Generated_Source\PSoC5/psoc_INT.c ****                             if(psoc_slRdBufIndex < psoc_slRdBufSize)
 409:.\Generated_Source\PSoC5/psoc_INT.c ****                             {
 410:.\Generated_Source\PSoC5/psoc_INT.c ****                                 /* Load first data byte from array */
 411:.\Generated_Source\PSoC5/psoc_INT.c ****                                 psoc_DATA_REG = psoc_slRdBufPtr[psoc_slRdBufIndex];
 412:.\Generated_Source\PSoC5/psoc_INT.c ****                                 psoc_ACK_AND_TRANSMIT;
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc9J4kDS.s 			page 20


 413:.\Generated_Source\PSoC5/psoc_INT.c ****                                 psoc_slRdBufIndex++;
 414:.\Generated_Source\PSoC5/psoc_INT.c **** 
 415:.\Generated_Source\PSoC5/psoc_INT.c ****                                 psoc_slStatus |= psoc_SSTAT_RD_BUSY;
 416:.\Generated_Source\PSoC5/psoc_INT.c ****                             }
 417:.\Generated_Source\PSoC5/psoc_INT.c ****                             else    /* Overflow: provide 0xFF on the bus */
 418:.\Generated_Source\PSoC5/psoc_INT.c ****                             {
 419:.\Generated_Source\PSoC5/psoc_INT.c ****                                 psoc_DATA_REG = psoc_OVERFLOW_RETURN;
 420:.\Generated_Source\PSoC5/psoc_INT.c ****                                 psoc_ACK_AND_TRANSMIT;
 421:.\Generated_Source\PSoC5/psoc_INT.c **** 
 422:.\Generated_Source\PSoC5/psoc_INT.c ****                                 psoc_slStatus  |= (psoc_SSTAT_RD_BUSY |
 423:.\Generated_Source\PSoC5/psoc_INT.c ****                                                                psoc_SSTAT_RD_ERR_OVFL);
 424:.\Generated_Source\PSoC5/psoc_INT.c ****                             }
 425:.\Generated_Source\PSoC5/psoc_INT.c **** 
 426:.\Generated_Source\PSoC5/psoc_INT.c ****                             psoc_state = psoc_SM_SL_RD_DATA;
 427:.\Generated_Source\PSoC5/psoc_INT.c ****                         }
 428:.\Generated_Source\PSoC5/psoc_INT.c ****                         else  /* Write transaction: receive 1st byte */
 429:.\Generated_Source\PSoC5/psoc_INT.c ****                         {
 430:.\Generated_Source\PSoC5/psoc_INT.c ****                             psoc_ACK_AND_RECEIVE;
 431:.\Generated_Source\PSoC5/psoc_INT.c ****                             psoc_state = psoc_SM_SL_WR_DATA;
 432:.\Generated_Source\PSoC5/psoc_INT.c **** 
 433:.\Generated_Source\PSoC5/psoc_INT.c ****                             psoc_slStatus |= psoc_SSTAT_WR_BUSY;
 434:.\Generated_Source\PSoC5/psoc_INT.c ****                             psoc_ENABLE_INT_ON_STOP;
 435:.\Generated_Source\PSoC5/psoc_INT.c ****                         }
 436:.\Generated_Source\PSoC5/psoc_INT.c ****                         
 437:.\Generated_Source\PSoC5/psoc_INT.c ****                     #endif /* (psoc_SW_ADRR_DECODE) */
 438:.\Generated_Source\PSoC5/psoc_INT.c ****                 }
 439:.\Generated_Source\PSoC5/psoc_INT.c ****                 /* Data states */
 440:.\Generated_Source\PSoC5/psoc_INT.c ****                 /* Data master writes into slave */
 441:.\Generated_Source\PSoC5/psoc_INT.c ****                 else if(psoc_state == psoc_SM_SL_WR_DATA)
 442:.\Generated_Source\PSoC5/psoc_INT.c ****                 {
 443:.\Generated_Source\PSoC5/psoc_INT.c ****                     if(psoc_slWrBufIndex < psoc_slWrBufSize)
 444:.\Generated_Source\PSoC5/psoc_INT.c ****                     {
 445:.\Generated_Source\PSoC5/psoc_INT.c ****                         tmp8 = psoc_DATA_REG;
 446:.\Generated_Source\PSoC5/psoc_INT.c ****                         psoc_ACK_AND_RECEIVE;
 447:.\Generated_Source\PSoC5/psoc_INT.c ****                         psoc_slWrBufPtr[psoc_slWrBufIndex] = tmp8;
 448:.\Generated_Source\PSoC5/psoc_INT.c ****                         psoc_slWrBufIndex++;
 449:.\Generated_Source\PSoC5/psoc_INT.c ****                     }
 450:.\Generated_Source\PSoC5/psoc_INT.c ****                     else  /* of array: complete write, send NACK */
 451:.\Generated_Source\PSoC5/psoc_INT.c ****                     {
 452:.\Generated_Source\PSoC5/psoc_INT.c ****                         psoc_NAK_AND_RECEIVE;
 453:.\Generated_Source\PSoC5/psoc_INT.c **** 
 454:.\Generated_Source\PSoC5/psoc_INT.c ****                         psoc_slStatus |= psoc_SSTAT_WR_ERR_OVFL;
 455:.\Generated_Source\PSoC5/psoc_INT.c ****                     }
 456:.\Generated_Source\PSoC5/psoc_INT.c ****                 }
 457:.\Generated_Source\PSoC5/psoc_INT.c ****                 /* Data master reads from slave */
 458:.\Generated_Source\PSoC5/psoc_INT.c ****                 else if(psoc_state == psoc_SM_SL_RD_DATA)
 459:.\Generated_Source\PSoC5/psoc_INT.c ****                 {
 460:.\Generated_Source\PSoC5/psoc_INT.c ****                     if(psoc_CHECK_DATA_ACK(tmpCsr))
 461:.\Generated_Source\PSoC5/psoc_INT.c ****                     {
 462:.\Generated_Source\PSoC5/psoc_INT.c ****                         if(psoc_slRdBufIndex < psoc_slRdBufSize)
 463:.\Generated_Source\PSoC5/psoc_INT.c ****                         {
 464:.\Generated_Source\PSoC5/psoc_INT.c ****                              /* Get data from array */
 465:.\Generated_Source\PSoC5/psoc_INT.c ****                             psoc_DATA_REG = psoc_slRdBufPtr[psoc_slRdBufIndex];
 466:.\Generated_Source\PSoC5/psoc_INT.c ****                             psoc_TRANSMIT_DATA;
 467:.\Generated_Source\PSoC5/psoc_INT.c ****                             psoc_slRdBufIndex++;
 468:.\Generated_Source\PSoC5/psoc_INT.c ****                         }
 469:.\Generated_Source\PSoC5/psoc_INT.c ****                         else   /* Overflow: provide 0xFF on the bus */
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc9J4kDS.s 			page 21


 470:.\Generated_Source\PSoC5/psoc_INT.c ****                         {
 471:.\Generated_Source\PSoC5/psoc_INT.c ****                             psoc_DATA_REG = psoc_OVERFLOW_RETURN;
 472:.\Generated_Source\PSoC5/psoc_INT.c ****                             psoc_TRANSMIT_DATA;
 473:.\Generated_Source\PSoC5/psoc_INT.c **** 
 474:.\Generated_Source\PSoC5/psoc_INT.c ****                             psoc_slStatus |= psoc_SSTAT_RD_ERR_OVFL;
 475:.\Generated_Source\PSoC5/psoc_INT.c ****                         }
 476:.\Generated_Source\PSoC5/psoc_INT.c ****                     }
 477:.\Generated_Source\PSoC5/psoc_INT.c ****                     else  /* Last byte was NACKed: read complete */
 478:.\Generated_Source\PSoC5/psoc_INT.c ****                     {
 479:.\Generated_Source\PSoC5/psoc_INT.c ****                         /* Only NACK appears on the bus */
 480:.\Generated_Source\PSoC5/psoc_INT.c ****                         psoc_DATA_REG = psoc_OVERFLOW_RETURN;
 481:.\Generated_Source\PSoC5/psoc_INT.c ****                         psoc_NAK_AND_TRANSMIT;
 482:.\Generated_Source\PSoC5/psoc_INT.c **** 
 483:.\Generated_Source\PSoC5/psoc_INT.c ****                         psoc_slStatus &= ((uint8) ~psoc_SSTAT_RD_BUSY);
 484:.\Generated_Source\PSoC5/psoc_INT.c ****                         psoc_slStatus |= ((uint8)  psoc_SSTAT_RD_CMPLT);
 485:.\Generated_Source\PSoC5/psoc_INT.c **** 
 486:.\Generated_Source\PSoC5/psoc_INT.c ****                         psoc_state = psoc_SM_IDLE;
 487:.\Generated_Source\PSoC5/psoc_INT.c ****                     }
 488:.\Generated_Source\PSoC5/psoc_INT.c ****                 }
 489:.\Generated_Source\PSoC5/psoc_INT.c ****                 else
 490:.\Generated_Source\PSoC5/psoc_INT.c ****                 {
 491:.\Generated_Source\PSoC5/psoc_INT.c ****                     #if(psoc_TIMEOUT_ENABLED)
 492:.\Generated_Source\PSoC5/psoc_INT.c ****                         /* Exit from interrupt to take a chance for timeout timer handle this case 
 493:.\Generated_Source\PSoC5/psoc_INT.c ****                         psoc_DisableInt();
 494:.\Generated_Source\PSoC5/psoc_INT.c ****                         psoc_ClearPendingInt();
 495:.\Generated_Source\PSoC5/psoc_INT.c ****                     #else
 496:.\Generated_Source\PSoC5/psoc_INT.c ****                         /* Block execution flow: unexpected condition */
 497:.\Generated_Source\PSoC5/psoc_INT.c ****                         CYASSERT(0u != 0u);
 498:.\Generated_Source\PSoC5/psoc_INT.c ****                     #endif /* (psoc_TIMEOUT_ENABLED) */
 499:.\Generated_Source\PSoC5/psoc_INT.c ****                 }
 500:.\Generated_Source\PSoC5/psoc_INT.c ****             }
 501:.\Generated_Source\PSoC5/psoc_INT.c ****         #endif /* (psoc_MODE_SLAVE_ENABLED) */
 502:.\Generated_Source\PSoC5/psoc_INT.c ****     }
 503:.\Generated_Source\PSoC5/psoc_INT.c ****     else
 504:.\Generated_Source\PSoC5/psoc_INT.c ****     {
 505:.\Generated_Source\PSoC5/psoc_INT.c ****         /* The FSM skips master and slave processing: return to IDLE */
 506:.\Generated_Source\PSoC5/psoc_INT.c ****         psoc_state = psoc_SM_IDLE;
 630              		.loc 1 506 0
 631 05c8 40F20003 		movw	r3, #:lower16:psoc_state
 632 05cc C0F20003 		movt	r3, #:upper16:psoc_state
 633 05d0 4FF01002 		mov	r2, #16
 634 05d4 1A70     		strb	r2, [r3, #0]
 635              	.L1:
 507:.\Generated_Source\PSoC5/psoc_INT.c ****     }
 508:.\Generated_Source\PSoC5/psoc_INT.c **** }
 636              		.loc 1 508 0
 637 05d6 07F10807 		add	r7, r7, #8
 638 05da BD46     		mov	sp, r7
 639 05dc 80BD     		pop	{r7, pc}
 640              		.cfi_endproc
 641              	.LFE0:
 642              		.size	psoc_ISR, .-psoc_ISR
 643 05de 00BF     		.text
 644              	.Letext0:
 645              		.file 2 ".\\Generated_Source\\PSoC5\\cytypes.h"
 646              		.file 3 ".\\Generated_Source\\PSoC5\\psoc_PVT.h"
 647              		.section	.debug_info,"",%progbits
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc9J4kDS.s 			page 22


 648              	.Ldebug_info0:
 649 0000 62010000 		.4byte	0x162
 650 0004 0200     		.2byte	0x2
 651 0006 00000000 		.4byte	.Ldebug_abbrev0
 652 000a 04       		.byte	0x4
 653 000b 01       		.uleb128 0x1
 654 000c 67010000 		.4byte	.LASF26
 655 0010 01       		.byte	0x1
 656 0011 EB010000 		.4byte	.LASF27
 657 0015 0D000000 		.4byte	.LASF28
 658 0019 00000000 		.4byte	.Ldebug_ranges0+0
 659 001d 00000000 		.4byte	0
 660 0021 00000000 		.4byte	0
 661 0025 00000000 		.4byte	.Ldebug_line0
 662 0029 02       		.uleb128 0x2
 663 002a 01       		.byte	0x1
 664 002b 06       		.byte	0x6
 665 002c DF010000 		.4byte	.LASF0
 666 0030 02       		.uleb128 0x2
 667 0031 01       		.byte	0x1
 668 0032 08       		.byte	0x8
 669 0033 87000000 		.4byte	.LASF1
 670 0037 02       		.uleb128 0x2
 671 0038 02       		.byte	0x2
 672 0039 05       		.byte	0x5
 673 003a 5D010000 		.4byte	.LASF2
 674 003e 02       		.uleb128 0x2
 675 003f 02       		.byte	0x2
 676 0040 07       		.byte	0x7
 677 0041 5A000000 		.4byte	.LASF3
 678 0045 02       		.uleb128 0x2
 679 0046 04       		.byte	0x4
 680 0047 05       		.byte	0x5
 681 0048 C4010000 		.4byte	.LASF4
 682 004c 02       		.uleb128 0x2
 683 004d 04       		.byte	0x4
 684 004e 07       		.byte	0x7
 685 004f 9A000000 		.4byte	.LASF5
 686 0053 02       		.uleb128 0x2
 687 0054 08       		.byte	0x8
 688 0055 05       		.byte	0x5
 689 0056 39010000 		.4byte	.LASF6
 690 005a 02       		.uleb128 0x2
 691 005b 08       		.byte	0x8
 692 005c 07       		.byte	0x7
 693 005d FE000000 		.4byte	.LASF7
 694 0061 03       		.uleb128 0x3
 695 0062 04       		.byte	0x4
 696 0063 05       		.byte	0x5
 697 0064 696E7400 		.ascii	"int\000"
 698 0068 02       		.uleb128 0x2
 699 0069 04       		.byte	0x4
 700 006a 07       		.byte	0x7
 701 006b F1000000 		.4byte	.LASF8
 702 006f 04       		.uleb128 0x4
 703 0070 AC000000 		.4byte	.LASF9
 704 0074 02       		.byte	0x2
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc9J4kDS.s 			page 23


 705 0075 5B       		.byte	0x5b
 706 0076 30000000 		.4byte	0x30
 707 007a 04       		.uleb128 0x4
 708 007b EA000000 		.4byte	.LASF10
 709 007f 02       		.byte	0x2
 710 0080 5D       		.byte	0x5d
 711 0081 4C000000 		.4byte	0x4c
 712 0085 02       		.uleb128 0x2
 713 0086 04       		.byte	0x4
 714 0087 04       		.byte	0x4
 715 0088 81000000 		.4byte	.LASF11
 716 008c 02       		.uleb128 0x2
 717 008d 08       		.byte	0x8
 718 008e 04       		.byte	0x4
 719 008f D8000000 		.4byte	.LASF12
 720 0093 02       		.uleb128 0x2
 721 0094 01       		.byte	0x1
 722 0095 08       		.byte	0x8
 723 0096 47010000 		.4byte	.LASF13
 724 009a 04       		.uleb128 0x4
 725 009b 95000000 		.4byte	.LASF14
 726 009f 02       		.byte	0x2
 727 00a0 F0       		.byte	0xf0
 728 00a1 A5000000 		.4byte	0xa5
 729 00a5 05       		.uleb128 0x5
 730 00a6 6F000000 		.4byte	0x6f
 731 00aa 04       		.uleb128 0x4
 732 00ab 07000000 		.4byte	.LASF15
 733 00af 02       		.byte	0x2
 734 00b0 F2       		.byte	0xf2
 735 00b1 B5000000 		.4byte	0xb5
 736 00b5 05       		.uleb128 0x5
 737 00b6 7A000000 		.4byte	0x7a
 738 00ba 02       		.uleb128 0x2
 739 00bb 04       		.byte	0x4
 740 00bc 07       		.byte	0x7
 741 00bd 30010000 		.4byte	.LASF16
 742 00c1 06       		.uleb128 0x6
 743 00c2 01       		.byte	0x1
 744 00c3 15010000 		.4byte	.LASF29
 745 00c7 01       		.byte	0x1
 746 00c8 2E       		.byte	0x2e
 747 00c9 01       		.byte	0x1
 748 00ca 00000000 		.4byte	.LFB0
 749 00ce DE050000 		.4byte	.LFE0
 750 00d2 00000000 		.4byte	.LLST0
 751 00d6 01       		.byte	0x1
 752 00d7 EA000000 		.4byte	0xea
 753 00db 07       		.uleb128 0x7
 754 00dc 00000000 		.4byte	.LASF30
 755 00e0 01       		.byte	0x1
 756 00e1 34       		.byte	0x34
 757 00e2 6F000000 		.4byte	0x6f
 758 00e6 02       		.byte	0x2
 759 00e7 91       		.byte	0x91
 760 00e8 77       		.sleb128 -9
 761 00e9 00       		.byte	0
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc9J4kDS.s 			page 24


 762 00ea 08       		.uleb128 0x8
 763 00eb DF000000 		.4byte	.LASF17
 764 00ef 03       		.byte	0x3
 765 00f0 23       		.byte	0x23
 766 00f1 A5000000 		.4byte	0xa5
 767 00f5 01       		.byte	0x1
 768 00f6 01       		.byte	0x1
 769 00f7 08       		.uleb128 0x8
 770 00f8 0F020000 		.4byte	.LASF18
 771 00fc 03       		.byte	0x3
 772 00fd 27       		.byte	0x27
 773 00fe A5000000 		.4byte	0xa5
 774 0102 01       		.byte	0x1
 775 0103 01       		.byte	0x1
 776 0104 08       		.uleb128 0x8
 777 0105 4C010000 		.4byte	.LASF19
 778 0109 03       		.byte	0x3
 779 010a 28       		.byte	0x28
 780 010b A5000000 		.4byte	0xa5
 781 010f 01       		.byte	0x1
 782 0110 01       		.byte	0x1
 783 0111 08       		.uleb128 0x8
 784 0112 CD010000 		.4byte	.LASF20
 785 0116 03       		.byte	0x3
 786 0117 2B       		.byte	0x2b
 787 0118 1E010000 		.4byte	0x11e
 788 011c 01       		.byte	0x1
 789 011d 01       		.byte	0x1
 790 011e 09       		.uleb128 0x9
 791 011f 04       		.byte	0x4
 792 0120 A5000000 		.4byte	0xa5
 793 0124 08       		.uleb128 0x8
 794 0125 C5000000 		.4byte	.LASF21
 795 0129 03       		.byte	0x3
 796 012a 2C       		.byte	0x2c
 797 012b A5000000 		.4byte	0xa5
 798 012f 01       		.byte	0x1
 799 0130 01       		.byte	0x1
 800 0131 08       		.uleb128 0x8
 801 0132 6D000000 		.4byte	.LASF22
 802 0136 03       		.byte	0x3
 803 0137 2D       		.byte	0x2d
 804 0138 A5000000 		.4byte	0xa5
 805 013c 01       		.byte	0x1
 806 013d 01       		.byte	0x1
 807 013e 08       		.uleb128 0x8
 808 013f 1E010000 		.4byte	.LASF23
 809 0143 03       		.byte	0x3
 810 0144 30       		.byte	0x30
 811 0145 1E010000 		.4byte	0x11e
 812 0149 01       		.byte	0x1
 813 014a 01       		.byte	0x1
 814 014b 08       		.uleb128 0x8
 815 014c B2000000 		.4byte	.LASF24
 816 0150 03       		.byte	0x3
 817 0151 31       		.byte	0x31
 818 0152 A5000000 		.4byte	0xa5
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc9J4kDS.s 			page 25


 819 0156 01       		.byte	0x1
 820 0157 01       		.byte	0x1
 821 0158 08       		.uleb128 0x8
 822 0159 B0010000 		.4byte	.LASF25
 823 015d 03       		.byte	0x3
 824 015e 32       		.byte	0x32
 825 015f A5000000 		.4byte	0xa5
 826 0163 01       		.byte	0x1
 827 0164 01       		.byte	0x1
 828 0165 00       		.byte	0
 829              		.section	.debug_abbrev,"",%progbits
 830              	.Ldebug_abbrev0:
 831 0000 01       		.uleb128 0x1
 832 0001 11       		.uleb128 0x11
 833 0002 01       		.byte	0x1
 834 0003 25       		.uleb128 0x25
 835 0004 0E       		.uleb128 0xe
 836 0005 13       		.uleb128 0x13
 837 0006 0B       		.uleb128 0xb
 838 0007 03       		.uleb128 0x3
 839 0008 0E       		.uleb128 0xe
 840 0009 1B       		.uleb128 0x1b
 841 000a 0E       		.uleb128 0xe
 842 000b 55       		.uleb128 0x55
 843 000c 06       		.uleb128 0x6
 844 000d 11       		.uleb128 0x11
 845 000e 01       		.uleb128 0x1
 846 000f 52       		.uleb128 0x52
 847 0010 01       		.uleb128 0x1
 848 0011 10       		.uleb128 0x10
 849 0012 06       		.uleb128 0x6
 850 0013 00       		.byte	0
 851 0014 00       		.byte	0
 852 0015 02       		.uleb128 0x2
 853 0016 24       		.uleb128 0x24
 854 0017 00       		.byte	0
 855 0018 0B       		.uleb128 0xb
 856 0019 0B       		.uleb128 0xb
 857 001a 3E       		.uleb128 0x3e
 858 001b 0B       		.uleb128 0xb
 859 001c 03       		.uleb128 0x3
 860 001d 0E       		.uleb128 0xe
 861 001e 00       		.byte	0
 862 001f 00       		.byte	0
 863 0020 03       		.uleb128 0x3
 864 0021 24       		.uleb128 0x24
 865 0022 00       		.byte	0
 866 0023 0B       		.uleb128 0xb
 867 0024 0B       		.uleb128 0xb
 868 0025 3E       		.uleb128 0x3e
 869 0026 0B       		.uleb128 0xb
 870 0027 03       		.uleb128 0x3
 871 0028 08       		.uleb128 0x8
 872 0029 00       		.byte	0
 873 002a 00       		.byte	0
 874 002b 04       		.uleb128 0x4
 875 002c 16       		.uleb128 0x16
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc9J4kDS.s 			page 26


 876 002d 00       		.byte	0
 877 002e 03       		.uleb128 0x3
 878 002f 0E       		.uleb128 0xe
 879 0030 3A       		.uleb128 0x3a
 880 0031 0B       		.uleb128 0xb
 881 0032 3B       		.uleb128 0x3b
 882 0033 0B       		.uleb128 0xb
 883 0034 49       		.uleb128 0x49
 884 0035 13       		.uleb128 0x13
 885 0036 00       		.byte	0
 886 0037 00       		.byte	0
 887 0038 05       		.uleb128 0x5
 888 0039 35       		.uleb128 0x35
 889 003a 00       		.byte	0
 890 003b 49       		.uleb128 0x49
 891 003c 13       		.uleb128 0x13
 892 003d 00       		.byte	0
 893 003e 00       		.byte	0
 894 003f 06       		.uleb128 0x6
 895 0040 2E       		.uleb128 0x2e
 896 0041 01       		.byte	0x1
 897 0042 3F       		.uleb128 0x3f
 898 0043 0C       		.uleb128 0xc
 899 0044 03       		.uleb128 0x3
 900 0045 0E       		.uleb128 0xe
 901 0046 3A       		.uleb128 0x3a
 902 0047 0B       		.uleb128 0xb
 903 0048 3B       		.uleb128 0x3b
 904 0049 0B       		.uleb128 0xb
 905 004a 27       		.uleb128 0x27
 906 004b 0C       		.uleb128 0xc
 907 004c 11       		.uleb128 0x11
 908 004d 01       		.uleb128 0x1
 909 004e 12       		.uleb128 0x12
 910 004f 01       		.uleb128 0x1
 911 0050 40       		.uleb128 0x40
 912 0051 06       		.uleb128 0x6
 913 0052 9642     		.uleb128 0x2116
 914 0054 0C       		.uleb128 0xc
 915 0055 01       		.uleb128 0x1
 916 0056 13       		.uleb128 0x13
 917 0057 00       		.byte	0
 918 0058 00       		.byte	0
 919 0059 07       		.uleb128 0x7
 920 005a 34       		.uleb128 0x34
 921 005b 00       		.byte	0
 922 005c 03       		.uleb128 0x3
 923 005d 0E       		.uleb128 0xe
 924 005e 3A       		.uleb128 0x3a
 925 005f 0B       		.uleb128 0xb
 926 0060 3B       		.uleb128 0x3b
 927 0061 0B       		.uleb128 0xb
 928 0062 49       		.uleb128 0x49
 929 0063 13       		.uleb128 0x13
 930 0064 02       		.uleb128 0x2
 931 0065 0A       		.uleb128 0xa
 932 0066 00       		.byte	0
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc9J4kDS.s 			page 27


 933 0067 00       		.byte	0
 934 0068 08       		.uleb128 0x8
 935 0069 34       		.uleb128 0x34
 936 006a 00       		.byte	0
 937 006b 03       		.uleb128 0x3
 938 006c 0E       		.uleb128 0xe
 939 006d 3A       		.uleb128 0x3a
 940 006e 0B       		.uleb128 0xb
 941 006f 3B       		.uleb128 0x3b
 942 0070 0B       		.uleb128 0xb
 943 0071 49       		.uleb128 0x49
 944 0072 13       		.uleb128 0x13
 945 0073 3F       		.uleb128 0x3f
 946 0074 0C       		.uleb128 0xc
 947 0075 3C       		.uleb128 0x3c
 948 0076 0C       		.uleb128 0xc
 949 0077 00       		.byte	0
 950 0078 00       		.byte	0
 951 0079 09       		.uleb128 0x9
 952 007a 0F       		.uleb128 0xf
 953 007b 00       		.byte	0
 954 007c 0B       		.uleb128 0xb
 955 007d 0B       		.uleb128 0xb
 956 007e 49       		.uleb128 0x49
 957 007f 13       		.uleb128 0x13
 958 0080 00       		.byte	0
 959 0081 00       		.byte	0
 960 0082 00       		.byte	0
 961              		.section	.debug_loc,"",%progbits
 962              	.Ldebug_loc0:
 963              	.LLST0:
 964 0000 00000000 		.4byte	.LFB0
 965 0004 02000000 		.4byte	.LCFI0
 966 0008 0200     		.2byte	0x2
 967 000a 7D       		.byte	0x7d
 968 000b 00       		.sleb128 0
 969 000c 02000000 		.4byte	.LCFI0
 970 0010 04000000 		.4byte	.LCFI1
 971 0014 0200     		.2byte	0x2
 972 0016 7D       		.byte	0x7d
 973 0017 08       		.sleb128 8
 974 0018 04000000 		.4byte	.LCFI1
 975 001c 06000000 		.4byte	.LCFI2
 976 0020 0200     		.2byte	0x2
 977 0022 7D       		.byte	0x7d
 978 0023 10       		.sleb128 16
 979 0024 06000000 		.4byte	.LCFI2
 980 0028 DE050000 		.4byte	.LFE0
 981 002c 0200     		.2byte	0x2
 982 002e 77       		.byte	0x77
 983 002f 10       		.sleb128 16
 984 0030 00000000 		.4byte	0
 985 0034 00000000 		.4byte	0
 986              		.section	.debug_aranges,"",%progbits
 987 0000 1C000000 		.4byte	0x1c
 988 0004 0200     		.2byte	0x2
 989 0006 00000000 		.4byte	.Ldebug_info0
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc9J4kDS.s 			page 28


 990 000a 04       		.byte	0x4
 991 000b 00       		.byte	0
 992 000c 0000     		.2byte	0
 993 000e 0000     		.2byte	0
 994 0010 00000000 		.4byte	.LFB0
 995 0014 DE050000 		.4byte	.LFE0-.LFB0
 996 0018 00000000 		.4byte	0
 997 001c 00000000 		.4byte	0
 998              		.section	.debug_ranges,"",%progbits
 999              	.Ldebug_ranges0:
 1000 0000 00000000 		.4byte	.LFB0
 1001 0004 DE050000 		.4byte	.LFE0
 1002 0008 00000000 		.4byte	0
 1003 000c 00000000 		.4byte	0
 1004              		.section	.debug_line,"",%progbits
 1005              	.Ldebug_line0:
 1006 0000 39010000 		.section	.debug_str,"MS",%progbits,1
 1006      02005500 
 1006      00000201 
 1006      FB0E0D00 
 1006      01010101 
 1007              	.LASF30:
 1008 0000 746D7043 		.ascii	"tmpCsr\000"
 1008      737200
 1009              	.LASF15:
 1010 0007 72656733 		.ascii	"reg32\000"
 1010      3200
 1011              	.LASF28:
 1012 000d 433A5C55 		.ascii	"C:\\Users\\Ryan\\Documents\\summer2014\\WindSensor\\"
 1012      73657273 
 1012      5C527961 
 1012      6E5C446F 
 1012      63756D65 
 1013 003b 5472616E 		.ascii	"TransmitReadings_freeSoC.cydsn\000"
 1013      736D6974 
 1013      52656164 
 1013      696E6773 
 1013      5F667265 
 1014              	.LASF3:
 1015 005a 73686F72 		.ascii	"short unsigned int\000"
 1015      7420756E 
 1015      7369676E 
 1015      65642069 
 1015      6E7400
 1016              	.LASF22:
 1017 006d 70736F63 		.ascii	"psoc_mstrRdBufIndex\000"
 1017      5F6D7374 
 1017      72526442 
 1017      7566496E 
 1017      64657800 
 1018              	.LASF11:
 1019 0081 666C6F61 		.ascii	"float\000"
 1019      7400
 1020              	.LASF1:
 1021 0087 756E7369 		.ascii	"unsigned char\000"
 1021      676E6564 
 1021      20636861 
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc9J4kDS.s 			page 29


 1021      7200
 1022              	.LASF14:
 1023 0095 72656738 		.ascii	"reg8\000"
 1023      00
 1024              	.LASF5:
 1025 009a 6C6F6E67 		.ascii	"long unsigned int\000"
 1025      20756E73 
 1025      69676E65 
 1025      6420696E 
 1025      7400
 1026              	.LASF9:
 1027 00ac 75696E74 		.ascii	"uint8\000"
 1027      3800
 1028              	.LASF24:
 1029 00b2 70736F63 		.ascii	"psoc_mstrWrBufSize\000"
 1029      5F6D7374 
 1029      72577242 
 1029      75665369 
 1029      7A6500
 1030              	.LASF21:
 1031 00c5 70736F63 		.ascii	"psoc_mstrRdBufSize\000"
 1031      5F6D7374 
 1031      72526442 
 1031      75665369 
 1031      7A6500
 1032              	.LASF12:
 1033 00d8 646F7562 		.ascii	"double\000"
 1033      6C6500
 1034              	.LASF17:
 1035 00df 70736F63 		.ascii	"psoc_state\000"
 1035      5F737461 
 1035      746500
 1036              	.LASF10:
 1037 00ea 75696E74 		.ascii	"uint32\000"
 1037      333200
 1038              	.LASF8:
 1039 00f1 756E7369 		.ascii	"unsigned int\000"
 1039      676E6564 
 1039      20696E74 
 1039      00
 1040              	.LASF7:
 1041 00fe 6C6F6E67 		.ascii	"long long unsigned int\000"
 1041      206C6F6E 
 1041      6720756E 
 1041      7369676E 
 1041      65642069 
 1042              	.LASF29:
 1043 0115 70736F63 		.ascii	"psoc_ISR\000"
 1043      5F495352 
 1043      00
 1044              	.LASF23:
 1045 011e 70736F63 		.ascii	"psoc_mstrWrBufPtr\000"
 1045      5F6D7374 
 1045      72577242 
 1045      75665074 
 1045      7200
 1046              	.LASF16:
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc9J4kDS.s 			page 30


 1047 0130 73697A65 		.ascii	"sizetype\000"
 1047      74797065 
 1047      00
 1048              	.LASF6:
 1049 0139 6C6F6E67 		.ascii	"long long int\000"
 1049      206C6F6E 
 1049      6720696E 
 1049      7400
 1050              	.LASF13:
 1051 0147 63686172 		.ascii	"char\000"
 1051      00
 1052              	.LASF19:
 1053 014c 70736F63 		.ascii	"psoc_mstrControl\000"
 1053      5F6D7374 
 1053      72436F6E 
 1053      74726F6C 
 1053      00
 1054              	.LASF2:
 1055 015d 73686F72 		.ascii	"short int\000"
 1055      7420696E 
 1055      7400
 1056              	.LASF26:
 1057 0167 474E5520 		.ascii	"GNU C 4.7.3 20130312 (release) [ARM/embedded-4_7-br"
 1057      4320342E 
 1057      372E3320 
 1057      32303133 
 1057      30333132 
 1058 019a 616E6368 		.ascii	"anch revision 196615]\000"
 1058      20726576 
 1058      6973696F 
 1058      6E203139 
 1058      36363135 
 1059              	.LASF25:
 1060 01b0 70736F63 		.ascii	"psoc_mstrWrBufIndex\000"
 1060      5F6D7374 
 1060      72577242 
 1060      7566496E 
 1060      64657800 
 1061              	.LASF4:
 1062 01c4 6C6F6E67 		.ascii	"long int\000"
 1062      20696E74 
 1062      00
 1063              	.LASF20:
 1064 01cd 70736F63 		.ascii	"psoc_mstrRdBufPtr\000"
 1064      5F6D7374 
 1064      72526442 
 1064      75665074 
 1064      7200
 1065              	.LASF0:
 1066 01df 7369676E 		.ascii	"signed char\000"
 1066      65642063 
 1066      68617200 
 1067              	.LASF27:
 1068 01eb 2E5C4765 		.ascii	".\\Generated_Source\\PSoC5\\psoc_INT.c\000"
 1068      6E657261 
 1068      7465645F 
 1068      536F7572 
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\cc9J4kDS.s 			page 31


 1068      63655C50 
 1069              	.LASF18:
 1070 020f 70736F63 		.ascii	"psoc_mstrStatus\000"
 1070      5F6D7374 
 1070      72537461 
 1070      74757300 
 1071              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.7.3 20130312 (release) [ARM/embedded-4_7-br
