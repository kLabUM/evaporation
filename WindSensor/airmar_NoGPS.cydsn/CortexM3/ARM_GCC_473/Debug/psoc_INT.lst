ARM GAS  C:\Users\Ryan\AppData\Local\Temp\ccYOliLH.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"psoc_INT.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.psoc_ISR,"ax",%progbits
  19              		.align	2
  20              		.global	psoc_ISR
  21              		.thumb
  22              		.thumb_func
  23              		.type	psoc_ISR, %function
  24              	psoc_ISR:
  25              	.LFB0:
  26              		.file 1 ".\\Generated_Source\\PSoC5\\psoc_INT.c"
   1:.\Generated_Source\PSoC5/psoc_INT.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC5/psoc_INT.c **** * File Name: psoc_INT.c
   3:.\Generated_Source\PSoC5/psoc_INT.c **** * Version 3.30
   4:.\Generated_Source\PSoC5/psoc_INT.c **** *
   5:.\Generated_Source\PSoC5/psoc_INT.c **** * Description:
   6:.\Generated_Source\PSoC5/psoc_INT.c **** *  This file provides the source code of Interrupt Service Routine (ISR)
   7:.\Generated_Source\PSoC5/psoc_INT.c **** *  for I2C component.
   8:.\Generated_Source\PSoC5/psoc_INT.c **** *
   9:.\Generated_Source\PSoC5/psoc_INT.c **** *  Note:
  10:.\Generated_Source\PSoC5/psoc_INT.c **** *
  11:.\Generated_Source\PSoC5/psoc_INT.c **** ********************************************************************************
  12:.\Generated_Source\PSoC5/psoc_INT.c **** * Copyright 2008-2012, Cypress Semiconductor Corporation.  All rights reserved.
  13:.\Generated_Source\PSoC5/psoc_INT.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:.\Generated_Source\PSoC5/psoc_INT.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:.\Generated_Source\PSoC5/psoc_INT.c **** * the software package with which this file was provided.
  16:.\Generated_Source\PSoC5/psoc_INT.c **** *******************************************************************************/
  17:.\Generated_Source\PSoC5/psoc_INT.c **** 
  18:.\Generated_Source\PSoC5/psoc_INT.c **** #include "psoc_PVT.h"
  19:.\Generated_Source\PSoC5/psoc_INT.c **** 
  20:.\Generated_Source\PSoC5/psoc_INT.c **** 
  21:.\Generated_Source\PSoC5/psoc_INT.c **** /*******************************************************************************
  22:.\Generated_Source\PSoC5/psoc_INT.c **** *  Place your includes, defines and code here
  23:.\Generated_Source\PSoC5/psoc_INT.c **** ********************************************************************************/
  24:.\Generated_Source\PSoC5/psoc_INT.c **** /* `#START psoc_ISR_intc` */
  25:.\Generated_Source\PSoC5/psoc_INT.c **** 
  26:.\Generated_Source\PSoC5/psoc_INT.c **** /* `#END` */
  27:.\Generated_Source\PSoC5/psoc_INT.c **** 
  28:.\Generated_Source\PSoC5/psoc_INT.c **** 
  29:.\Generated_Source\PSoC5/psoc_INT.c **** /*******************************************************************************
  30:.\Generated_Source\PSoC5/psoc_INT.c **** * Function Name: psoc_ISR
  31:.\Generated_Source\PSoC5/psoc_INT.c **** ********************************************************************************
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\ccYOliLH.s 			page 2


  32:.\Generated_Source\PSoC5/psoc_INT.c **** *
  33:.\Generated_Source\PSoC5/psoc_INT.c **** * Summary:
  34:.\Generated_Source\PSoC5/psoc_INT.c **** *  Handler for I2C interrupt. The Slave and Master operations are handled here.
  35:.\Generated_Source\PSoC5/psoc_INT.c **** *
  36:.\Generated_Source\PSoC5/psoc_INT.c **** * Parameters:
  37:.\Generated_Source\PSoC5/psoc_INT.c **** *  void
  38:.\Generated_Source\PSoC5/psoc_INT.c **** *
  39:.\Generated_Source\PSoC5/psoc_INT.c **** * Return:
  40:.\Generated_Source\PSoC5/psoc_INT.c **** *  void
  41:.\Generated_Source\PSoC5/psoc_INT.c **** *
  42:.\Generated_Source\PSoC5/psoc_INT.c **** * Reentrant:
  43:.\Generated_Source\PSoC5/psoc_INT.c **** *  No
  44:.\Generated_Source\PSoC5/psoc_INT.c **** *
  45:.\Generated_Source\PSoC5/psoc_INT.c **** *******************************************************************************/
  46:.\Generated_Source\PSoC5/psoc_INT.c **** CY_ISR(psoc_ISR)
  47:.\Generated_Source\PSoC5/psoc_INT.c **** {
  27              		.loc 1 47 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 8
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31 0000 80B5     		push	{r7, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 7, -8
  35              		.cfi_offset 14, -4
  36 0002 82B0     		sub	sp, sp, #8
  37              	.LCFI1:
  38              		.cfi_def_cfa_offset 16
  39 0004 00AF     		add	r7, sp, #0
  40              	.LCFI2:
  41              		.cfi_def_cfa_register 7
  48:.\Generated_Source\PSoC5/psoc_INT.c ****     #if(psoc_MODE_SLAVE_ENABLED)
  49:.\Generated_Source\PSoC5/psoc_INT.c ****        uint8  tmp8;
  50:.\Generated_Source\PSoC5/psoc_INT.c ****     #endif  /* (psoc_MODE_SLAVE_ENABLED) */
  51:.\Generated_Source\PSoC5/psoc_INT.c **** 
  52:.\Generated_Source\PSoC5/psoc_INT.c ****     uint8  tmpCsr;
  53:.\Generated_Source\PSoC5/psoc_INT.c **** 
  54:.\Generated_Source\PSoC5/psoc_INT.c ****     #if(psoc_TIMEOUT_FF_ENABLED)
  55:.\Generated_Source\PSoC5/psoc_INT.c ****         if(0u != psoc_TimeoutGetStatus())
  56:.\Generated_Source\PSoC5/psoc_INT.c ****         {
  57:.\Generated_Source\PSoC5/psoc_INT.c ****             psoc_TimeoutReset();
  58:.\Generated_Source\PSoC5/psoc_INT.c ****             psoc_state = psoc_SM_EXIT_IDLE;
  59:.\Generated_Source\PSoC5/psoc_INT.c ****             /* psoc_CSR_REG should be cleared after reset */
  60:.\Generated_Source\PSoC5/psoc_INT.c ****         }
  61:.\Generated_Source\PSoC5/psoc_INT.c ****     #endif /* (psoc_TIMEOUT_FF_ENABLED) */
  62:.\Generated_Source\PSoC5/psoc_INT.c **** 
  63:.\Generated_Source\PSoC5/psoc_INT.c **** 
  64:.\Generated_Source\PSoC5/psoc_INT.c ****     tmpCsr = psoc_CSR_REG;      /* Make copy as interrupts clear */
  42              		.loc 1 64 0
  43 0006 44F6D713 		movw	r3, #18903
  44 000a C4F20003 		movt	r3, 16384
  45 000e 1B78     		ldrb	r3, [r3, #0]
  46 0010 FB71     		strb	r3, [r7, #7]
  65:.\Generated_Source\PSoC5/psoc_INT.c **** 
  66:.\Generated_Source\PSoC5/psoc_INT.c ****     #if(psoc_MODE_MULTI_MASTER_SLAVE_ENABLED)
  67:.\Generated_Source\PSoC5/psoc_INT.c ****         if(psoc_CHECK_START_GEN(psoc_MCSR_REG))
  68:.\Generated_Source\PSoC5/psoc_INT.c ****         {
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\ccYOliLH.s 			page 3


  69:.\Generated_Source\PSoC5/psoc_INT.c ****             psoc_CLEAR_START_GEN;
  70:.\Generated_Source\PSoC5/psoc_INT.c **** 
  71:.\Generated_Source\PSoC5/psoc_INT.c ****             /* Set READ complete, but was aborted */
  72:.\Generated_Source\PSoC5/psoc_INT.c ****             psoc_mstrStatus |= (psoc_MSTAT_ERR_XFER |
  73:.\Generated_Source\PSoC5/psoc_INT.c ****                                             psoc_GET_MSTAT_CMPLT);
  74:.\Generated_Source\PSoC5/psoc_INT.c **** 
  75:.\Generated_Source\PSoC5/psoc_INT.c ****             /* The slave was addressed */
  76:.\Generated_Source\PSoC5/psoc_INT.c ****             psoc_state = psoc_SM_SLAVE;
  77:.\Generated_Source\PSoC5/psoc_INT.c ****         }
  78:.\Generated_Source\PSoC5/psoc_INT.c ****     #endif /* (psoc_MODE_MULTI_MASTER_SLAVE_ENABLED) */
  79:.\Generated_Source\PSoC5/psoc_INT.c **** 
  80:.\Generated_Source\PSoC5/psoc_INT.c **** 
  81:.\Generated_Source\PSoC5/psoc_INT.c ****     #if(psoc_MODE_MULTI_MASTER_ENABLED)
  82:.\Generated_Source\PSoC5/psoc_INT.c ****         if(psoc_CHECK_LOST_ARB(tmpCsr))
  83:.\Generated_Source\PSoC5/psoc_INT.c ****         {
  84:.\Generated_Source\PSoC5/psoc_INT.c ****             /* Set errors */
  85:.\Generated_Source\PSoC5/psoc_INT.c ****             psoc_mstrStatus |= (psoc_MSTAT_ERR_XFER     |
  86:.\Generated_Source\PSoC5/psoc_INT.c ****                                             psoc_MSTAT_ERR_ARB_LOST |
  87:.\Generated_Source\PSoC5/psoc_INT.c ****                                             psoc_GET_MSTAT_CMPLT);
  88:.\Generated_Source\PSoC5/psoc_INT.c **** 
  89:.\Generated_Source\PSoC5/psoc_INT.c ****             psoc_DISABLE_INT_ON_STOP; /* Interrupt on Stop is enabled by write */
  90:.\Generated_Source\PSoC5/psoc_INT.c **** 
  91:.\Generated_Source\PSoC5/psoc_INT.c ****             #if(psoc_MODE_MULTI_MASTER_SLAVE_ENABLED)
  92:.\Generated_Source\PSoC5/psoc_INT.c ****                 if(psoc_CHECK_ADDRESS_STS(tmpCsr))
  93:.\Generated_Source\PSoC5/psoc_INT.c ****                 {
  94:.\Generated_Source\PSoC5/psoc_INT.c ****                     /* The slave was addressed */
  95:.\Generated_Source\PSoC5/psoc_INT.c ****                     psoc_state = psoc_SM_SLAVE;
  96:.\Generated_Source\PSoC5/psoc_INT.c ****                 }
  97:.\Generated_Source\PSoC5/psoc_INT.c ****                 else
  98:.\Generated_Source\PSoC5/psoc_INT.c ****                 {
  99:.\Generated_Source\PSoC5/psoc_INT.c ****                     psoc_BUS_RELEASE;
 100:.\Generated_Source\PSoC5/psoc_INT.c **** 
 101:.\Generated_Source\PSoC5/psoc_INT.c ****                     psoc_state = psoc_SM_EXIT_IDLE;
 102:.\Generated_Source\PSoC5/psoc_INT.c ****                 }
 103:.\Generated_Source\PSoC5/psoc_INT.c ****             #else
 104:.\Generated_Source\PSoC5/psoc_INT.c ****                 psoc_BUS_RELEASE;
 105:.\Generated_Source\PSoC5/psoc_INT.c **** 
 106:.\Generated_Source\PSoC5/psoc_INT.c ****                 psoc_state = psoc_SM_EXIT_IDLE;
 107:.\Generated_Source\PSoC5/psoc_INT.c **** 
 108:.\Generated_Source\PSoC5/psoc_INT.c ****             #endif /* (psoc_MODE_MULTI_MASTER_SLAVE_ENABLED) */
 109:.\Generated_Source\PSoC5/psoc_INT.c ****         }
 110:.\Generated_Source\PSoC5/psoc_INT.c ****     #endif /* (psoc_MODE_MULTI_MASTER_ENABLED) */
 111:.\Generated_Source\PSoC5/psoc_INT.c **** 
 112:.\Generated_Source\PSoC5/psoc_INT.c ****     /* Check for Master operation mode */
 113:.\Generated_Source\PSoC5/psoc_INT.c ****     if(psoc_CHECK_SM_MASTER)
  47              		.loc 1 113 0
  48 0012 40F20003 		movw	r3, #:lower16:psoc_state
  49 0016 C0F20003 		movt	r3, #:upper16:psoc_state
  50 001a 1B78     		ldrb	r3, [r3, #0]
  51 001c DBB2     		uxtb	r3, r3
  52 001e 03F04003 		and	r3, r3, #64
  53 0022 DBB2     		uxtb	r3, r3
  54 0024 002B     		cmp	r3, #0
  55 0026 00F0A082 		beq	.L2
 114:.\Generated_Source\PSoC5/psoc_INT.c ****     {
 115:.\Generated_Source\PSoC5/psoc_INT.c ****         #if(psoc_MODE_MASTER_ENABLED)
 116:.\Generated_Source\PSoC5/psoc_INT.c ****             if(psoc_CHECK_BYTE_COMPLETE(tmpCsr))
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\ccYOliLH.s 			page 4


  56              		.loc 1 116 0
  57 002a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
  58 002c 03F00103 		and	r3, r3, #1
  59 0030 002B     		cmp	r3, #0
  60 0032 00F06382 		beq	.L3
 117:.\Generated_Source\PSoC5/psoc_INT.c ****             {
 118:.\Generated_Source\PSoC5/psoc_INT.c ****                 switch (psoc_state)
  61              		.loc 1 118 0
  62 0036 40F20003 		movw	r3, #:lower16:psoc_state
  63 003a C0F20003 		movt	r3, #:upper16:psoc_state
  64 003e 1B78     		ldrb	r3, [r3, #0]
  65 0040 DBB2     		uxtb	r3, r3
  66 0042 A3F14503 		sub	r3, r3, #69
  67 0046 052B     		cmp	r3, #5
  68 0048 00F25382 		bhi	.L4
  69 004c 01A2     		adr	r2, .L8
  70 004e 52F823F0 		ldr	pc, [r2, r3, lsl #2]
  71 0052 00BF     		.align	2
  72              	.L8:
  73 0054 6D000000 		.word	.L5+1
  74 0058 63020000 		.word	.L6+1
  75 005c F3040000 		.word	.L4+1
  76 0060 F3040000 		.word	.L4+1
  77 0064 6D000000 		.word	.L5+1
  78 0068 0B040000 		.word	.L7+1
  79              	.L5:
 119:.\Generated_Source\PSoC5/psoc_INT.c ****                 {
 120:.\Generated_Source\PSoC5/psoc_INT.c ****                 case psoc_SM_MSTR_WR_ADDR:  /* After address is sent, WRITE data */
 121:.\Generated_Source\PSoC5/psoc_INT.c ****                 case psoc_SM_MSTR_RD_ADDR:  /* After address is sent, READ  data */
 122:.\Generated_Source\PSoC5/psoc_INT.c **** 
 123:.\Generated_Source\PSoC5/psoc_INT.c ****                     tmpCsr &= ((uint8) ~psoc_CSR_STOP_STATUS); /* Clear STOP bit history on address
  80              		.loc 1 123 0
  81 006c FB79     		ldrb	r3, [r7, #7]
  82 006e 23F02003 		bic	r3, r3, #32
  83 0072 FB71     		strb	r3, [r7, #7]
 124:.\Generated_Source\PSoC5/psoc_INT.c ****                     
 125:.\Generated_Source\PSoC5/psoc_INT.c ****                     if(psoc_CHECK_ADDR_ACK(tmpCsr))
  84              		.loc 1 125 0
  85 0074 FB79     		ldrb	r3, [r7, #7]
  86 0076 03F00A03 		and	r3, r3, #10
  87 007a DBB2     		uxtb	r3, r3
  88 007c 082B     		cmp	r3, #8
  89 007e 40F08580 		bne	.L9
 126:.\Generated_Source\PSoC5/psoc_INT.c ****                     {
 127:.\Generated_Source\PSoC5/psoc_INT.c ****                         /* Setup for transmit or receive of data */
 128:.\Generated_Source\PSoC5/psoc_INT.c ****                         if(psoc_state == psoc_SM_MSTR_WR_ADDR)   /* TRANSMIT data */
  90              		.loc 1 128 0
  91 0082 40F20003 		movw	r3, #:lower16:psoc_state
  92 0086 C0F20003 		movt	r3, #:upper16:psoc_state
  93 008a 1B78     		ldrb	r3, [r3, #0]
  94 008c DBB2     		uxtb	r3, r3
  95 008e 452B     		cmp	r3, #69
  96 0090 6DD1     		bne	.L10
 129:.\Generated_Source\PSoC5/psoc_INT.c ****                         {
 130:.\Generated_Source\PSoC5/psoc_INT.c ****                             /* Check if at least one byte to transfer */
 131:.\Generated_Source\PSoC5/psoc_INT.c ****                             if(psoc_mstrWrBufSize > 0u)
  97              		.loc 1 131 0
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\ccYOliLH.s 			page 5


  98 0092 40F20003 		movw	r3, #:lower16:psoc_mstrWrBufSize
  99 0096 C0F20003 		movt	r3, #:upper16:psoc_mstrWrBufSize
 100 009a 1B78     		ldrb	r3, [r3, #0]
 101 009c DBB2     		uxtb	r3, r3
 102 009e 002B     		cmp	r3, #0
 103 00a0 21D0     		beq	.L11
 132:.\Generated_Source\PSoC5/psoc_INT.c ****                             {
 133:.\Generated_Source\PSoC5/psoc_INT.c ****                                 /* Load the 1st data byte */
 134:.\Generated_Source\PSoC5/psoc_INT.c ****                                 psoc_DATA_REG = psoc_mstrWrBufPtr[0u];
 104              		.loc 1 134 0
 105 00a2 44F6D813 		movw	r3, #18904
 106 00a6 C4F20003 		movt	r3, 16384
 107 00aa 40F20002 		movw	r2, #:lower16:psoc_mstrWrBufPtr
 108 00ae C0F20002 		movt	r2, #:upper16:psoc_mstrWrBufPtr
 109 00b2 1268     		ldr	r2, [r2, #0]
 110 00b4 1278     		ldrb	r2, [r2, #0]
 111 00b6 D2B2     		uxtb	r2, r2
 112 00b8 1A70     		strb	r2, [r3, #0]
 135:.\Generated_Source\PSoC5/psoc_INT.c ****                                 psoc_TRANSMIT_DATA;
 113              		.loc 1 135 0
 114 00ba 44F6D713 		movw	r3, #18903
 115 00be C4F20003 		movt	r3, 16384
 116 00c2 4FF00402 		mov	r2, #4
 117 00c6 1A70     		strb	r2, [r3, #0]
 136:.\Generated_Source\PSoC5/psoc_INT.c ****                                 psoc_mstrWrBufIndex = 1u;   /* Set index to 2nd element */
 118              		.loc 1 136 0
 119 00c8 40F20003 		movw	r3, #:lower16:psoc_mstrWrBufIndex
 120 00cc C0F20003 		movt	r3, #:upper16:psoc_mstrWrBufIndex
 121 00d0 4FF00102 		mov	r2, #1
 122 00d4 1A70     		strb	r2, [r3, #0]
 137:.\Generated_Source\PSoC5/psoc_INT.c **** 
 138:.\Generated_Source\PSoC5/psoc_INT.c ****                                 /* Set transmit state until done */
 139:.\Generated_Source\PSoC5/psoc_INT.c ****                                 psoc_state = psoc_SM_MSTR_WR_DATA;
 123              		.loc 1 139 0
 124 00d6 40F20003 		movw	r3, #:lower16:psoc_state
 125 00da C0F20003 		movt	r3, #:upper16:psoc_state
 126 00de 4FF04602 		mov	r2, #70
 127 00e2 1A70     		strb	r2, [r3, #0]
 140:.\Generated_Source\PSoC5/psoc_INT.c ****                             }
 141:.\Generated_Source\PSoC5/psoc_INT.c ****                             /* End of buffer: complete writing */
 142:.\Generated_Source\PSoC5/psoc_INT.c ****                             else if(psoc_CHECK_NO_STOP(psoc_mstrControl))
 143:.\Generated_Source\PSoC5/psoc_INT.c ****                             {
 144:.\Generated_Source\PSoC5/psoc_INT.c ****                                 #if(CY_PSOC5A)
 145:.\Generated_Source\PSoC5/psoc_INT.c ****                                     /* Do not handles 0 bytes transfer - HALT is NOT allowed */
 146:.\Generated_Source\PSoC5/psoc_INT.c ****                                     psoc_ENABLE_INT_ON_STOP;
 147:.\Generated_Source\PSoC5/psoc_INT.c ****                                     psoc_GENERATE_STOP;
 148:.\Generated_Source\PSoC5/psoc_INT.c ****                                 
 149:.\Generated_Source\PSoC5/psoc_INT.c ****                                 #else
 150:.\Generated_Source\PSoC5/psoc_INT.c ****                                     /* Set WRITE complete and Master HALTED */
 151:.\Generated_Source\PSoC5/psoc_INT.c ****                                     psoc_mstrStatus |= (psoc_MSTAT_XFER_HALT |
 152:.\Generated_Source\PSoC5/psoc_INT.c ****                                                                     psoc_MSTAT_WR_CMPLT);
 153:.\Generated_Source\PSoC5/psoc_INT.c **** 
 154:.\Generated_Source\PSoC5/psoc_INT.c ****                                     psoc_state = psoc_SM_MSTR_HALT; /* Expect RESTART */
 155:.\Generated_Source\PSoC5/psoc_INT.c ****                                     psoc_DisableInt();
 156:.\Generated_Source\PSoC5/psoc_INT.c ****                                 
 157:.\Generated_Source\PSoC5/psoc_INT.c ****                                 #endif /* (CY_PSOC5A) */
 158:.\Generated_Source\PSoC5/psoc_INT.c ****                             }
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\ccYOliLH.s 			page 6


 159:.\Generated_Source\PSoC5/psoc_INT.c ****                             else
 160:.\Generated_Source\PSoC5/psoc_INT.c ****                             {
 161:.\Generated_Source\PSoC5/psoc_INT.c ****                                 psoc_ENABLE_INT_ON_STOP; /* Enable interrupt on STOP, to catch it *
 162:.\Generated_Source\PSoC5/psoc_INT.c ****                                 psoc_GENERATE_STOP;
 163:.\Generated_Source\PSoC5/psoc_INT.c ****                             }
 164:.\Generated_Source\PSoC5/psoc_INT.c ****                         }
 165:.\Generated_Source\PSoC5/psoc_INT.c ****                         else  /* Master Receive data */
 166:.\Generated_Source\PSoC5/psoc_INT.c ****                         {
 167:.\Generated_Source\PSoC5/psoc_INT.c ****                             psoc_READY_TO_READ; /* Release bus to read data */
 168:.\Generated_Source\PSoC5/psoc_INT.c **** 
 169:.\Generated_Source\PSoC5/psoc_INT.c ****                             psoc_state  = psoc_SM_MSTR_RD_DATA;
 170:.\Generated_Source\PSoC5/psoc_INT.c ****                         }
 171:.\Generated_Source\PSoC5/psoc_INT.c ****                     }
 172:.\Generated_Source\PSoC5/psoc_INT.c ****                     /* Address is NACKed */
 173:.\Generated_Source\PSoC5/psoc_INT.c ****                     else if(psoc_CHECK_ADDR_NAK(tmpCsr))
 174:.\Generated_Source\PSoC5/psoc_INT.c ****                     {
 175:.\Generated_Source\PSoC5/psoc_INT.c ****                         /* Set Address NAK error */
 176:.\Generated_Source\PSoC5/psoc_INT.c ****                         psoc_mstrStatus |= (psoc_MSTAT_ERR_XFER |
 177:.\Generated_Source\PSoC5/psoc_INT.c ****                                                         psoc_MSTAT_ERR_ADDR_NAK);
 178:.\Generated_Source\PSoC5/psoc_INT.c ****                                                         
 179:.\Generated_Source\PSoC5/psoc_INT.c ****                         if(psoc_CHECK_NO_STOP(psoc_mstrControl))
 180:.\Generated_Source\PSoC5/psoc_INT.c ****                         {
 181:.\Generated_Source\PSoC5/psoc_INT.c ****                             psoc_mstrStatus |= (psoc_MSTAT_XFER_HALT | 
 182:.\Generated_Source\PSoC5/psoc_INT.c ****                                                             psoc_GET_MSTAT_CMPLT);
 183:.\Generated_Source\PSoC5/psoc_INT.c **** 
 184:.\Generated_Source\PSoC5/psoc_INT.c ****                             psoc_state = psoc_SM_MSTR_HALT; /* Expect RESTART */
 185:.\Generated_Source\PSoC5/psoc_INT.c ****                             psoc_DisableInt();
 186:.\Generated_Source\PSoC5/psoc_INT.c ****                         }
 187:.\Generated_Source\PSoC5/psoc_INT.c ****                         else  /* Do normal Stop */
 188:.\Generated_Source\PSoC5/psoc_INT.c ****                         {
 189:.\Generated_Source\PSoC5/psoc_INT.c ****                             psoc_ENABLE_INT_ON_STOP; /* Enable interrupt on STOP, to catch it */
 190:.\Generated_Source\PSoC5/psoc_INT.c ****                             psoc_GENERATE_STOP;
 191:.\Generated_Source\PSoC5/psoc_INT.c ****                         }
 192:.\Generated_Source\PSoC5/psoc_INT.c ****                     }
 193:.\Generated_Source\PSoC5/psoc_INT.c ****                     else
 194:.\Generated_Source\PSoC5/psoc_INT.c ****                     {
 195:.\Generated_Source\PSoC5/psoc_INT.c ****                         /* Address phase is not set for some reason: error */
 196:.\Generated_Source\PSoC5/psoc_INT.c ****                         #if(psoc_TIMEOUT_ENABLED)
 197:.\Generated_Source\PSoC5/psoc_INT.c ****                             /* Exit from interrupt to take a chance for timeout timer handle this c
 198:.\Generated_Source\PSoC5/psoc_INT.c ****                             psoc_DisableInt();
 199:.\Generated_Source\PSoC5/psoc_INT.c ****                             psoc_ClearPendingInt();
 200:.\Generated_Source\PSoC5/psoc_INT.c ****                         #else
 201:.\Generated_Source\PSoC5/psoc_INT.c ****                             /* Block execution flow: unexpected condition */
 202:.\Generated_Source\PSoC5/psoc_INT.c ****                             CYASSERT(0u != 0u);
 203:.\Generated_Source\PSoC5/psoc_INT.c ****                         #endif /* (psoc_TIMEOUT_ENABLED) */
 204:.\Generated_Source\PSoC5/psoc_INT.c ****                     }
 205:.\Generated_Source\PSoC5/psoc_INT.c ****                     break;
 128              		.loc 1 205 0
 129 00e4 0AE2     		b	.L3
 130              	.L11:
 142:.\Generated_Source\PSoC5/psoc_INT.c ****                             else if(psoc_CHECK_NO_STOP(psoc_mstrControl))
 131              		.loc 1 142 0
 132 00e6 40F20003 		movw	r3, #:lower16:psoc_mstrControl
 133 00ea C0F20003 		movt	r3, #:upper16:psoc_mstrControl
 134 00ee 1B78     		ldrb	r3, [r3, #0]
 135 00f0 DBB2     		uxtb	r3, r3
 136 00f2 03F00203 		and	r3, r3, #2
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\ccYOliLH.s 			page 7


 137 00f6 002B     		cmp	r3, #0
 138 00f8 1CD0     		beq	.L13
 151:.\Generated_Source\PSoC5/psoc_INT.c ****                                     psoc_mstrStatus |= (psoc_MSTAT_XFER_HALT |
 139              		.loc 1 151 0
 140 00fa 40F20003 		movw	r3, #:lower16:psoc_mstrStatus
 141 00fe C0F20003 		movt	r3, #:upper16:psoc_mstrStatus
 142 0102 1B78     		ldrb	r3, [r3, #0]
 143 0104 DBB2     		uxtb	r3, r3
 144 0106 43F00A03 		orr	r3, r3, #10
 145 010a DAB2     		uxtb	r2, r3
 146 010c 40F20003 		movw	r3, #:lower16:psoc_mstrStatus
 147 0110 C0F20003 		movt	r3, #:upper16:psoc_mstrStatus
 148 0114 1A70     		strb	r2, [r3, #0]
 154:.\Generated_Source\PSoC5/psoc_INT.c ****                                     psoc_state = psoc_SM_MSTR_HALT; /* Expect RESTART */
 149              		.loc 1 154 0
 150 0116 40F20003 		movw	r3, #:lower16:psoc_state
 151 011a C0F20003 		movt	r3, #:upper16:psoc_state
 152 011e 4FF06002 		mov	r2, #96
 153 0122 1A70     		strb	r2, [r3, #0]
 155:.\Generated_Source\PSoC5/psoc_INT.c ****                                     psoc_DisableInt();
 154              		.loc 1 155 0
 155 0124 4EF28013 		movw	r3, #57728
 156 0128 CEF20003 		movt	r3, 57344
 157 012c 4FF40042 		mov	r2, #32768
 158 0130 1A60     		str	r2, [r3, #0]
 159              		.loc 1 205 0
 160 0132 E3E1     		b	.L3
 161              	.L13:
 161:.\Generated_Source\PSoC5/psoc_INT.c ****                                 psoc_ENABLE_INT_ON_STOP; /* Enable interrupt on STOP, to catch it *
 162              		.loc 1 161 0
 163 0134 44F6D613 		movw	r3, #18902
 164 0138 C4F20003 		movt	r3, 16384
 165 013c 44F6D612 		movw	r2, #18902
 166 0140 C4F20002 		movt	r2, 16384
 167 0144 1278     		ldrb	r2, [r2, #0]
 168 0146 D2B2     		uxtb	r2, r2
 169 0148 42F01002 		orr	r2, r2, #16
 170 014c D2B2     		uxtb	r2, r2
 171 014e 1A70     		strb	r2, [r3, #0]
 162:.\Generated_Source\PSoC5/psoc_INT.c ****                                 psoc_GENERATE_STOP;
 172              		.loc 1 162 0
 173 0150 44F6D913 		movw	r3, #18905
 174 0154 C4F20003 		movt	r3, 16384
 175 0158 4FF01002 		mov	r2, #16
 176 015c 1A70     		strb	r2, [r3, #0]
 177 015e 44F6D713 		movw	r3, #18903
 178 0162 C4F20003 		movt	r3, 16384
 179 0166 4FF00402 		mov	r2, #4
 180 016a 1A70     		strb	r2, [r3, #0]
 181              		.loc 1 205 0
 182 016c C6E1     		b	.L3
 183              	.L10:
 167:.\Generated_Source\PSoC5/psoc_INT.c ****                             psoc_READY_TO_READ; /* Release bus to read data */
 184              		.loc 1 167 0
 185 016e 44F6D713 		movw	r3, #18903
 186 0172 C4F20003 		movt	r3, 16384
 187 0176 4FF00002 		mov	r2, #0
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\ccYOliLH.s 			page 8


 188 017a 1A70     		strb	r2, [r3, #0]
 169:.\Generated_Source\PSoC5/psoc_INT.c ****                             psoc_state  = psoc_SM_MSTR_RD_DATA;
 189              		.loc 1 169 0
 190 017c 40F20003 		movw	r3, #:lower16:psoc_state
 191 0180 C0F20003 		movt	r3, #:upper16:psoc_state
 192 0184 4FF04A02 		mov	r2, #74
 193 0188 1A70     		strb	r2, [r3, #0]
 194              		.loc 1 205 0
 195 018a B7E1     		b	.L3
 196              	.L9:
 173:.\Generated_Source\PSoC5/psoc_INT.c ****                     else if(psoc_CHECK_ADDR_NAK(tmpCsr))
 197              		.loc 1 173 0
 198 018c FB79     		ldrb	r3, [r7, #7]
 199 018e 03F00A03 		and	r3, r3, #10
 200 0192 DBB2     		uxtb	r3, r3
 201 0194 0A2B     		cmp	r3, #10
 202 0196 5FD1     		bne	.L14
 176:.\Generated_Source\PSoC5/psoc_INT.c ****                         psoc_mstrStatus |= (psoc_MSTAT_ERR_XFER |
 203              		.loc 1 176 0
 204 0198 40F20003 		movw	r3, #:lower16:psoc_mstrStatus
 205 019c C0F20003 		movt	r3, #:upper16:psoc_mstrStatus
 206 01a0 1B78     		ldrb	r3, [r3, #0]
 207 01a2 DBB2     		uxtb	r3, r3
 208 01a4 63F05F03 		orn	r3, r3, #95
 209 01a8 DAB2     		uxtb	r2, r3
 210 01aa 40F20003 		movw	r3, #:lower16:psoc_mstrStatus
 211 01ae C0F20003 		movt	r3, #:upper16:psoc_mstrStatus
 212 01b2 1A70     		strb	r2, [r3, #0]
 179:.\Generated_Source\PSoC5/psoc_INT.c ****                         if(psoc_CHECK_NO_STOP(psoc_mstrControl))
 213              		.loc 1 179 0
 214 01b4 40F20003 		movw	r3, #:lower16:psoc_mstrControl
 215 01b8 C0F20003 		movt	r3, #:upper16:psoc_mstrControl
 216 01bc 1B78     		ldrb	r3, [r3, #0]
 217 01be DBB2     		uxtb	r3, r3
 218 01c0 03F00203 		and	r3, r3, #2
 219 01c4 002B     		cmp	r3, #0
 220 01c6 2AD0     		beq	.L15
 182:.\Generated_Source\PSoC5/psoc_INT.c ****                                                             psoc_GET_MSTAT_CMPLT);
 221              		.loc 1 182 0
 222 01c8 40F20003 		movw	r3, #:lower16:psoc_state
 223 01cc C0F20003 		movt	r3, #:upper16:psoc_state
 224 01d0 1B78     		ldrb	r3, [r3, #0]
 225 01d2 DBB2     		uxtb	r3, r3
 226 01d4 03F00803 		and	r3, r3, #8
 181:.\Generated_Source\PSoC5/psoc_INT.c ****                             psoc_mstrStatus |= (psoc_MSTAT_XFER_HALT | 
 227              		.loc 1 181 0
 228 01d8 002B     		cmp	r3, #0
 229 01da 02D0     		beq	.L16
 181:.\Generated_Source\PSoC5/psoc_INT.c ****                             psoc_mstrStatus |= (psoc_MSTAT_XFER_HALT | 
 230              		.loc 1 181 0 is_stmt 0 discriminator 1
 231 01dc 4FF00902 		mov	r2, #9
 232 01e0 01E0     		b	.L17
 233              	.L16:
 181:.\Generated_Source\PSoC5/psoc_INT.c ****                             psoc_mstrStatus |= (psoc_MSTAT_XFER_HALT | 
 234              		.loc 1 181 0 discriminator 2
 235 01e2 4FF00A02 		mov	r2, #10
 236              	.L17:
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\ccYOliLH.s 			page 9


 181:.\Generated_Source\PSoC5/psoc_INT.c ****                             psoc_mstrStatus |= (psoc_MSTAT_XFER_HALT | 
 237              		.loc 1 181 0 discriminator 3
 238 01e6 40F20003 		movw	r3, #:lower16:psoc_mstrStatus
 239 01ea C0F20003 		movt	r3, #:upper16:psoc_mstrStatus
 240 01ee 1B78     		ldrb	r3, [r3, #0]
 241 01f0 DBB2     		uxtb	r3, r3
 242 01f2 1343     		orrs	r3, r3, r2
 243 01f4 DAB2     		uxtb	r2, r3
 244 01f6 40F20003 		movw	r3, #:lower16:psoc_mstrStatus
 245 01fa C0F20003 		movt	r3, #:upper16:psoc_mstrStatus
 246 01fe 1A70     		strb	r2, [r3, #0]
 184:.\Generated_Source\PSoC5/psoc_INT.c ****                             psoc_state = psoc_SM_MSTR_HALT; /* Expect RESTART */
 247              		.loc 1 184 0 is_stmt 1 discriminator 3
 248 0200 40F20003 		movw	r3, #:lower16:psoc_state
 249 0204 C0F20003 		movt	r3, #:upper16:psoc_state
 250 0208 4FF06002 		mov	r2, #96
 251 020c 1A70     		strb	r2, [r3, #0]
 185:.\Generated_Source\PSoC5/psoc_INT.c ****                             psoc_DisableInt();
 252              		.loc 1 185 0 discriminator 3
 253 020e 4EF28013 		movw	r3, #57728
 254 0212 CEF20003 		movt	r3, 57344
 255 0216 4FF40042 		mov	r2, #32768
 256 021a 1A60     		str	r2, [r3, #0]
 257              		.loc 1 205 0 discriminator 3
 258 021c 6EE1     		b	.L3
 259              	.L15:
 189:.\Generated_Source\PSoC5/psoc_INT.c ****                             psoc_ENABLE_INT_ON_STOP; /* Enable interrupt on STOP, to catch it */
 260              		.loc 1 189 0
 261 021e 44F6D613 		movw	r3, #18902
 262 0222 C4F20003 		movt	r3, 16384
 263 0226 44F6D612 		movw	r2, #18902
 264 022a C4F20002 		movt	r2, 16384
 265 022e 1278     		ldrb	r2, [r2, #0]
 266 0230 D2B2     		uxtb	r2, r2
 267 0232 42F01002 		orr	r2, r2, #16
 268 0236 D2B2     		uxtb	r2, r2
 269 0238 1A70     		strb	r2, [r3, #0]
 190:.\Generated_Source\PSoC5/psoc_INT.c ****                             psoc_GENERATE_STOP;
 270              		.loc 1 190 0
 271 023a 44F6D913 		movw	r3, #18905
 272 023e C4F20003 		movt	r3, 16384
 273 0242 4FF01002 		mov	r2, #16
 274 0246 1A70     		strb	r2, [r3, #0]
 275 0248 44F6D713 		movw	r3, #18903
 276 024c C4F20003 		movt	r3, 16384
 277 0250 4FF00402 		mov	r2, #4
 278 0254 1A70     		strb	r2, [r3, #0]
 279              		.loc 1 205 0
 280 0256 51E1     		b	.L3
 281              	.L14:
 202:.\Generated_Source\PSoC5/psoc_INT.c ****                             CYASSERT(0u != 0u);
 282              		.loc 1 202 0 discriminator 1
 283 0258 4FF00000 		mov	r0, #0
 284 025c FFF7FEFF 		bl	CyHalt
 285              		.loc 1 205 0 discriminator 1
 286 0260 4CE1     		b	.L3
 287              	.L6:
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\ccYOliLH.s 			page 10


 206:.\Generated_Source\PSoC5/psoc_INT.c **** 
 207:.\Generated_Source\PSoC5/psoc_INT.c ****                 case psoc_SM_MSTR_WR_DATA:
 208:.\Generated_Source\PSoC5/psoc_INT.c **** 
 209:.\Generated_Source\PSoC5/psoc_INT.c ****                     if(psoc_CHECK_DATA_ACK(tmpCsr))
 288              		.loc 1 209 0
 289 0262 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 290 0264 03F00203 		and	r3, r3, #2
 291 0268 002B     		cmp	r3, #0
 292 026a 7CD1     		bne	.L18
 210:.\Generated_Source\PSoC5/psoc_INT.c ****                     {
 211:.\Generated_Source\PSoC5/psoc_INT.c ****                         /* Check if end of buffer */
 212:.\Generated_Source\PSoC5/psoc_INT.c ****                         if(psoc_mstrWrBufIndex  < psoc_mstrWrBufSize)
 293              		.loc 1 212 0
 294 026c 40F20003 		movw	r3, #:lower16:psoc_mstrWrBufIndex
 295 0270 C0F20003 		movt	r3, #:upper16:psoc_mstrWrBufIndex
 296 0274 1B78     		ldrb	r3, [r3, #0]
 297 0276 DAB2     		uxtb	r2, r3
 298 0278 40F20003 		movw	r3, #:lower16:psoc_mstrWrBufSize
 299 027c C0F20003 		movt	r3, #:upper16:psoc_mstrWrBufSize
 300 0280 1B78     		ldrb	r3, [r3, #0]
 301 0282 DBB2     		uxtb	r3, r3
 302 0284 9A42     		cmp	r2, r3
 303 0286 28D2     		bcs	.L19
 213:.\Generated_Source\PSoC5/psoc_INT.c ****                         {
 214:.\Generated_Source\PSoC5/psoc_INT.c ****                             psoc_DATA_REG =
 304              		.loc 1 214 0
 305 0288 44F6D813 		movw	r3, #18904
 306 028c C4F20003 		movt	r3, 16384
 215:.\Generated_Source\PSoC5/psoc_INT.c ****                                                      psoc_mstrWrBufPtr[psoc_mstrWrBufIndex];
 307              		.loc 1 215 0
 308 0290 40F20002 		movw	r2, #:lower16:psoc_mstrWrBufPtr
 309 0294 C0F20002 		movt	r2, #:upper16:psoc_mstrWrBufPtr
 310 0298 1168     		ldr	r1, [r2, #0]
 311 029a 40F20002 		movw	r2, #:lower16:psoc_mstrWrBufIndex
 312 029e C0F20002 		movt	r2, #:upper16:psoc_mstrWrBufIndex
 313 02a2 1278     		ldrb	r2, [r2, #0]
 314 02a4 D2B2     		uxtb	r2, r2
 315 02a6 8A18     		adds	r2, r1, r2
 316 02a8 1278     		ldrb	r2, [r2, #0]
 317 02aa D2B2     		uxtb	r2, r2
 214:.\Generated_Source\PSoC5/psoc_INT.c ****                             psoc_DATA_REG =
 318              		.loc 1 214 0
 319 02ac 1A70     		strb	r2, [r3, #0]
 216:.\Generated_Source\PSoC5/psoc_INT.c ****                             psoc_TRANSMIT_DATA;
 320              		.loc 1 216 0
 321 02ae 44F6D713 		movw	r3, #18903
 322 02b2 C4F20003 		movt	r3, 16384
 323 02b6 4FF00402 		mov	r2, #4
 324 02ba 1A70     		strb	r2, [r3, #0]
 217:.\Generated_Source\PSoC5/psoc_INT.c ****                             psoc_mstrWrBufIndex++;
 325              		.loc 1 217 0
 326 02bc 40F20003 		movw	r3, #:lower16:psoc_mstrWrBufIndex
 327 02c0 C0F20003 		movt	r3, #:upper16:psoc_mstrWrBufIndex
 328 02c4 1B78     		ldrb	r3, [r3, #0]
 329 02c6 DBB2     		uxtb	r3, r3
 330 02c8 03F10103 		add	r3, r3, #1
 331 02cc DAB2     		uxtb	r2, r3
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\ccYOliLH.s 			page 11


 332 02ce 40F20003 		movw	r3, #:lower16:psoc_mstrWrBufIndex
 333 02d2 C0F20003 		movt	r3, #:upper16:psoc_mstrWrBufIndex
 334 02d6 1A70     		strb	r2, [r3, #0]
 218:.\Generated_Source\PSoC5/psoc_INT.c ****                         }
 219:.\Generated_Source\PSoC5/psoc_INT.c ****                         /* End of buffer: complete writing */
 220:.\Generated_Source\PSoC5/psoc_INT.c ****                         else if(psoc_CHECK_NO_STOP(psoc_mstrControl))
 221:.\Generated_Source\PSoC5/psoc_INT.c ****                         {
 222:.\Generated_Source\PSoC5/psoc_INT.c ****                             /* Set WRITE complete and Master HALTED */
 223:.\Generated_Source\PSoC5/psoc_INT.c ****                             psoc_mstrStatus |= (psoc_MSTAT_XFER_HALT |
 224:.\Generated_Source\PSoC5/psoc_INT.c ****                                                             psoc_MSTAT_WR_CMPLT);
 225:.\Generated_Source\PSoC5/psoc_INT.c **** 
 226:.\Generated_Source\PSoC5/psoc_INT.c ****                             psoc_state = psoc_SM_MSTR_HALT;    /* Expect RESTART */
 227:.\Generated_Source\PSoC5/psoc_INT.c ****                             psoc_DisableInt();
 228:.\Generated_Source\PSoC5/psoc_INT.c ****                         }
 229:.\Generated_Source\PSoC5/psoc_INT.c ****                         else  /* Do normal STOP */
 230:.\Generated_Source\PSoC5/psoc_INT.c ****                         {
 231:.\Generated_Source\PSoC5/psoc_INT.c ****                             psoc_Workaround();          /* Workaround: empty function */
 232:.\Generated_Source\PSoC5/psoc_INT.c ****                             psoc_ENABLE_INT_ON_STOP;    /* Enable interrupt on STOP, to catch it */
 233:.\Generated_Source\PSoC5/psoc_INT.c ****                             psoc_GENERATE_STOP;
 234:.\Generated_Source\PSoC5/psoc_INT.c ****                         }
 235:.\Generated_Source\PSoC5/psoc_INT.c ****                     }
 236:.\Generated_Source\PSoC5/psoc_INT.c ****                     /* Last byte NAKed: end writing */
 237:.\Generated_Source\PSoC5/psoc_INT.c ****                     else if(psoc_CHECK_NO_STOP(psoc_mstrControl))
 238:.\Generated_Source\PSoC5/psoc_INT.c ****                     {
 239:.\Generated_Source\PSoC5/psoc_INT.c ****                         /* Set WRITE complete, SHORT transfer and Master HALTED */
 240:.\Generated_Source\PSoC5/psoc_INT.c ****                         psoc_mstrStatus |= (psoc_MSTAT_ERR_XFER       |
 241:.\Generated_Source\PSoC5/psoc_INT.c ****                                                         psoc_MSTAT_ERR_SHORT_XFER |
 242:.\Generated_Source\PSoC5/psoc_INT.c ****                                                         psoc_MSTAT_XFER_HALT      |
 243:.\Generated_Source\PSoC5/psoc_INT.c ****                                                         psoc_MSTAT_WR_CMPLT);
 244:.\Generated_Source\PSoC5/psoc_INT.c **** 
 245:.\Generated_Source\PSoC5/psoc_INT.c ****                         psoc_state = psoc_SM_MSTR_HALT;    /* Expect RESTART */
 246:.\Generated_Source\PSoC5/psoc_INT.c ****                         psoc_DisableInt();
 247:.\Generated_Source\PSoC5/psoc_INT.c ****                     }
 248:.\Generated_Source\PSoC5/psoc_INT.c ****                     else  /* Do normal STOP */
 249:.\Generated_Source\PSoC5/psoc_INT.c ****                     {
 250:.\Generated_Source\PSoC5/psoc_INT.c ****                         psoc_ENABLE_INT_ON_STOP;    /* Enable interrupt on STOP, to catch it */
 251:.\Generated_Source\PSoC5/psoc_INT.c ****                         psoc_GENERATE_STOP;
 252:.\Generated_Source\PSoC5/psoc_INT.c **** 
 253:.\Generated_Source\PSoC5/psoc_INT.c ****                         /* Set SHORT and ERR transfer */
 254:.\Generated_Source\PSoC5/psoc_INT.c ****                         psoc_mstrStatus |= (psoc_MSTAT_ERR_SHORT_XFER |
 255:.\Generated_Source\PSoC5/psoc_INT.c ****                                                         psoc_MSTAT_ERR_XFER);
 256:.\Generated_Source\PSoC5/psoc_INT.c ****                     }
 257:.\Generated_Source\PSoC5/psoc_INT.c ****                     
 258:.\Generated_Source\PSoC5/psoc_INT.c ****                     break;
 335              		.loc 1 258 0
 336 02d8 10E1     		b	.L3
 337              	.L19:
 220:.\Generated_Source\PSoC5/psoc_INT.c ****                         else if(psoc_CHECK_NO_STOP(psoc_mstrControl))
 338              		.loc 1 220 0
 339 02da 40F20003 		movw	r3, #:lower16:psoc_mstrControl
 340 02de C0F20003 		movt	r3, #:upper16:psoc_mstrControl
 341 02e2 1B78     		ldrb	r3, [r3, #0]
 342 02e4 DBB2     		uxtb	r3, r3
 343 02e6 03F00203 		and	r3, r3, #2
 344 02ea 002B     		cmp	r3, #0
 345 02ec 1CD0     		beq	.L21
 223:.\Generated_Source\PSoC5/psoc_INT.c ****                             psoc_mstrStatus |= (psoc_MSTAT_XFER_HALT |
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\ccYOliLH.s 			page 12


 346              		.loc 1 223 0
 347 02ee 40F20003 		movw	r3, #:lower16:psoc_mstrStatus
 348 02f2 C0F20003 		movt	r3, #:upper16:psoc_mstrStatus
 349 02f6 1B78     		ldrb	r3, [r3, #0]
 350 02f8 DBB2     		uxtb	r3, r3
 351 02fa 43F00A03 		orr	r3, r3, #10
 352 02fe DAB2     		uxtb	r2, r3
 353 0300 40F20003 		movw	r3, #:lower16:psoc_mstrStatus
 354 0304 C0F20003 		movt	r3, #:upper16:psoc_mstrStatus
 355 0308 1A70     		strb	r2, [r3, #0]
 226:.\Generated_Source\PSoC5/psoc_INT.c ****                             psoc_state = psoc_SM_MSTR_HALT;    /* Expect RESTART */
 356              		.loc 1 226 0
 357 030a 40F20003 		movw	r3, #:lower16:psoc_state
 358 030e C0F20003 		movt	r3, #:upper16:psoc_state
 359 0312 4FF06002 		mov	r2, #96
 360 0316 1A70     		strb	r2, [r3, #0]
 227:.\Generated_Source\PSoC5/psoc_INT.c ****                             psoc_DisableInt();
 361              		.loc 1 227 0
 362 0318 4EF28013 		movw	r3, #57728
 363 031c CEF20003 		movt	r3, 57344
 364 0320 4FF40042 		mov	r2, #32768
 365 0324 1A60     		str	r2, [r3, #0]
 366              		.loc 1 258 0
 367 0326 E9E0     		b	.L3
 368              	.L21:
 231:.\Generated_Source\PSoC5/psoc_INT.c ****                             psoc_Workaround();          /* Workaround: empty function */
 369              		.loc 1 231 0
 370 0328 FFF7FEFF 		bl	psoc_Workaround
 232:.\Generated_Source\PSoC5/psoc_INT.c ****                             psoc_ENABLE_INT_ON_STOP;    /* Enable interrupt on STOP, to catch it */
 371              		.loc 1 232 0
 372 032c 44F6D613 		movw	r3, #18902
 373 0330 C4F20003 		movt	r3, 16384
 374 0334 44F6D612 		movw	r2, #18902
 375 0338 C4F20002 		movt	r2, 16384
 376 033c 1278     		ldrb	r2, [r2, #0]
 377 033e D2B2     		uxtb	r2, r2
 378 0340 42F01002 		orr	r2, r2, #16
 379 0344 D2B2     		uxtb	r2, r2
 380 0346 1A70     		strb	r2, [r3, #0]
 233:.\Generated_Source\PSoC5/psoc_INT.c ****                             psoc_GENERATE_STOP;
 381              		.loc 1 233 0
 382 0348 44F6D913 		movw	r3, #18905
 383 034c C4F20003 		movt	r3, 16384
 384 0350 4FF01002 		mov	r2, #16
 385 0354 1A70     		strb	r2, [r3, #0]
 386 0356 44F6D713 		movw	r3, #18903
 387 035a C4F20003 		movt	r3, 16384
 388 035e 4FF00402 		mov	r2, #4
 389 0362 1A70     		strb	r2, [r3, #0]
 390              		.loc 1 258 0
 391 0364 CAE0     		b	.L3
 392              	.L18:
 237:.\Generated_Source\PSoC5/psoc_INT.c ****                     else if(psoc_CHECK_NO_STOP(psoc_mstrControl))
 393              		.loc 1 237 0
 394 0366 40F20003 		movw	r3, #:lower16:psoc_mstrControl
 395 036a C0F20003 		movt	r3, #:upper16:psoc_mstrControl
 396 036e 1B78     		ldrb	r3, [r3, #0]
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\ccYOliLH.s 			page 13


 397 0370 DBB2     		uxtb	r3, r3
 398 0372 03F00203 		and	r3, r3, #2
 399 0376 002B     		cmp	r3, #0
 400 0378 1CD0     		beq	.L22
 240:.\Generated_Source\PSoC5/psoc_INT.c ****                         psoc_mstrStatus |= (psoc_MSTAT_ERR_XFER       |
 401              		.loc 1 240 0
 402 037a 40F20003 		movw	r3, #:lower16:psoc_mstrStatus
 403 037e C0F20003 		movt	r3, #:upper16:psoc_mstrStatus
 404 0382 1B78     		ldrb	r3, [r3, #0]
 405 0384 DBB2     		uxtb	r3, r3
 406 0386 63F06503 		orn	r3, r3, #101
 407 038a DAB2     		uxtb	r2, r3
 408 038c 40F20003 		movw	r3, #:lower16:psoc_mstrStatus
 409 0390 C0F20003 		movt	r3, #:upper16:psoc_mstrStatus
 410 0394 1A70     		strb	r2, [r3, #0]
 245:.\Generated_Source\PSoC5/psoc_INT.c ****                         psoc_state = psoc_SM_MSTR_HALT;    /* Expect RESTART */
 411              		.loc 1 245 0
 412 0396 40F20003 		movw	r3, #:lower16:psoc_state
 413 039a C0F20003 		movt	r3, #:upper16:psoc_state
 414 039e 4FF06002 		mov	r2, #96
 415 03a2 1A70     		strb	r2, [r3, #0]
 246:.\Generated_Source\PSoC5/psoc_INT.c ****                         psoc_DisableInt();
 416              		.loc 1 246 0
 417 03a4 4EF28013 		movw	r3, #57728
 418 03a8 CEF20003 		movt	r3, 57344
 419 03ac 4FF40042 		mov	r2, #32768
 420 03b0 1A60     		str	r2, [r3, #0]
 421              		.loc 1 258 0
 422 03b2 A3E0     		b	.L3
 423              	.L22:
 250:.\Generated_Source\PSoC5/psoc_INT.c ****                         psoc_ENABLE_INT_ON_STOP;    /* Enable interrupt on STOP, to catch it */
 424              		.loc 1 250 0
 425 03b4 44F6D613 		movw	r3, #18902
 426 03b8 C4F20003 		movt	r3, 16384
 427 03bc 44F6D612 		movw	r2, #18902
 428 03c0 C4F20002 		movt	r2, 16384
 429 03c4 1278     		ldrb	r2, [r2, #0]
 430 03c6 D2B2     		uxtb	r2, r2
 431 03c8 42F01002 		orr	r2, r2, #16
 432 03cc D2B2     		uxtb	r2, r2
 433 03ce 1A70     		strb	r2, [r3, #0]
 251:.\Generated_Source\PSoC5/psoc_INT.c ****                         psoc_GENERATE_STOP;
 434              		.loc 1 251 0
 435 03d0 44F6D913 		movw	r3, #18905
 436 03d4 C4F20003 		movt	r3, 16384
 437 03d8 4FF01002 		mov	r2, #16
 438 03dc 1A70     		strb	r2, [r3, #0]
 439 03de 44F6D713 		movw	r3, #18903
 440 03e2 C4F20003 		movt	r3, 16384
 441 03e6 4FF00402 		mov	r2, #4
 442 03ea 1A70     		strb	r2, [r3, #0]
 254:.\Generated_Source\PSoC5/psoc_INT.c ****                         psoc_mstrStatus |= (psoc_MSTAT_ERR_SHORT_XFER |
 443              		.loc 1 254 0
 444 03ec 40F20003 		movw	r3, #:lower16:psoc_mstrStatus
 445 03f0 C0F20003 		movt	r3, #:upper16:psoc_mstrStatus
 446 03f4 1B78     		ldrb	r3, [r3, #0]
 447 03f6 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\ccYOliLH.s 			page 14


 448 03f8 63F06F03 		orn	r3, r3, #111
 449 03fc DAB2     		uxtb	r2, r3
 450 03fe 40F20003 		movw	r3, #:lower16:psoc_mstrStatus
 451 0402 C0F20003 		movt	r3, #:upper16:psoc_mstrStatus
 452 0406 1A70     		strb	r2, [r3, #0]
 453              		.loc 1 258 0
 454 0408 78E0     		b	.L3
 455              	.L7:
 259:.\Generated_Source\PSoC5/psoc_INT.c **** 
 260:.\Generated_Source\PSoC5/psoc_INT.c ****                 case psoc_SM_MSTR_RD_DATA:
 261:.\Generated_Source\PSoC5/psoc_INT.c **** 
 262:.\Generated_Source\PSoC5/psoc_INT.c ****                     psoc_mstrRdBufPtr[psoc_mstrRdBufIndex] = psoc_DATA_REG;
 456              		.loc 1 262 0
 457 040a 40F20003 		movw	r3, #:lower16:psoc_mstrRdBufPtr
 458 040e C0F20003 		movt	r3, #:upper16:psoc_mstrRdBufPtr
 459 0412 1A68     		ldr	r2, [r3, #0]
 460 0414 40F20003 		movw	r3, #:lower16:psoc_mstrRdBufIndex
 461 0418 C0F20003 		movt	r3, #:upper16:psoc_mstrRdBufIndex
 462 041c 1B78     		ldrb	r3, [r3, #0]
 463 041e DBB2     		uxtb	r3, r3
 464 0420 D218     		adds	r2, r2, r3
 465 0422 44F6D813 		movw	r3, #18904
 466 0426 C4F20003 		movt	r3, 16384
 467 042a 1B78     		ldrb	r3, [r3, #0]
 468 042c DBB2     		uxtb	r3, r3
 469 042e 1370     		strb	r3, [r2, #0]
 263:.\Generated_Source\PSoC5/psoc_INT.c ****                     psoc_mstrRdBufIndex++;
 470              		.loc 1 263 0
 471 0430 40F20003 		movw	r3, #:lower16:psoc_mstrRdBufIndex
 472 0434 C0F20003 		movt	r3, #:upper16:psoc_mstrRdBufIndex
 473 0438 1B78     		ldrb	r3, [r3, #0]
 474 043a DBB2     		uxtb	r3, r3
 475 043c 03F10103 		add	r3, r3, #1
 476 0440 DAB2     		uxtb	r2, r3
 477 0442 40F20003 		movw	r3, #:lower16:psoc_mstrRdBufIndex
 478 0446 C0F20003 		movt	r3, #:upper16:psoc_mstrRdBufIndex
 479 044a 1A70     		strb	r2, [r3, #0]
 264:.\Generated_Source\PSoC5/psoc_INT.c **** 
 265:.\Generated_Source\PSoC5/psoc_INT.c ****                     /* Check if end of buffer */
 266:.\Generated_Source\PSoC5/psoc_INT.c ****                     if(psoc_mstrRdBufIndex < psoc_mstrRdBufSize)
 480              		.loc 1 266 0
 481 044c 40F20003 		movw	r3, #:lower16:psoc_mstrRdBufIndex
 482 0450 C0F20003 		movt	r3, #:upper16:psoc_mstrRdBufIndex
 483 0454 1B78     		ldrb	r3, [r3, #0]
 484 0456 DAB2     		uxtb	r2, r3
 485 0458 40F20003 		movw	r3, #:lower16:psoc_mstrRdBufSize
 486 045c C0F20003 		movt	r3, #:upper16:psoc_mstrRdBufSize
 487 0460 1B78     		ldrb	r3, [r3, #0]
 488 0462 DBB2     		uxtb	r3, r3
 489 0464 9A42     		cmp	r2, r3
 490 0466 07D2     		bcs	.L23
 267:.\Generated_Source\PSoC5/psoc_INT.c ****                     {
 268:.\Generated_Source\PSoC5/psoc_INT.c ****                         psoc_ACK_AND_RECEIVE;       /* ACK and receive byte */
 491              		.loc 1 268 0
 492 0468 44F6D713 		movw	r3, #18903
 493 046c C4F20003 		movt	r3, 16384
 494 0470 4FF01002 		mov	r2, #16
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\ccYOliLH.s 			page 15


 495 0474 1A70     		strb	r2, [r3, #0]
 269:.\Generated_Source\PSoC5/psoc_INT.c ****                     }
 270:.\Generated_Source\PSoC5/psoc_INT.c ****                     /* End of buffer: complete reading */
 271:.\Generated_Source\PSoC5/psoc_INT.c ****                     else if(psoc_CHECK_NO_STOP(psoc_mstrControl))
 272:.\Generated_Source\PSoC5/psoc_INT.c ****                     {                        
 273:.\Generated_Source\PSoC5/psoc_INT.c ****                         /* Set READ complete and Master HALTED */
 274:.\Generated_Source\PSoC5/psoc_INT.c ****                         psoc_mstrStatus |= (psoc_MSTAT_XFER_HALT |
 275:.\Generated_Source\PSoC5/psoc_INT.c ****                                                         psoc_MSTAT_RD_CMPLT);
 276:.\Generated_Source\PSoC5/psoc_INT.c ****                         
 277:.\Generated_Source\PSoC5/psoc_INT.c ****                         psoc_state = psoc_SM_MSTR_HALT;    /* Expect RESTART */
 278:.\Generated_Source\PSoC5/psoc_INT.c ****                         psoc_DisableInt();
 279:.\Generated_Source\PSoC5/psoc_INT.c ****                     }
 280:.\Generated_Source\PSoC5/psoc_INT.c ****                     else
 281:.\Generated_Source\PSoC5/psoc_INT.c ****                     {
 282:.\Generated_Source\PSoC5/psoc_INT.c ****                         psoc_ENABLE_INT_ON_STOP;
 283:.\Generated_Source\PSoC5/psoc_INT.c ****                         psoc_NAK_AND_RECEIVE;       /* NACK and TRY to generate STOP */
 284:.\Generated_Source\PSoC5/psoc_INT.c ****                     }
 285:.\Generated_Source\PSoC5/psoc_INT.c ****                     break;
 496              		.loc 1 285 0
 497 0476 41E0     		b	.L3
 498              	.L23:
 271:.\Generated_Source\PSoC5/psoc_INT.c ****                     else if(psoc_CHECK_NO_STOP(psoc_mstrControl))
 499              		.loc 1 271 0
 500 0478 40F20003 		movw	r3, #:lower16:psoc_mstrControl
 501 047c C0F20003 		movt	r3, #:upper16:psoc_mstrControl
 502 0480 1B78     		ldrb	r3, [r3, #0]
 503 0482 DBB2     		uxtb	r3, r3
 504 0484 03F00203 		and	r3, r3, #2
 505 0488 002B     		cmp	r3, #0
 506 048a 1CD0     		beq	.L25
 274:.\Generated_Source\PSoC5/psoc_INT.c ****                         psoc_mstrStatus |= (psoc_MSTAT_XFER_HALT |
 507              		.loc 1 274 0
 508 048c 40F20003 		movw	r3, #:lower16:psoc_mstrStatus
 509 0490 C0F20003 		movt	r3, #:upper16:psoc_mstrStatus
 510 0494 1B78     		ldrb	r3, [r3, #0]
 511 0496 DBB2     		uxtb	r3, r3
 512 0498 43F00903 		orr	r3, r3, #9
 513 049c DAB2     		uxtb	r2, r3
 514 049e 40F20003 		movw	r3, #:lower16:psoc_mstrStatus
 515 04a2 C0F20003 		movt	r3, #:upper16:psoc_mstrStatus
 516 04a6 1A70     		strb	r2, [r3, #0]
 277:.\Generated_Source\PSoC5/psoc_INT.c ****                         psoc_state = psoc_SM_MSTR_HALT;    /* Expect RESTART */
 517              		.loc 1 277 0
 518 04a8 40F20003 		movw	r3, #:lower16:psoc_state
 519 04ac C0F20003 		movt	r3, #:upper16:psoc_state
 520 04b0 4FF06002 		mov	r2, #96
 521 04b4 1A70     		strb	r2, [r3, #0]
 278:.\Generated_Source\PSoC5/psoc_INT.c ****                         psoc_DisableInt();
 522              		.loc 1 278 0
 523 04b6 4EF28013 		movw	r3, #57728
 524 04ba CEF20003 		movt	r3, 57344
 525 04be 4FF40042 		mov	r2, #32768
 526 04c2 1A60     		str	r2, [r3, #0]
 527              		.loc 1 285 0
 528 04c4 1AE0     		b	.L3
 529              	.L25:
 282:.\Generated_Source\PSoC5/psoc_INT.c ****                         psoc_ENABLE_INT_ON_STOP;
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\ccYOliLH.s 			page 16


 530              		.loc 1 282 0
 531 04c6 44F6D613 		movw	r3, #18902
 532 04ca C4F20003 		movt	r3, 16384
 533 04ce 44F6D612 		movw	r2, #18902
 534 04d2 C4F20002 		movt	r2, 16384
 535 04d6 1278     		ldrb	r2, [r2, #0]
 536 04d8 D2B2     		uxtb	r2, r2
 537 04da 42F01002 		orr	r2, r2, #16
 538 04de D2B2     		uxtb	r2, r2
 539 04e0 1A70     		strb	r2, [r3, #0]
 283:.\Generated_Source\PSoC5/psoc_INT.c ****                         psoc_NAK_AND_RECEIVE;       /* NACK and TRY to generate STOP */
 540              		.loc 1 283 0
 541 04e2 44F6D713 		movw	r3, #18903
 542 04e6 C4F20003 		movt	r3, 16384
 543 04ea 4FF00002 		mov	r2, #0
 544 04ee 1A70     		strb	r2, [r3, #0]
 545              		.loc 1 285 0
 546 04f0 04E0     		b	.L3
 547              	.L4:
 286:.\Generated_Source\PSoC5/psoc_INT.c **** 
 287:.\Generated_Source\PSoC5/psoc_INT.c ****                 default: /* This is an invalid state and should not occur */
 288:.\Generated_Source\PSoC5/psoc_INT.c **** 
 289:.\Generated_Source\PSoC5/psoc_INT.c ****                     #if(psoc_TIMEOUT_ENABLED)
 290:.\Generated_Source\PSoC5/psoc_INT.c ****                         /* Exit from interrupt to take a chance for timeout timer handle this case 
 291:.\Generated_Source\PSoC5/psoc_INT.c ****                         psoc_DisableInt();
 292:.\Generated_Source\PSoC5/psoc_INT.c ****                         psoc_ClearPendingInt();
 293:.\Generated_Source\PSoC5/psoc_INT.c ****                     #else
 294:.\Generated_Source\PSoC5/psoc_INT.c ****                         /* Block execution flow: unexpected condition */
 295:.\Generated_Source\PSoC5/psoc_INT.c ****                         CYASSERT(0u != 0u);
 548              		.loc 1 295 0 discriminator 1
 549 04f2 4FF00000 		mov	r0, #0
 550 04f6 FFF7FEFF 		bl	CyHalt
 296:.\Generated_Source\PSoC5/psoc_INT.c ****                     #endif /* (psoc_TIMEOUT_ENABLED) */
 297:.\Generated_Source\PSoC5/psoc_INT.c **** 
 298:.\Generated_Source\PSoC5/psoc_INT.c ****                     break;
 551              		.loc 1 298 0
 552 04fa 00BF     		nop
 553              	.L3:
 299:.\Generated_Source\PSoC5/psoc_INT.c ****                 }
 300:.\Generated_Source\PSoC5/psoc_INT.c ****             }
 301:.\Generated_Source\PSoC5/psoc_INT.c **** 
 302:.\Generated_Source\PSoC5/psoc_INT.c ****             /* Catches the Stop: end of transaction */
 303:.\Generated_Source\PSoC5/psoc_INT.c ****             if(psoc_CHECK_STOP_STS(tmpCsr))
 554              		.loc 1 303 0
 555 04fc FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 556 04fe 03F02003 		and	r3, r3, #32
 557 0502 002B     		cmp	r3, #0
 558 0504 43D0     		beq	.L1
 304:.\Generated_Source\PSoC5/psoc_INT.c ****             {
 305:.\Generated_Source\PSoC5/psoc_INT.c ****                 psoc_mstrStatus |= psoc_GET_MSTAT_CMPLT;
 559              		.loc 1 305 0
 560 0506 40F20003 		movw	r3, #:lower16:psoc_state
 561 050a C0F20003 		movt	r3, #:upper16:psoc_state
 562 050e 1B78     		ldrb	r3, [r3, #0]
 563 0510 DBB2     		uxtb	r3, r3
 564 0512 03F00803 		and	r3, r3, #8
 565 0516 002B     		cmp	r3, #0
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\ccYOliLH.s 			page 17


 566 0518 02D0     		beq	.L27
 567              		.loc 1 305 0 is_stmt 0 discriminator 1
 568 051a 4FF00102 		mov	r2, #1
 569 051e 01E0     		b	.L28
 570              	.L27:
 571              		.loc 1 305 0 discriminator 2
 572 0520 4FF00202 		mov	r2, #2
 573              	.L28:
 574              		.loc 1 305 0 discriminator 3
 575 0524 40F20003 		movw	r3, #:lower16:psoc_mstrStatus
 576 0528 C0F20003 		movt	r3, #:upper16:psoc_mstrStatus
 577 052c 1B78     		ldrb	r3, [r3, #0]
 578 052e DBB2     		uxtb	r3, r3
 579 0530 1343     		orrs	r3, r3, r2
 580 0532 DAB2     		uxtb	r2, r3
 581 0534 40F20003 		movw	r3, #:lower16:psoc_mstrStatus
 582 0538 C0F20003 		movt	r3, #:upper16:psoc_mstrStatus
 583 053c 1A70     		strb	r2, [r3, #0]
 306:.\Generated_Source\PSoC5/psoc_INT.c **** 
 307:.\Generated_Source\PSoC5/psoc_INT.c ****                 psoc_DISABLE_INT_ON_STOP;
 584              		.loc 1 307 0 is_stmt 1 discriminator 3
 585 053e 44F6D613 		movw	r3, #18902
 586 0542 C4F20003 		movt	r3, 16384
 587 0546 44F6D612 		movw	r2, #18902
 588 054a C4F20002 		movt	r2, 16384
 589 054e 1278     		ldrb	r2, [r2, #0]
 590 0550 D2B2     		uxtb	r2, r2
 591 0552 22F01002 		bic	r2, r2, #16
 592 0556 D2B2     		uxtb	r2, r2
 593 0558 1A70     		strb	r2, [r3, #0]
 308:.\Generated_Source\PSoC5/psoc_INT.c ****                 psoc_state = psoc_SM_IDLE;
 594              		.loc 1 308 0 discriminator 3
 595 055a 40F20003 		movw	r3, #:lower16:psoc_state
 596 055e C0F20003 		movt	r3, #:upper16:psoc_state
 597 0562 4FF01002 		mov	r2, #16
 598 0566 1A70     		strb	r2, [r3, #0]
 599 0568 11E0     		b	.L1
 600              	.L2:
 309:.\Generated_Source\PSoC5/psoc_INT.c ****             }
 310:.\Generated_Source\PSoC5/psoc_INT.c ****         #endif /* (psoc_MODE_MASTER_ENABLED) */
 311:.\Generated_Source\PSoC5/psoc_INT.c ****     }
 312:.\Generated_Source\PSoC5/psoc_INT.c ****     else if(psoc_CHECK_SM_SLAVE)
 601              		.loc 1 312 0
 602 056a 40F20003 		movw	r3, #:lower16:psoc_state
 603 056e C0F20003 		movt	r3, #:upper16:psoc_state
 604 0572 1B78     		ldrb	r3, [r3, #0]
 605 0574 DBB2     		uxtb	r3, r3
 606 0576 03F01003 		and	r3, r3, #16
 607 057a DBB2     		uxtb	r3, r3
 608 057c 002B     		cmp	r3, #0
 609 057e 06D1     		bne	.L1
 313:.\Generated_Source\PSoC5/psoc_INT.c ****     {
 314:.\Generated_Source\PSoC5/psoc_INT.c ****         #if(psoc_MODE_SLAVE_ENABLED)
 315:.\Generated_Source\PSoC5/psoc_INT.c ****             
 316:.\Generated_Source\PSoC5/psoc_INT.c ****             if((psoc_CHECK_STOP_STS(tmpCsr)) || /* Stop || Restart */
 317:.\Generated_Source\PSoC5/psoc_INT.c ****                (psoc_CHECK_BYTE_COMPLETE(tmpCsr) && psoc_CHECK_ADDRESS_STS(tmpCsr)))
 318:.\Generated_Source\PSoC5/psoc_INT.c ****             {
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\ccYOliLH.s 			page 18


 319:.\Generated_Source\PSoC5/psoc_INT.c ****                 /* Catch end of master write transcation: use interrupt on Stop */
 320:.\Generated_Source\PSoC5/psoc_INT.c ****                 /* The STOP bit history on address phase does not have correct state */
 321:.\Generated_Source\PSoC5/psoc_INT.c ****                 if(psoc_SM_SL_WR_DATA == psoc_state)
 322:.\Generated_Source\PSoC5/psoc_INT.c ****                 {
 323:.\Generated_Source\PSoC5/psoc_INT.c ****                     psoc_DISABLE_INT_ON_STOP;
 324:.\Generated_Source\PSoC5/psoc_INT.c **** 
 325:.\Generated_Source\PSoC5/psoc_INT.c ****                     psoc_slStatus &= ((uint8) ~psoc_SSTAT_WR_BUSY);
 326:.\Generated_Source\PSoC5/psoc_INT.c ****                     psoc_slStatus |= ((uint8)  psoc_SSTAT_WR_CMPLT);
 327:.\Generated_Source\PSoC5/psoc_INT.c **** 
 328:.\Generated_Source\PSoC5/psoc_INT.c ****                     psoc_state = psoc_SM_IDLE;
 329:.\Generated_Source\PSoC5/psoc_INT.c ****                 }
 330:.\Generated_Source\PSoC5/psoc_INT.c ****             }
 331:.\Generated_Source\PSoC5/psoc_INT.c **** 
 332:.\Generated_Source\PSoC5/psoc_INT.c ****             if(psoc_CHECK_BYTE_COMPLETE(tmpCsr))
 333:.\Generated_Source\PSoC5/psoc_INT.c ****             {
 334:.\Generated_Source\PSoC5/psoc_INT.c ****                 /* The address only issued after Start or ReStart: so check address
 335:.\Generated_Source\PSoC5/psoc_INT.c ****                    to catch this events:
 336:.\Generated_Source\PSoC5/psoc_INT.c ****                     FF : sets Addr phase with byte_complete interrupt trigger.
 337:.\Generated_Source\PSoC5/psoc_INT.c ****                     UDB: sets Addr phase immediately after Start or ReStart. */
 338:.\Generated_Source\PSoC5/psoc_INT.c ****                 if(psoc_CHECK_ADDRESS_STS(tmpCsr))
 339:.\Generated_Source\PSoC5/psoc_INT.c ****                 {
 340:.\Generated_Source\PSoC5/psoc_INT.c ****                     /* Check for software address detection */
 341:.\Generated_Source\PSoC5/psoc_INT.c ****                     #if(psoc_SW_ADRR_DECODE)
 342:.\Generated_Source\PSoC5/psoc_INT.c ****                         tmp8 = psoc_GET_SLAVE_ADDR(psoc_DATA_REG);
 343:.\Generated_Source\PSoC5/psoc_INT.c **** 
 344:.\Generated_Source\PSoC5/psoc_INT.c ****                         if(tmp8 == psoc_slAddress)   /* Check for address match */
 345:.\Generated_Source\PSoC5/psoc_INT.c ****                         {
 346:.\Generated_Source\PSoC5/psoc_INT.c ****                             if(0u != (psoc_DATA_REG & psoc_READ_FLAG))
 347:.\Generated_Source\PSoC5/psoc_INT.c ****                             {
 348:.\Generated_Source\PSoC5/psoc_INT.c ****                                 /* Place code to prepare read buffer here                  */
 349:.\Generated_Source\PSoC5/psoc_INT.c ****                                 /* `#START psoc_SW_PREPARE_READ_BUF_interrupt` */
 350:.\Generated_Source\PSoC5/psoc_INT.c **** 
 351:.\Generated_Source\PSoC5/psoc_INT.c ****                                 /* `#END` */
 352:.\Generated_Source\PSoC5/psoc_INT.c **** 
 353:.\Generated_Source\PSoC5/psoc_INT.c ****                                 /* Prepare next opeation to read, get data and place in data regist
 354:.\Generated_Source\PSoC5/psoc_INT.c ****                                 if(psoc_slRdBufIndex < psoc_slRdBufSize)
 355:.\Generated_Source\PSoC5/psoc_INT.c ****                                 {
 356:.\Generated_Source\PSoC5/psoc_INT.c ****                                     /* Load first data byte from array */
 357:.\Generated_Source\PSoC5/psoc_INT.c ****                                     psoc_DATA_REG = psoc_slRdBufPtr[psoc_slRdBufIndex];
 358:.\Generated_Source\PSoC5/psoc_INT.c ****                                     psoc_ACK_AND_TRANSMIT;
 359:.\Generated_Source\PSoC5/psoc_INT.c ****                                     psoc_slRdBufIndex++;
 360:.\Generated_Source\PSoC5/psoc_INT.c **** 
 361:.\Generated_Source\PSoC5/psoc_INT.c ****                                     psoc_slStatus |= psoc_SSTAT_RD_BUSY;
 362:.\Generated_Source\PSoC5/psoc_INT.c ****                                 }
 363:.\Generated_Source\PSoC5/psoc_INT.c ****                                 else    /* Overflow: provide 0xFF on the bus */
 364:.\Generated_Source\PSoC5/psoc_INT.c ****                                 {
 365:.\Generated_Source\PSoC5/psoc_INT.c ****                                     psoc_DATA_REG = psoc_OVERFLOW_RETURN;
 366:.\Generated_Source\PSoC5/psoc_INT.c ****                                     psoc_ACK_AND_TRANSMIT;
 367:.\Generated_Source\PSoC5/psoc_INT.c **** 
 368:.\Generated_Source\PSoC5/psoc_INT.c ****                                     psoc_slStatus  |= (psoc_SSTAT_RD_BUSY |
 369:.\Generated_Source\PSoC5/psoc_INT.c ****                                                                    psoc_SSTAT_RD_ERR_OVFL);
 370:.\Generated_Source\PSoC5/psoc_INT.c ****                                 }
 371:.\Generated_Source\PSoC5/psoc_INT.c **** 
 372:.\Generated_Source\PSoC5/psoc_INT.c ****                                 psoc_state = psoc_SM_SL_RD_DATA;
 373:.\Generated_Source\PSoC5/psoc_INT.c ****                             }
 374:.\Generated_Source\PSoC5/psoc_INT.c ****                             else  /* Write transaction: receive 1st byte */
 375:.\Generated_Source\PSoC5/psoc_INT.c ****                             {
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\ccYOliLH.s 			page 19


 376:.\Generated_Source\PSoC5/psoc_INT.c ****                                 psoc_ACK_AND_RECEIVE;
 377:.\Generated_Source\PSoC5/psoc_INT.c ****                                 psoc_state = psoc_SM_SL_WR_DATA;
 378:.\Generated_Source\PSoC5/psoc_INT.c **** 
 379:.\Generated_Source\PSoC5/psoc_INT.c ****                                 psoc_slStatus |= psoc_SSTAT_WR_BUSY;
 380:.\Generated_Source\PSoC5/psoc_INT.c ****                                 psoc_ENABLE_INT_ON_STOP;
 381:.\Generated_Source\PSoC5/psoc_INT.c ****                             }
 382:.\Generated_Source\PSoC5/psoc_INT.c ****                         }    
 383:.\Generated_Source\PSoC5/psoc_INT.c ****                         else
 384:.\Generated_Source\PSoC5/psoc_INT.c ****                         {
 385:.\Generated_Source\PSoC5/psoc_INT.c ****                             /*     Place code to compare for additional address here    */
 386:.\Generated_Source\PSoC5/psoc_INT.c ****                             /* `#START psoc_SW_ADDR_COMPARE_interruptStart` */
 387:.\Generated_Source\PSoC5/psoc_INT.c **** 
 388:.\Generated_Source\PSoC5/psoc_INT.c ****                             /* `#END` */
 389:.\Generated_Source\PSoC5/psoc_INT.c ****                             
 390:.\Generated_Source\PSoC5/psoc_INT.c ****                             psoc_NAK_AND_RECEIVE;   /* NACK address */
 391:.\Generated_Source\PSoC5/psoc_INT.c **** 
 392:.\Generated_Source\PSoC5/psoc_INT.c ****                             /* Place code to end of condition for NACK generation here */
 393:.\Generated_Source\PSoC5/psoc_INT.c ****                             /* `#START psoc_SW_ADDR_COMPARE_interruptEnd`  */
 394:.\Generated_Source\PSoC5/psoc_INT.c **** 
 395:.\Generated_Source\PSoC5/psoc_INT.c ****                             /* `#END` */
 396:.\Generated_Source\PSoC5/psoc_INT.c ****                         }
 397:.\Generated_Source\PSoC5/psoc_INT.c ****                         
 398:.\Generated_Source\PSoC5/psoc_INT.c ****                     #else /* (psoc_HW_ADRR_DECODE) */
 399:.\Generated_Source\PSoC5/psoc_INT.c ****                         
 400:.\Generated_Source\PSoC5/psoc_INT.c ****                         if(0u != (psoc_DATA_REG & psoc_READ_FLAG))
 401:.\Generated_Source\PSoC5/psoc_INT.c ****                         {
 402:.\Generated_Source\PSoC5/psoc_INT.c ****                             /* Place code to prepare read buffer here                  */
 403:.\Generated_Source\PSoC5/psoc_INT.c ****                             /* `#START psoc_HW_PREPARE_READ_BUF_interrupt` */
 404:.\Generated_Source\PSoC5/psoc_INT.c **** 
 405:.\Generated_Source\PSoC5/psoc_INT.c ****                             /* `#END` */
 406:.\Generated_Source\PSoC5/psoc_INT.c **** 
 407:.\Generated_Source\PSoC5/psoc_INT.c ****                             /* Prepare next opeation to read, get data and place in data register *
 408:.\Generated_Source\PSoC5/psoc_INT.c ****                             if(psoc_slRdBufIndex < psoc_slRdBufSize)
 409:.\Generated_Source\PSoC5/psoc_INT.c ****                             {
 410:.\Generated_Source\PSoC5/psoc_INT.c ****                                 /* Load first data byte from array */
 411:.\Generated_Source\PSoC5/psoc_INT.c ****                                 psoc_DATA_REG = psoc_slRdBufPtr[psoc_slRdBufIndex];
 412:.\Generated_Source\PSoC5/psoc_INT.c ****                                 psoc_ACK_AND_TRANSMIT;
 413:.\Generated_Source\PSoC5/psoc_INT.c ****                                 psoc_slRdBufIndex++;
 414:.\Generated_Source\PSoC5/psoc_INT.c **** 
 415:.\Generated_Source\PSoC5/psoc_INT.c ****                                 psoc_slStatus |= psoc_SSTAT_RD_BUSY;
 416:.\Generated_Source\PSoC5/psoc_INT.c ****                             }
 417:.\Generated_Source\PSoC5/psoc_INT.c ****                             else    /* Overflow: provide 0xFF on the bus */
 418:.\Generated_Source\PSoC5/psoc_INT.c ****                             {
 419:.\Generated_Source\PSoC5/psoc_INT.c ****                                 psoc_DATA_REG = psoc_OVERFLOW_RETURN;
 420:.\Generated_Source\PSoC5/psoc_INT.c ****                                 psoc_ACK_AND_TRANSMIT;
 421:.\Generated_Source\PSoC5/psoc_INT.c **** 
 422:.\Generated_Source\PSoC5/psoc_INT.c ****                                 psoc_slStatus  |= (psoc_SSTAT_RD_BUSY |
 423:.\Generated_Source\PSoC5/psoc_INT.c ****                                                                psoc_SSTAT_RD_ERR_OVFL);
 424:.\Generated_Source\PSoC5/psoc_INT.c ****                             }
 425:.\Generated_Source\PSoC5/psoc_INT.c **** 
 426:.\Generated_Source\PSoC5/psoc_INT.c ****                             psoc_state = psoc_SM_SL_RD_DATA;
 427:.\Generated_Source\PSoC5/psoc_INT.c ****                         }
 428:.\Generated_Source\PSoC5/psoc_INT.c ****                         else  /* Write transaction: receive 1st byte */
 429:.\Generated_Source\PSoC5/psoc_INT.c ****                         {
 430:.\Generated_Source\PSoC5/psoc_INT.c ****                             psoc_ACK_AND_RECEIVE;
 431:.\Generated_Source\PSoC5/psoc_INT.c ****                             psoc_state = psoc_SM_SL_WR_DATA;
 432:.\Generated_Source\PSoC5/psoc_INT.c **** 
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\ccYOliLH.s 			page 20


 433:.\Generated_Source\PSoC5/psoc_INT.c ****                             psoc_slStatus |= psoc_SSTAT_WR_BUSY;
 434:.\Generated_Source\PSoC5/psoc_INT.c ****                             psoc_ENABLE_INT_ON_STOP;
 435:.\Generated_Source\PSoC5/psoc_INT.c ****                         }
 436:.\Generated_Source\PSoC5/psoc_INT.c ****                         
 437:.\Generated_Source\PSoC5/psoc_INT.c ****                     #endif /* (psoc_SW_ADRR_DECODE) */
 438:.\Generated_Source\PSoC5/psoc_INT.c ****                 }
 439:.\Generated_Source\PSoC5/psoc_INT.c ****                 /* Data states */
 440:.\Generated_Source\PSoC5/psoc_INT.c ****                 /* Data master writes into slave */
 441:.\Generated_Source\PSoC5/psoc_INT.c ****                 else if(psoc_state == psoc_SM_SL_WR_DATA)
 442:.\Generated_Source\PSoC5/psoc_INT.c ****                 {
 443:.\Generated_Source\PSoC5/psoc_INT.c ****                     if(psoc_slWrBufIndex < psoc_slWrBufSize)
 444:.\Generated_Source\PSoC5/psoc_INT.c ****                     {
 445:.\Generated_Source\PSoC5/psoc_INT.c ****                         tmp8 = psoc_DATA_REG;
 446:.\Generated_Source\PSoC5/psoc_INT.c ****                         psoc_ACK_AND_RECEIVE;
 447:.\Generated_Source\PSoC5/psoc_INT.c ****                         psoc_slWrBufPtr[psoc_slWrBufIndex] = tmp8;
 448:.\Generated_Source\PSoC5/psoc_INT.c ****                         psoc_slWrBufIndex++;
 449:.\Generated_Source\PSoC5/psoc_INT.c ****                     }
 450:.\Generated_Source\PSoC5/psoc_INT.c ****                     else  /* of array: complete write, send NACK */
 451:.\Generated_Source\PSoC5/psoc_INT.c ****                     {
 452:.\Generated_Source\PSoC5/psoc_INT.c ****                         psoc_NAK_AND_RECEIVE;
 453:.\Generated_Source\PSoC5/psoc_INT.c **** 
 454:.\Generated_Source\PSoC5/psoc_INT.c ****                         psoc_slStatus |= psoc_SSTAT_WR_ERR_OVFL;
 455:.\Generated_Source\PSoC5/psoc_INT.c ****                     }
 456:.\Generated_Source\PSoC5/psoc_INT.c ****                 }
 457:.\Generated_Source\PSoC5/psoc_INT.c ****                 /* Data master reads from slave */
 458:.\Generated_Source\PSoC5/psoc_INT.c ****                 else if(psoc_state == psoc_SM_SL_RD_DATA)
 459:.\Generated_Source\PSoC5/psoc_INT.c ****                 {
 460:.\Generated_Source\PSoC5/psoc_INT.c ****                     if(psoc_CHECK_DATA_ACK(tmpCsr))
 461:.\Generated_Source\PSoC5/psoc_INT.c ****                     {
 462:.\Generated_Source\PSoC5/psoc_INT.c ****                         if(psoc_slRdBufIndex < psoc_slRdBufSize)
 463:.\Generated_Source\PSoC5/psoc_INT.c ****                         {
 464:.\Generated_Source\PSoC5/psoc_INT.c ****                              /* Get data from array */
 465:.\Generated_Source\PSoC5/psoc_INT.c ****                             psoc_DATA_REG = psoc_slRdBufPtr[psoc_slRdBufIndex];
 466:.\Generated_Source\PSoC5/psoc_INT.c ****                             psoc_TRANSMIT_DATA;
 467:.\Generated_Source\PSoC5/psoc_INT.c ****                             psoc_slRdBufIndex++;
 468:.\Generated_Source\PSoC5/psoc_INT.c ****                         }
 469:.\Generated_Source\PSoC5/psoc_INT.c ****                         else   /* Overflow: provide 0xFF on the bus */
 470:.\Generated_Source\PSoC5/psoc_INT.c ****                         {
 471:.\Generated_Source\PSoC5/psoc_INT.c ****                             psoc_DATA_REG = psoc_OVERFLOW_RETURN;
 472:.\Generated_Source\PSoC5/psoc_INT.c ****                             psoc_TRANSMIT_DATA;
 473:.\Generated_Source\PSoC5/psoc_INT.c **** 
 474:.\Generated_Source\PSoC5/psoc_INT.c ****                             psoc_slStatus |= psoc_SSTAT_RD_ERR_OVFL;
 475:.\Generated_Source\PSoC5/psoc_INT.c ****                         }
 476:.\Generated_Source\PSoC5/psoc_INT.c ****                     }
 477:.\Generated_Source\PSoC5/psoc_INT.c ****                     else  /* Last byte was NACKed: read complete */
 478:.\Generated_Source\PSoC5/psoc_INT.c ****                     {
 479:.\Generated_Source\PSoC5/psoc_INT.c ****                         /* Only NACK appears on the bus */
 480:.\Generated_Source\PSoC5/psoc_INT.c ****                         psoc_DATA_REG = psoc_OVERFLOW_RETURN;
 481:.\Generated_Source\PSoC5/psoc_INT.c ****                         psoc_NAK_AND_TRANSMIT;
 482:.\Generated_Source\PSoC5/psoc_INT.c **** 
 483:.\Generated_Source\PSoC5/psoc_INT.c ****                         psoc_slStatus &= ((uint8) ~psoc_SSTAT_RD_BUSY);
 484:.\Generated_Source\PSoC5/psoc_INT.c ****                         psoc_slStatus |= ((uint8)  psoc_SSTAT_RD_CMPLT);
 485:.\Generated_Source\PSoC5/psoc_INT.c **** 
 486:.\Generated_Source\PSoC5/psoc_INT.c ****                         psoc_state = psoc_SM_IDLE;
 487:.\Generated_Source\PSoC5/psoc_INT.c ****                     }
 488:.\Generated_Source\PSoC5/psoc_INT.c ****                 }
 489:.\Generated_Source\PSoC5/psoc_INT.c ****                 else
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\ccYOliLH.s 			page 21


 490:.\Generated_Source\PSoC5/psoc_INT.c ****                 {
 491:.\Generated_Source\PSoC5/psoc_INT.c ****                     #if(psoc_TIMEOUT_ENABLED)
 492:.\Generated_Source\PSoC5/psoc_INT.c ****                         /* Exit from interrupt to take a chance for timeout timer handle this case 
 493:.\Generated_Source\PSoC5/psoc_INT.c ****                         psoc_DisableInt();
 494:.\Generated_Source\PSoC5/psoc_INT.c ****                         psoc_ClearPendingInt();
 495:.\Generated_Source\PSoC5/psoc_INT.c ****                     #else
 496:.\Generated_Source\PSoC5/psoc_INT.c ****                         /* Block execution flow: unexpected condition */
 497:.\Generated_Source\PSoC5/psoc_INT.c ****                         CYASSERT(0u != 0u);
 498:.\Generated_Source\PSoC5/psoc_INT.c ****                     #endif /* (psoc_TIMEOUT_ENABLED) */
 499:.\Generated_Source\PSoC5/psoc_INT.c ****                 }
 500:.\Generated_Source\PSoC5/psoc_INT.c ****             }
 501:.\Generated_Source\PSoC5/psoc_INT.c ****         #endif /* (psoc_MODE_SLAVE_ENABLED) */
 502:.\Generated_Source\PSoC5/psoc_INT.c ****     }
 503:.\Generated_Source\PSoC5/psoc_INT.c ****     else
 504:.\Generated_Source\PSoC5/psoc_INT.c ****     {
 505:.\Generated_Source\PSoC5/psoc_INT.c ****         /* The FSM skips master and slave processing: return to IDLE */
 506:.\Generated_Source\PSoC5/psoc_INT.c ****         psoc_state = psoc_SM_IDLE;
 610              		.loc 1 506 0
 611 0580 40F20003 		movw	r3, #:lower16:psoc_state
 612 0584 C0F20003 		movt	r3, #:upper16:psoc_state
 613 0588 4FF01002 		mov	r2, #16
 614 058c 1A70     		strb	r2, [r3, #0]
 615              	.L1:
 507:.\Generated_Source\PSoC5/psoc_INT.c ****     }
 508:.\Generated_Source\PSoC5/psoc_INT.c **** }
 616              		.loc 1 508 0
 617 058e 07F10807 		add	r7, r7, #8
 618 0592 BD46     		mov	sp, r7
 619 0594 80BD     		pop	{r7, pc}
 620              		.cfi_endproc
 621              	.LFE0:
 622              		.size	psoc_ISR, .-psoc_ISR
 623 0596 00BF     		.text
 624              	.Letext0:
 625              		.file 2 ".\\Generated_Source\\PSoC5\\cytypes.h"
 626              		.file 3 ".\\Generated_Source\\PSoC5\\psoc_PVT.h"
 627              		.section	.debug_info,"",%progbits
 628              	.Ldebug_info0:
 629 0000 62010000 		.4byte	0x162
 630 0004 0200     		.2byte	0x2
 631 0006 00000000 		.4byte	.Ldebug_abbrev0
 632 000a 04       		.byte	0x4
 633 000b 01       		.uleb128 0x1
 634 000c 5B010000 		.4byte	.LASF26
 635 0010 01       		.byte	0x1
 636 0011 DF010000 		.4byte	.LASF27
 637 0015 34000000 		.4byte	.LASF28
 638 0019 00000000 		.4byte	.Ldebug_ranges0+0
 639 001d 00000000 		.4byte	0
 640 0021 00000000 		.4byte	0
 641 0025 00000000 		.4byte	.Ldebug_line0
 642 0029 02       		.uleb128 0x2
 643 002a 01       		.byte	0x1
 644 002b 06       		.byte	0x6
 645 002c D3010000 		.4byte	.LASF0
 646 0030 02       		.uleb128 0x2
 647 0031 01       		.byte	0x1
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\ccYOliLH.s 			page 22


 648 0032 08       		.byte	0x8
 649 0033 7B000000 		.4byte	.LASF1
 650 0037 02       		.uleb128 0x2
 651 0038 02       		.byte	0x2
 652 0039 05       		.byte	0x5
 653 003a 51010000 		.4byte	.LASF2
 654 003e 02       		.uleb128 0x2
 655 003f 02       		.byte	0x2
 656 0040 07       		.byte	0x7
 657 0041 0D000000 		.4byte	.LASF3
 658 0045 02       		.uleb128 0x2
 659 0046 04       		.byte	0x4
 660 0047 05       		.byte	0x5
 661 0048 B8010000 		.4byte	.LASF4
 662 004c 02       		.uleb128 0x2
 663 004d 04       		.byte	0x4
 664 004e 07       		.byte	0x7
 665 004f 8E000000 		.4byte	.LASF5
 666 0053 02       		.uleb128 0x2
 667 0054 08       		.byte	0x8
 668 0055 05       		.byte	0x5
 669 0056 2D010000 		.4byte	.LASF6
 670 005a 02       		.uleb128 0x2
 671 005b 08       		.byte	0x8
 672 005c 07       		.byte	0x7
 673 005d F2000000 		.4byte	.LASF7
 674 0061 03       		.uleb128 0x3
 675 0062 04       		.byte	0x4
 676 0063 05       		.byte	0x5
 677 0064 696E7400 		.ascii	"int\000"
 678 0068 02       		.uleb128 0x2
 679 0069 04       		.byte	0x4
 680 006a 07       		.byte	0x7
 681 006b E5000000 		.4byte	.LASF8
 682 006f 04       		.uleb128 0x4
 683 0070 A0000000 		.4byte	.LASF9
 684 0074 02       		.byte	0x2
 685 0075 5B       		.byte	0x5b
 686 0076 30000000 		.4byte	0x30
 687 007a 04       		.uleb128 0x4
 688 007b DE000000 		.4byte	.LASF10
 689 007f 02       		.byte	0x2
 690 0080 5D       		.byte	0x5d
 691 0081 4C000000 		.4byte	0x4c
 692 0085 02       		.uleb128 0x2
 693 0086 04       		.byte	0x4
 694 0087 04       		.byte	0x4
 695 0088 75000000 		.4byte	.LASF11
 696 008c 02       		.uleb128 0x2
 697 008d 08       		.byte	0x8
 698 008e 04       		.byte	0x4
 699 008f CC000000 		.4byte	.LASF12
 700 0093 02       		.uleb128 0x2
 701 0094 01       		.byte	0x1
 702 0095 08       		.byte	0x8
 703 0096 3B010000 		.4byte	.LASF13
 704 009a 04       		.uleb128 0x4
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\ccYOliLH.s 			page 23


 705 009b 89000000 		.4byte	.LASF14
 706 009f 02       		.byte	0x2
 707 00a0 F0       		.byte	0xf0
 708 00a1 A5000000 		.4byte	0xa5
 709 00a5 05       		.uleb128 0x5
 710 00a6 6F000000 		.4byte	0x6f
 711 00aa 04       		.uleb128 0x4
 712 00ab 07000000 		.4byte	.LASF15
 713 00af 02       		.byte	0x2
 714 00b0 F2       		.byte	0xf2
 715 00b1 B5000000 		.4byte	0xb5
 716 00b5 05       		.uleb128 0x5
 717 00b6 7A000000 		.4byte	0x7a
 718 00ba 02       		.uleb128 0x2
 719 00bb 04       		.byte	0x4
 720 00bc 07       		.byte	0x7
 721 00bd 24010000 		.4byte	.LASF16
 722 00c1 06       		.uleb128 0x6
 723 00c2 01       		.byte	0x1
 724 00c3 09010000 		.4byte	.LASF29
 725 00c7 01       		.byte	0x1
 726 00c8 2E       		.byte	0x2e
 727 00c9 01       		.byte	0x1
 728 00ca 00000000 		.4byte	.LFB0
 729 00ce 96050000 		.4byte	.LFE0
 730 00d2 00000000 		.4byte	.LLST0
 731 00d6 01       		.byte	0x1
 732 00d7 EA000000 		.4byte	0xea
 733 00db 07       		.uleb128 0x7
 734 00dc 00000000 		.4byte	.LASF30
 735 00e0 01       		.byte	0x1
 736 00e1 34       		.byte	0x34
 737 00e2 6F000000 		.4byte	0x6f
 738 00e6 02       		.byte	0x2
 739 00e7 91       		.byte	0x91
 740 00e8 77       		.sleb128 -9
 741 00e9 00       		.byte	0
 742 00ea 08       		.uleb128 0x8
 743 00eb D3000000 		.4byte	.LASF17
 744 00ef 03       		.byte	0x3
 745 00f0 23       		.byte	0x23
 746 00f1 A5000000 		.4byte	0xa5
 747 00f5 01       		.byte	0x1
 748 00f6 01       		.byte	0x1
 749 00f7 08       		.uleb128 0x8
 750 00f8 03020000 		.4byte	.LASF18
 751 00fc 03       		.byte	0x3
 752 00fd 27       		.byte	0x27
 753 00fe A5000000 		.4byte	0xa5
 754 0102 01       		.byte	0x1
 755 0103 01       		.byte	0x1
 756 0104 08       		.uleb128 0x8
 757 0105 40010000 		.4byte	.LASF19
 758 0109 03       		.byte	0x3
 759 010a 28       		.byte	0x28
 760 010b A5000000 		.4byte	0xa5
 761 010f 01       		.byte	0x1
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\ccYOliLH.s 			page 24


 762 0110 01       		.byte	0x1
 763 0111 08       		.uleb128 0x8
 764 0112 C1010000 		.4byte	.LASF20
 765 0116 03       		.byte	0x3
 766 0117 2B       		.byte	0x2b
 767 0118 1E010000 		.4byte	0x11e
 768 011c 01       		.byte	0x1
 769 011d 01       		.byte	0x1
 770 011e 09       		.uleb128 0x9
 771 011f 04       		.byte	0x4
 772 0120 A5000000 		.4byte	0xa5
 773 0124 08       		.uleb128 0x8
 774 0125 B9000000 		.4byte	.LASF21
 775 0129 03       		.byte	0x3
 776 012a 2C       		.byte	0x2c
 777 012b A5000000 		.4byte	0xa5
 778 012f 01       		.byte	0x1
 779 0130 01       		.byte	0x1
 780 0131 08       		.uleb128 0x8
 781 0132 20000000 		.4byte	.LASF22
 782 0136 03       		.byte	0x3
 783 0137 2D       		.byte	0x2d
 784 0138 A5000000 		.4byte	0xa5
 785 013c 01       		.byte	0x1
 786 013d 01       		.byte	0x1
 787 013e 08       		.uleb128 0x8
 788 013f 12010000 		.4byte	.LASF23
 789 0143 03       		.byte	0x3
 790 0144 30       		.byte	0x30
 791 0145 1E010000 		.4byte	0x11e
 792 0149 01       		.byte	0x1
 793 014a 01       		.byte	0x1
 794 014b 08       		.uleb128 0x8
 795 014c A6000000 		.4byte	.LASF24
 796 0150 03       		.byte	0x3
 797 0151 31       		.byte	0x31
 798 0152 A5000000 		.4byte	0xa5
 799 0156 01       		.byte	0x1
 800 0157 01       		.byte	0x1
 801 0158 08       		.uleb128 0x8
 802 0159 A4010000 		.4byte	.LASF25
 803 015d 03       		.byte	0x3
 804 015e 32       		.byte	0x32
 805 015f A5000000 		.4byte	0xa5
 806 0163 01       		.byte	0x1
 807 0164 01       		.byte	0x1
 808 0165 00       		.byte	0
 809              		.section	.debug_abbrev,"",%progbits
 810              	.Ldebug_abbrev0:
 811 0000 01       		.uleb128 0x1
 812 0001 11       		.uleb128 0x11
 813 0002 01       		.byte	0x1
 814 0003 25       		.uleb128 0x25
 815 0004 0E       		.uleb128 0xe
 816 0005 13       		.uleb128 0x13
 817 0006 0B       		.uleb128 0xb
 818 0007 03       		.uleb128 0x3
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\ccYOliLH.s 			page 25


 819 0008 0E       		.uleb128 0xe
 820 0009 1B       		.uleb128 0x1b
 821 000a 0E       		.uleb128 0xe
 822 000b 55       		.uleb128 0x55
 823 000c 06       		.uleb128 0x6
 824 000d 11       		.uleb128 0x11
 825 000e 01       		.uleb128 0x1
 826 000f 52       		.uleb128 0x52
 827 0010 01       		.uleb128 0x1
 828 0011 10       		.uleb128 0x10
 829 0012 06       		.uleb128 0x6
 830 0013 00       		.byte	0
 831 0014 00       		.byte	0
 832 0015 02       		.uleb128 0x2
 833 0016 24       		.uleb128 0x24
 834 0017 00       		.byte	0
 835 0018 0B       		.uleb128 0xb
 836 0019 0B       		.uleb128 0xb
 837 001a 3E       		.uleb128 0x3e
 838 001b 0B       		.uleb128 0xb
 839 001c 03       		.uleb128 0x3
 840 001d 0E       		.uleb128 0xe
 841 001e 00       		.byte	0
 842 001f 00       		.byte	0
 843 0020 03       		.uleb128 0x3
 844 0021 24       		.uleb128 0x24
 845 0022 00       		.byte	0
 846 0023 0B       		.uleb128 0xb
 847 0024 0B       		.uleb128 0xb
 848 0025 3E       		.uleb128 0x3e
 849 0026 0B       		.uleb128 0xb
 850 0027 03       		.uleb128 0x3
 851 0028 08       		.uleb128 0x8
 852 0029 00       		.byte	0
 853 002a 00       		.byte	0
 854 002b 04       		.uleb128 0x4
 855 002c 16       		.uleb128 0x16
 856 002d 00       		.byte	0
 857 002e 03       		.uleb128 0x3
 858 002f 0E       		.uleb128 0xe
 859 0030 3A       		.uleb128 0x3a
 860 0031 0B       		.uleb128 0xb
 861 0032 3B       		.uleb128 0x3b
 862 0033 0B       		.uleb128 0xb
 863 0034 49       		.uleb128 0x49
 864 0035 13       		.uleb128 0x13
 865 0036 00       		.byte	0
 866 0037 00       		.byte	0
 867 0038 05       		.uleb128 0x5
 868 0039 35       		.uleb128 0x35
 869 003a 00       		.byte	0
 870 003b 49       		.uleb128 0x49
 871 003c 13       		.uleb128 0x13
 872 003d 00       		.byte	0
 873 003e 00       		.byte	0
 874 003f 06       		.uleb128 0x6
 875 0040 2E       		.uleb128 0x2e
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\ccYOliLH.s 			page 26


 876 0041 01       		.byte	0x1
 877 0042 3F       		.uleb128 0x3f
 878 0043 0C       		.uleb128 0xc
 879 0044 03       		.uleb128 0x3
 880 0045 0E       		.uleb128 0xe
 881 0046 3A       		.uleb128 0x3a
 882 0047 0B       		.uleb128 0xb
 883 0048 3B       		.uleb128 0x3b
 884 0049 0B       		.uleb128 0xb
 885 004a 27       		.uleb128 0x27
 886 004b 0C       		.uleb128 0xc
 887 004c 11       		.uleb128 0x11
 888 004d 01       		.uleb128 0x1
 889 004e 12       		.uleb128 0x12
 890 004f 01       		.uleb128 0x1
 891 0050 40       		.uleb128 0x40
 892 0051 06       		.uleb128 0x6
 893 0052 9642     		.uleb128 0x2116
 894 0054 0C       		.uleb128 0xc
 895 0055 01       		.uleb128 0x1
 896 0056 13       		.uleb128 0x13
 897 0057 00       		.byte	0
 898 0058 00       		.byte	0
 899 0059 07       		.uleb128 0x7
 900 005a 34       		.uleb128 0x34
 901 005b 00       		.byte	0
 902 005c 03       		.uleb128 0x3
 903 005d 0E       		.uleb128 0xe
 904 005e 3A       		.uleb128 0x3a
 905 005f 0B       		.uleb128 0xb
 906 0060 3B       		.uleb128 0x3b
 907 0061 0B       		.uleb128 0xb
 908 0062 49       		.uleb128 0x49
 909 0063 13       		.uleb128 0x13
 910 0064 02       		.uleb128 0x2
 911 0065 0A       		.uleb128 0xa
 912 0066 00       		.byte	0
 913 0067 00       		.byte	0
 914 0068 08       		.uleb128 0x8
 915 0069 34       		.uleb128 0x34
 916 006a 00       		.byte	0
 917 006b 03       		.uleb128 0x3
 918 006c 0E       		.uleb128 0xe
 919 006d 3A       		.uleb128 0x3a
 920 006e 0B       		.uleb128 0xb
 921 006f 3B       		.uleb128 0x3b
 922 0070 0B       		.uleb128 0xb
 923 0071 49       		.uleb128 0x49
 924 0072 13       		.uleb128 0x13
 925 0073 3F       		.uleb128 0x3f
 926 0074 0C       		.uleb128 0xc
 927 0075 3C       		.uleb128 0x3c
 928 0076 0C       		.uleb128 0xc
 929 0077 00       		.byte	0
 930 0078 00       		.byte	0
 931 0079 09       		.uleb128 0x9
 932 007a 0F       		.uleb128 0xf
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\ccYOliLH.s 			page 27


 933 007b 00       		.byte	0
 934 007c 0B       		.uleb128 0xb
 935 007d 0B       		.uleb128 0xb
 936 007e 49       		.uleb128 0x49
 937 007f 13       		.uleb128 0x13
 938 0080 00       		.byte	0
 939 0081 00       		.byte	0
 940 0082 00       		.byte	0
 941              		.section	.debug_loc,"",%progbits
 942              	.Ldebug_loc0:
 943              	.LLST0:
 944 0000 00000000 		.4byte	.LFB0
 945 0004 02000000 		.4byte	.LCFI0
 946 0008 0200     		.2byte	0x2
 947 000a 7D       		.byte	0x7d
 948 000b 00       		.sleb128 0
 949 000c 02000000 		.4byte	.LCFI0
 950 0010 04000000 		.4byte	.LCFI1
 951 0014 0200     		.2byte	0x2
 952 0016 7D       		.byte	0x7d
 953 0017 08       		.sleb128 8
 954 0018 04000000 		.4byte	.LCFI1
 955 001c 06000000 		.4byte	.LCFI2
 956 0020 0200     		.2byte	0x2
 957 0022 7D       		.byte	0x7d
 958 0023 10       		.sleb128 16
 959 0024 06000000 		.4byte	.LCFI2
 960 0028 96050000 		.4byte	.LFE0
 961 002c 0200     		.2byte	0x2
 962 002e 77       		.byte	0x77
 963 002f 10       		.sleb128 16
 964 0030 00000000 		.4byte	0
 965 0034 00000000 		.4byte	0
 966              		.section	.debug_aranges,"",%progbits
 967 0000 1C000000 		.4byte	0x1c
 968 0004 0200     		.2byte	0x2
 969 0006 00000000 		.4byte	.Ldebug_info0
 970 000a 04       		.byte	0x4
 971 000b 00       		.byte	0
 972 000c 0000     		.2byte	0
 973 000e 0000     		.2byte	0
 974 0010 00000000 		.4byte	.LFB0
 975 0014 96050000 		.4byte	.LFE0-.LFB0
 976 0018 00000000 		.4byte	0
 977 001c 00000000 		.4byte	0
 978              		.section	.debug_ranges,"",%progbits
 979              	.Ldebug_ranges0:
 980 0000 00000000 		.4byte	.LFB0
 981 0004 96050000 		.4byte	.LFE0
 982 0008 00000000 		.4byte	0
 983 000c 00000000 		.4byte	0
 984              		.section	.debug_line,"",%progbits
 985              	.Ldebug_line0:
 986 0000 39010000 		.section	.debug_str,"MS",%progbits,1
 986      02005500 
 986      00000201 
 986      FB0E0D00 
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\ccYOliLH.s 			page 28


 986      01010101 
 987              	.LASF30:
 988 0000 746D7043 		.ascii	"tmpCsr\000"
 988      737200
 989              	.LASF15:
 990 0007 72656733 		.ascii	"reg32\000"
 990      3200
 991              	.LASF3:
 992 000d 73686F72 		.ascii	"short unsigned int\000"
 992      7420756E 
 992      7369676E 
 992      65642069 
 992      6E7400
 993              	.LASF22:
 994 0020 70736F63 		.ascii	"psoc_mstrRdBufIndex\000"
 994      5F6D7374 
 994      72526442 
 994      7566496E 
 994      64657800 
 995              	.LASF28:
 996 0034 433A5C55 		.ascii	"C:\\Users\\Ryan\\Documents\\summer2014\\WindSensor\\"
 996      73657273 
 996      5C527961 
 996      6E5C446F 
 996      63756D65 
 997 0062 6169726D 		.ascii	"airmar_NoGPS.cydsn\000"
 997      61725F4E 
 997      6F475053 
 997      2E637964 
 997      736E00
 998              	.LASF11:
 999 0075 666C6F61 		.ascii	"float\000"
 999      7400
 1000              	.LASF1:
 1001 007b 756E7369 		.ascii	"unsigned char\000"
 1001      676E6564 
 1001      20636861 
 1001      7200
 1002              	.LASF14:
 1003 0089 72656738 		.ascii	"reg8\000"
 1003      00
 1004              	.LASF5:
 1005 008e 6C6F6E67 		.ascii	"long unsigned int\000"
 1005      20756E73 
 1005      69676E65 
 1005      6420696E 
 1005      7400
 1006              	.LASF9:
 1007 00a0 75696E74 		.ascii	"uint8\000"
 1007      3800
 1008              	.LASF24:
 1009 00a6 70736F63 		.ascii	"psoc_mstrWrBufSize\000"
 1009      5F6D7374 
 1009      72577242 
 1009      75665369 
 1009      7A6500
 1010              	.LASF21:
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\ccYOliLH.s 			page 29


 1011 00b9 70736F63 		.ascii	"psoc_mstrRdBufSize\000"
 1011      5F6D7374 
 1011      72526442 
 1011      75665369 
 1011      7A6500
 1012              	.LASF12:
 1013 00cc 646F7562 		.ascii	"double\000"
 1013      6C6500
 1014              	.LASF17:
 1015 00d3 70736F63 		.ascii	"psoc_state\000"
 1015      5F737461 
 1015      746500
 1016              	.LASF10:
 1017 00de 75696E74 		.ascii	"uint32\000"
 1017      333200
 1018              	.LASF8:
 1019 00e5 756E7369 		.ascii	"unsigned int\000"
 1019      676E6564 
 1019      20696E74 
 1019      00
 1020              	.LASF7:
 1021 00f2 6C6F6E67 		.ascii	"long long unsigned int\000"
 1021      206C6F6E 
 1021      6720756E 
 1021      7369676E 
 1021      65642069 
 1022              	.LASF29:
 1023 0109 70736F63 		.ascii	"psoc_ISR\000"
 1023      5F495352 
 1023      00
 1024              	.LASF23:
 1025 0112 70736F63 		.ascii	"psoc_mstrWrBufPtr\000"
 1025      5F6D7374 
 1025      72577242 
 1025      75665074 
 1025      7200
 1026              	.LASF16:
 1027 0124 73697A65 		.ascii	"sizetype\000"
 1027      74797065 
 1027      00
 1028              	.LASF6:
 1029 012d 6C6F6E67 		.ascii	"long long int\000"
 1029      206C6F6E 
 1029      6720696E 
 1029      7400
 1030              	.LASF13:
 1031 013b 63686172 		.ascii	"char\000"
 1031      00
 1032              	.LASF19:
 1033 0140 70736F63 		.ascii	"psoc_mstrControl\000"
 1033      5F6D7374 
 1033      72436F6E 
 1033      74726F6C 
 1033      00
 1034              	.LASF2:
 1035 0151 73686F72 		.ascii	"short int\000"
 1035      7420696E 
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\ccYOliLH.s 			page 30


 1035      7400
 1036              	.LASF26:
 1037 015b 474E5520 		.ascii	"GNU C 4.7.3 20130312 (release) [ARM/embedded-4_7-br"
 1037      4320342E 
 1037      372E3320 
 1037      32303133 
 1037      30333132 
 1038 018e 616E6368 		.ascii	"anch revision 196615]\000"
 1038      20726576 
 1038      6973696F 
 1038      6E203139 
 1038      36363135 
 1039              	.LASF25:
 1040 01a4 70736F63 		.ascii	"psoc_mstrWrBufIndex\000"
 1040      5F6D7374 
 1040      72577242 
 1040      7566496E 
 1040      64657800 
 1041              	.LASF4:
 1042 01b8 6C6F6E67 		.ascii	"long int\000"
 1042      20696E74 
 1042      00
 1043              	.LASF20:
 1044 01c1 70736F63 		.ascii	"psoc_mstrRdBufPtr\000"
 1044      5F6D7374 
 1044      72526442 
 1044      75665074 
 1044      7200
 1045              	.LASF0:
 1046 01d3 7369676E 		.ascii	"signed char\000"
 1046      65642063 
 1046      68617200 
 1047              	.LASF27:
 1048 01df 2E5C4765 		.ascii	".\\Generated_Source\\PSoC5\\psoc_INT.c\000"
 1048      6E657261 
 1048      7465645F 
 1048      536F7572 
 1048      63655C50 
 1049              	.LASF18:
 1050 0203 70736F63 		.ascii	"psoc_mstrStatus\000"
 1050      5F6D7374 
 1050      72537461 
 1050      74757300 
 1051              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.7.3 20130312 (release) [ARM/embedded-4_7-br
